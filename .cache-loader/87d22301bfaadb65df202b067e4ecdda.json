{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/client/analytics_middleware.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/client/analytics_middleware.js","mtime":1521064654000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar actions = _interopRequireWildcard(require(\"./actions\"));\n\nvar _analytics_hooks = _interopRequireDefault(require(\"../../../lib/analytics_hooks.coffee\"));\n\n// FIXME: Rewire\nvar analyticsHooks = _analytics_hooks.default;\n\nvar analyticsMiddleware = function analyticsMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      var result = next(action);\n      var nextState = store.getState(); // track certain types of actions\n\n      switch (action.type) {\n        case actions.UPDATE_USER:\n          {\n            var _action$payload = action.payload,\n                user = _action$payload.user,\n                accountCreated = _action$payload.accountCreated;\n            analyticsHooks.trigger('consignment:account:created', {\n              id: user.id,\n              email: user.email,\n              accountCreated: accountCreated\n            });\n            return result;\n          }\n\n        case actions.SUBMISSION_CREATED:\n          {\n            analyticsHooks.trigger('consignment:submitted', {\n              submissionId: action.payload.submissionId\n            });\n            return result;\n          }\n\n        case actions.SUBMISSION_COMPLETED:\n          {\n            var submissionId = nextState.submissionFlow.submission.id;\n            var assetIds = nextState.submissionFlow.assetIds;\n            analyticsHooks.trigger('consignment:completed', {\n              submissionId: submissionId,\n              assetIds: assetIds\n            });\n            return result;\n          }\n\n        case actions.SUBMISSION_ERROR:\n          {\n            var errors;\n            var errorType = action.payload.errorType;\n\n            if (errorType === 'validation') {\n              errors = nextState.form.describeWork.syncErrors;\n            } else if (errorType === 'convection_create') {\n              errors = 'Error creating submission';\n            } else if (errorType === 'convection_complete_submission') {\n              errors = 'Error completing submission';\n            }\n\n            analyticsHooks.trigger('consignment:submission:error', {\n              type: errorType,\n              errors: errors\n            });\n            return result;\n          }\n\n        case actions.SUBMIT_ARTIST:\n          {\n            var artistId = nextState.submissionFlow.inputs.artist_id;\n            analyticsHooks.trigger('consignment:artist:confirmed', {\n              artistId: artistId\n            });\n            return result;\n          }\n\n        default:\n          return result;\n      }\n    };\n  };\n};\n\nvar _default = analyticsMiddleware;\nexports.default = _default;",{"version":3,"sources":["src/desktop/apps/consign/client/analytics_middleware.js"],"names":["analyticsHooks","analyticsMiddleware","result","next","action","nextState","store","getState","type","actions","UPDATE_USER","payload","user","accountCreated","trigger","id","email","SUBMISSION_CREATED","submissionId","SUBMISSION_COMPLETED","submissionFlow","submission","assetIds","SUBMISSION_ERROR","errors","errorType","form","describeWork","syncErrors","SUBMIT_ARTIST","artistId","inputs","artist_id"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;AACA,IAAIA,yCAAJ;;AAEA,IAAMC,sBAAsB,SAAtBA,mBAAsB;AAAA,SAAS;AAAA,WAAQ,kBAAU;AACrD,UAAMC,SAASC,KAAKC,MAAL,CAAf;AACA,UAAMC,YAAYC,MAAMC,QAAN,EAAlB,CAFqD,CAIrD;;AACA,cAAQH,OAAOI,IAAf;AACE,aAAKC,QAAQC,WAAb;AAA0B;AAAA,kCAIpBN,OAAOO,OAJa;AAAA,gBAEtBC,IAFsB,mBAEtBA,IAFsB;AAAA,gBAGtBC,cAHsB,mBAGtBA,cAHsB;AAKxBb,2BAAec,OAAf,CAAuB,6BAAvB,EAAsD;AACpDC,kBAAIH,KAAKG,EAD2C;AAEpDC,qBAAOJ,KAAKI,KAFwC;AAGpDH,8BAAgBA;AAHoC,aAAtD;AAKA,mBAAOX,MAAP;AACD;;AACD,aAAKO,QAAQQ,kBAAb;AAAiC;AAC/BjB,2BAAec,OAAf,CACE,uBADF,EAEE;AACEI,4BAAcd,OAAOO,OAAP,CAAeO;AAD/B,aAFF;AAMA,mBAAOhB,MAAP;AACD;;AACD,aAAKO,QAAQU,oBAAb;AAAmC;AACjC,gBAAMD,eAAeb,UAAUe,cAAV,CAAyBC,UAAzB,CAAoCN,EAAzD;AACA,gBAAMO,WAAWjB,UAAUe,cAAV,CAAyBE,QAA1C;AACAtB,2BAAec,OAAf,CACE,uBADF,EAEE;AACEI,wCADF;AAEEI;AAFF,aAFF;AAOA,mBAAOpB,MAAP;AACD;;AACD,aAAKO,QAAQc,gBAAb;AAA+B;AAC7B,gBAAIC,MAAJ;AAD6B,gBAGrBC,SAHqB,GAGPrB,OAAOO,OAHA,CAGrBc,SAHqB;;AAI7B,gBAAIA,cAAc,YAAlB,EAAgC;AAC9BD,uBAASnB,UAAUqB,IAAV,CAAeC,YAAf,CAA4BC,UAArC;AACD,aAFD,MAEO,IAAIH,cAAc,mBAAlB,EAAuC;AAC5CD,uBAAS,2BAAT;AACD,aAFM,MAEA,IAAIC,cAAc,gCAAlB,EAAoD;AACzDD,uBAAS,6BAAT;AACD;;AAEDxB,2BAAec,OAAf,CACE,8BADF,EAEE;AAAEN,oBAAMiB,SAAR;AAAmBD;AAAnB,aAFF;AAIA,mBAAOtB,MAAP;AACD;;AACD,aAAKO,QAAQoB,aAAb;AAA4B;AAC1B,gBAAMC,WAAWzB,UAAUe,cAAV,CAAyBW,MAAzB,CAAgCC,SAAjD;AACAhC,2BAAec,OAAf,CACE,8BADF,EAEE;AAAEgB;AAAF,aAFF;AAIA,mBAAO5B,MAAP;AACD;;AACD;AAAS,iBAAOA,MAAP;AA5DX;AA8DD,KAnEoC;AAAA,GAAT;AAAA,CAA5B;;eAqEeD,mB","file":"/Users/eve/development/force/src/desktop/apps/consign/client/analytics_middleware.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import * as actions from './actions'\nimport _analyticsHooks from '../../../lib/analytics_hooks.coffee'\n\n// FIXME: Rewire\nlet analyticsHooks = _analyticsHooks\n\nconst analyticsMiddleware = store => next => action => {\n  const result = next(action)\n  const nextState = store.getState()\n\n  // track certain types of actions\n  switch (action.type) {\n    case actions.UPDATE_USER: {\n      const {\n        user,\n        accountCreated\n      } = action.payload\n      analyticsHooks.trigger('consignment:account:created', {\n        id: user.id,\n        email: user.email,\n        accountCreated: accountCreated\n      })\n      return result\n    }\n    case actions.SUBMISSION_CREATED: {\n      analyticsHooks.trigger(\n        'consignment:submitted',\n        {\n          submissionId: action.payload.submissionId\n        }\n      )\n      return result\n    }\n    case actions.SUBMISSION_COMPLETED: {\n      const submissionId = nextState.submissionFlow.submission.id\n      const assetIds = nextState.submissionFlow.assetIds\n      analyticsHooks.trigger(\n        'consignment:completed',\n        {\n          submissionId,\n          assetIds\n        }\n      )\n      return result\n    }\n    case actions.SUBMISSION_ERROR: {\n      let errors\n\n      const { errorType } = action.payload\n      if (errorType === 'validation') {\n        errors = nextState.form.describeWork.syncErrors\n      } else if (errorType === 'convection_create') {\n        errors = 'Error creating submission'\n      } else if (errorType === 'convection_complete_submission') {\n        errors = 'Error completing submission'\n      }\n\n      analyticsHooks.trigger(\n        'consignment:submission:error',\n        { type: errorType, errors }\n      )\n      return result\n    }\n    case actions.SUBMIT_ARTIST: {\n      const artistId = nextState.submissionFlow.inputs.artist_id\n      analyticsHooks.trigger(\n        'consignment:artist:confirmed',\n        { artistId }\n      )\n      return result\n    }\n    default: return result\n  }\n}\n\nexport default analyticsMiddleware\n"]}]}