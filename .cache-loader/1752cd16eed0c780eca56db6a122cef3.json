{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Router/buildClientApp.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Router/buildClientApp.tsx","mtime":1530569767000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientApp = buildClientApp;\n\nvar _BrowserProtocol = _interopRequireDefault(require(\"farce/lib/BrowserProtocol\"));\n\nvar _HashProtocol = _interopRequireDefault(require(\"farce/lib/HashProtocol\"));\n\nvar _MemoryProtocol = _interopRequireDefault(require(\"farce/lib/MemoryProtocol\"));\n\nvar _queryMiddleware = _interopRequireDefault(require(\"farce/lib/queryMiddleware\"));\n\nvar _foundRelay = require(\"found-relay\");\n\nvar _createInitialFarceRouter = _interopRequireDefault(require(\"found/lib/createInitialFarceRouter\"));\n\nvar _createRender = _interopRequireDefault(require(\"found/lib/createRender\"));\n\nvar _loadableComponents = require(\"loadable-components\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createEnvironment = require(\"../Relay/createEnvironment\");\n\nvar _AppShell = require(\"./AppShell\");\n\nvar _Boot = require(\"./Boot\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nfunction buildClientApp(config) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var routes, user, _config$historyProtoc, historyProtocol, _config$initialRoute, initialRoute, relayBootstrap, currentUser, relayEnvironment, getHistoryProtocol, historyMiddlewares, resolver, render, Router, bootProps, ClientApp;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              routes = config.routes, user = config.user, _config$historyProtoc = config.historyProtocol, historyProtocol = _config$historyProtoc === void 0 ? \"browser\" : _config$historyProtoc, _config$initialRoute = config.initialRoute, initialRoute = _config$initialRoute === void 0 ? \"/\" : _config$initialRoute;\n              relayBootstrap = JSON.parse(window.__RELAY_BOOTSTRAP__ || \"{}\");\n              currentUser = user || {\n                id: process.env.USER_ID,\n                accessToken: process.env.USER_ACCESS_TOKEN\n              };\n              relayEnvironment = (0, _createEnvironment.createEnvironment)({\n                cache: relayBootstrap,\n                user: currentUser\n              });\n\n              getHistoryProtocol = function getHistoryProtocol() {\n                switch (historyProtocol) {\n                  case \"browser\":\n                    return new _BrowserProtocol.default();\n\n                  case \"hash\":\n                    return new _HashProtocol.default();\n\n                  case \"memory\":\n                    return new _MemoryProtocol.default(initialRoute);\n\n                  default:\n                    return new _BrowserProtocol.default();\n                }\n              };\n\n              historyMiddlewares = [_queryMiddleware.default];\n              resolver = new _foundRelay.Resolver(relayEnvironment);\n              render = (0, _createRender.default)({});\n              _context.next = 11;\n              return (0, _createInitialFarceRouter.default)({\n                historyProtocol: getHistoryProtocol(),\n                historyMiddlewares: historyMiddlewares,\n                routeConfig: routes,\n                resolver: resolver,\n                render: render\n              });\n\n            case 11:\n              Router = _context.sent;\n              bootProps = {\n                system: _extends({}, config, {\n                  relayEnvironment: relayEnvironment,\n                  resolver: resolver,\n                  routes: routes,\n                  currentUser: currentUser\n                })\n              };\n              _context.prev = 13;\n              _context.next = 16;\n              return (0, _loadableComponents.loadComponents)();\n\n            case 16:\n              _context.next = 20;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](13);\n\n            case 20:\n              ClientApp = function ClientApp(props) {\n                return _react.default.createElement(_Boot.Boot, _extends({}, bootProps, props), _react.default.createElement(_AppShell.AppShell, null, _react.default.createElement(Router, {\n                  resolver: resolver\n                })));\n              };\n\n              resolve({\n                ClientApp: ClientApp\n              });\n              _context.next = 27;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](0);\n              console.error(\"[Reaction Router/buildClientApp]\", _context.t1);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 24], [13, 18]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}",{"version":3,"sources":["node_modules/@artsy/reaction/src/Router/buildClientApp.tsx"],"names":["buildClientApp","config","Promise","resolve","reject","routes","user","historyProtocol","initialRoute","relayBootstrap","JSON","parse","window","__RELAY_BOOTSTRAP__","currentUser","id","process","env","USER_ID","accessToken","USER_ACCESS_TOKEN","relayEnvironment","cache","getHistoryProtocol","historyMiddlewares","resolver","render","routeConfig","Router","bootProps","system","ClientApp","props","console","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGO,SAASA,cAAT,CAAwBC,MAAxB,EAAwE;AAC7E,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbC,oBAHa,GAOXJ,MAPW,CAGbI,MAHa,EAIbC,IAJa,GAOXL,MAPW,CAIbK,IAJa,0BAOXL,MAPW,CAKbM,eALa,EAKbA,eALa,sCAKK,SALL,iDAOXN,MAPW,CAMbO,YANa,EAMbA,YANa,qCAME,GANF;AASTC,4BATS,GASQC,KAAKC,KAAL,CAAWC,OAAOC,mBAAP,IAA8B,IAAzC,CATR;AAWTC,yBAXS,GAWKR,QAAQ;AAC1BS,oBAAIC,QAAQC,GAAR,CAAYC,OADU;AAE1BC,6BAAaH,QAAQC,GAAR,CAAYG;AAFC,eAXb;AAgBTC,8BAhBS,GAgBU,0CAAkB;AACzCC,uBAAOb,cADkC;AAEzCH,sBAAMQ;AAFmC,eAAlB,CAhBV;;AAqBTS,gCArBS,GAqBY,SAArBA,kBAAqB,GAAM;AAC/B,wBAAQhB,eAAR;AACE,uBAAK,SAAL;AACE,2BAAO,8BAAP;;AACF,uBAAK,MAAL;AACE,2BAAO,2BAAP;;AACF,uBAAK,QAAL;AACE,2BAAO,4BAAmBC,YAAnB,CAAP;;AACF;AACE,2BAAO,8BAAP;AARJ;AAUD,eAhCc;;AAkCTgB,gCAlCS,GAkCY,0BAlCZ;AAmCTC,sBAnCS,GAmCE,yBAAaJ,gBAAb,CAnCF;AAoCTK,oBApCS,GAoCA,2BAAa,EAAb,CApCA;AAAA;AAAA,qBAqCM,uCAAyB;AAC5CnB,iCAAiBgB,oBAD2B;AAE5CC,sDAF4C;AAG5CG,6BAAatB,MAH+B;AAI5CoB,kCAJ4C;AAK5CC;AAL4C,eAAzB,CArCN;;AAAA;AAqCTE,oBArCS;AA6CTC,uBA7CS,GA6CG;AAChBC,qCACK7B,MADL;AAEEoB,oDAFF;AAGEI,oCAHF;AAIEpB,gCAJF;AAKES;AALF;AADgB,eA7CH;AAAA;AAAA;AAAA,qBAwDP,yCAxDO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA6DTiB,uBA7DS,GA6DG,SAAZA,SAAY,QAAS;AACzB,uBACE,sDAAUF,SAAV,EAAyBG,KAAzB,GACE,uDACE,6BAAC,MAAD;AAAQ,4BAAUP;AAAlB,kBADF,CADF,CADF;AAOD,eArEc;;AAuEftB,sBAAQ;AACN4B;AADM,eAAR;AAvEe;AAAA;;AAAA;AAAA;AAAA;AA2EfE,sBAAQC,KAAR,CAAc,kCAAd;;AA3Ee;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AA8ED","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Router/buildClientApp.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import BrowserProtocol from \"farce/lib/BrowserProtocol\"\nimport HashProtocol from \"farce/lib/HashProtocol\"\nimport MemoryProtocol from \"farce/lib/MemoryProtocol\"\nimport queryMiddleware from \"farce/lib/queryMiddleware\"\nimport { Resolver } from \"found-relay\"\nimport createInitialFarceRouter from \"found/lib/createInitialFarceRouter\"\nimport createRender from \"found/lib/createRender\"\nimport { loadComponents } from \"loadable-components\"\nimport React from \"react\"\nimport { createEnvironment } from \"../Relay/createEnvironment\"\nimport { AppShell } from \"./AppShell\"\nimport { Boot } from \"./Boot\"\nimport { AppConfig, ClientResolveProps } from \"./types\"\n\nexport function buildClientApp(config: AppConfig): Promise<ClientResolveProps> {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        routes,\n        user,\n        historyProtocol = \"browser\",\n        initialRoute = \"/\",\n      } = config\n\n      const relayBootstrap = JSON.parse(window.__RELAY_BOOTSTRAP__ || \"{}\")\n\n      const currentUser = user || {\n        id: process.env.USER_ID,\n        accessToken: process.env.USER_ACCESS_TOKEN,\n      }\n\n      const relayEnvironment = createEnvironment({\n        cache: relayBootstrap,\n        user: currentUser,\n      })\n\n      const getHistoryProtocol = () => {\n        switch (historyProtocol) {\n          case \"browser\":\n            return new BrowserProtocol()\n          case \"hash\":\n            return new HashProtocol()\n          case \"memory\":\n            return new MemoryProtocol(initialRoute)\n          default:\n            return new BrowserProtocol()\n        }\n      }\n\n      const historyMiddlewares = [queryMiddleware]\n      const resolver = new Resolver(relayEnvironment)\n      const render = createRender({})\n      const Router = await createInitialFarceRouter({\n        historyProtocol: getHistoryProtocol(),\n        historyMiddlewares,\n        routeConfig: routes,\n        resolver,\n        render,\n      })\n\n      const bootProps = {\n        system: {\n          ...config,\n          relayEnvironment,\n          resolver,\n          routes,\n          currentUser,\n        },\n      }\n\n      try {\n        await loadComponents()\n      } catch (error) {\n        // FIXME: https://github.com/smooth-code/loadable-components/pull/93\n      }\n\n      const ClientApp = props => {\n        return (\n          <Boot {...bootProps} {...props}>\n            <AppShell>\n              <Router resolver={resolver} />\n            </AppShell>\n          </Boot>\n        )\n      }\n\n      resolve({\n        ClientApp,\n      })\n    } catch (error) {\n      console.error(\"[Reaction Router/buildClientApp]\", error)\n    }\n  })\n}\n"]}]}