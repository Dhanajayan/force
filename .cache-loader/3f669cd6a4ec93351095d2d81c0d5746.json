{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/element-resize-detector/src/id-handler.js","dependencies":[{"path":"/Users/eve/development/force/node_modules/element-resize-detector/src/id-handler.js","mtime":1463324668000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nmodule.exports = function (options) {\n  var idGenerator = options.idGenerator;\n  var getState = options.stateHandler.getState;\n  /**\n   * Gets the resize detector id of the element.\n   * @public\n   * @param {element} element The target element to get the id of.\n   * @returns {string|number|null} The id of the element. Null if it has no id.\n   */\n\n  function getId(element) {\n    var state = getState(element);\n\n    if (state && state.id !== undefined) {\n      return state.id;\n    }\n\n    return null;\n  }\n  /**\n   * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n   * @public\n   * @param {element} element The target element to set the id of.\n   * @returns {string|number|null} The id of the element.\n   */\n\n\n  function setId(element) {\n    var state = getState(element);\n\n    if (!state) {\n      throw new Error(\"setId required the element to have a resize detection state.\");\n    }\n\n    var id = idGenerator.generate();\n    state.id = id;\n    return id;\n  }\n\n  return {\n    get: getId,\n    set: setId\n  };\n};",{"version":3,"sources":["node_modules/element-resize-detector/src/id-handler.js"],"names":["module","exports","options","idGenerator","getState","stateHandler","getId","element","state","id","undefined","setId","Error","generate","get","set"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC/B,MAAIC,cAAkBD,QAAQC,WAA9B;AACA,MAAIC,WAAkBF,QAAQG,YAAR,CAAqBD,QAA3C;AAEA;;;;;;;AAMA,WAASE,KAAT,CAAeC,OAAf,EAAwB;AACpB,QAAIC,QAAQJ,SAASG,OAAT,CAAZ;;AAEA,QAAIC,SAASA,MAAMC,EAAN,KAAaC,SAA1B,EAAqC;AACjC,aAAOF,MAAMC,EAAb;AACH;;AAED,WAAO,IAAP;AACH;AAED;;;;;;;;AAMA,WAASE,KAAT,CAAeJ,OAAf,EAAwB;AACpB,QAAIC,QAAQJ,SAASG,OAAT,CAAZ;;AAEA,QAAI,CAACC,KAAL,EAAY;AACR,YAAM,IAAII,KAAJ,CAAU,8DAAV,CAAN;AACH;;AAED,QAAIH,KAAKN,YAAYU,QAAZ,EAAT;AAEAL,UAAMC,EAAN,GAAWA,EAAX;AAEA,WAAOA,EAAP;AACH;;AAED,SAAO;AACHK,SAAKR,KADF;AAEHS,SAAKJ;AAFF,GAAP;AAIH,CA5CD","file":"/Users/eve/development/force/node_modules/element-resize-detector/src/id-handler.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["\"use strict\";\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n"]}]}