{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport CurrentAuctions from \"./current_auctions\";\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { isEmpty, isString } from 'underscore';\nexport { CurrentAuctions };\nexport default function mount(data) {\n  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#react-mount-current-auctions';\n  var auctionContextId = data.auctionContextId,\n      sales = data.sales;\n  var shouldMount = !isEmpty(sales) && isString(selector);\n  invariant(shouldMount, \"Error mounting <CurrentAuctions />: sales (\".concat(sales.map(function (s) {\n    return s.id;\n  }), \") or \") + \"selector (\".concat(selector, \") is invalid.\"));\n\n  if (shouldMount) {\n    var mountPoint = document.querySelector(selector);\n    ReactDOM.render(React.createElement(CurrentAuctions, {\n      auctionContextId: auctionContextId,\n      sales: sales\n    }), mountPoint);\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mount, \"mount\", \"/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js"],"names":["CurrentAuctions","invariant","React","ReactDOM","isEmpty","isString","mount","data","selector","auctionContextId","sales","shouldMount","map","s","id","mountPoint","document","querySelector","render"],"mappings":";;;;;;AAAA,OAAOA,eAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,YAAlC;AAEA,SAASL,eAAT;AAEA,eAAe,SAASM,KAAT,CACbC,IADa,EAGb;AAAA,MADAC,QACA,uEADW,+BACX;AAAA,MACQC,gBADR,GACoCF,IADpC,CACQE,gBADR;AAAA,MAC0BC,KAD1B,GACoCH,IADpC,CAC0BG,KAD1B;AAEA,MAAMC,WAAW,GAAG,CAACP,OAAO,CAACM,KAAD,CAAR,IAAmBL,QAAQ,CAACG,QAAD,CAA/C;AAEAP,EAAAA,SAAS,CACPU,WADO,EAEP,qDAA8CD,KAAK,CAACE,GAAN,CAC5C,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAT;AAAA,GAD4C,CAA9C,iCAEwBN,QAFxB,kBAFO,CAAT;;AAOA,MAAIG,WAAJ,EAAiB;AACf,QAAMI,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuBT,QAAvB,CAAnB;AAEAL,IAAAA,QAAQ,CAACe,MAAT,CACE,oBAAC,eAAD;AAAiB,MAAA,gBAAgB,EAAET,gBAAnC;AAAqD,MAAA,KAAK,EAAEC;AAA5D,MADF,EAEEK,UAFF;AAID;AACF;;;;;;;;;;;;0BAtBuBT,K","sourcesContent":["import CurrentAuctions from './current_auctions'\nimport invariant from 'invariant'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { isEmpty, isString } from 'underscore'\n\nexport { CurrentAuctions }\n\nexport default function mount(\n  data,\n  selector = '#react-mount-current-auctions'\n) {\n  const { auctionContextId, sales } = data\n  const shouldMount = !isEmpty(sales) && isString(selector)\n\n  invariant(\n    shouldMount,\n    `Error mounting <CurrentAuctions />: sales (${sales.map(\n      (s) => s.id\n    )}) or ` + `selector (${selector}) is invalid.`\n  )\n\n  if (shouldMount) {\n    const mountPoint = document.querySelector(selector)\n\n    ReactDOM.render(\n      <CurrentAuctions auctionContextId={auctionContextId} sales={sales} />,\n      mountPoint\n    )\n  }\n}\n"]}]}