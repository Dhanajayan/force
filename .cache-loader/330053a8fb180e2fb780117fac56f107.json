{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _rcSlider = require(\"rc-slider\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _accounting = require(\"accounting\");\n\nvar _artworkBrowser = require(\"../../../actions/artworkBrowser\");\n\nfunction RangeSlider(props) {\n  var formattedMaxDisplay = props.formattedMaxDisplay,\n      formattedMinDisplay = props.formattedMinDisplay,\n      isAbsoluteMax = props.isAbsoluteMax,\n      isAuction = props.isAuction,\n      maxEstimate = props.maxEstimate,\n      maxEstimateRangeDisplay = props.maxEstimateRangeDisplay,\n      minEstimate = props.minEstimate,\n      minEstimateRangeDisplay = props.minEstimateRangeDisplay,\n      updateEstimateDisplayAction = props.updateEstimateDisplayAction,\n      updateEstimateRangeAction = props.updateEstimateRangeAction;\n  var b = (0, _bemCnLite.default)('auction-RangeSlider');\n  return _react.default.createElement(\"div\", {\n    className: b()\n  }, _react.default.createElement(\"div\", {\n    className: b('metadata')\n  }, _react.default.createElement(\"div\", {\n    className: b('title')\n  }, \"Price\"), _react.default.createElement(\"div\", {\n    className: b('caption')\n  }, \"\".concat(formattedMinDisplay, \" - \").concat(formattedMaxDisplay).concat(isAbsoluteMax ? '+' : ''))), _react.default.createElement(_rcSlider.Range, {\n    allowCross: false,\n    min: minEstimate,\n    max: maxEstimate,\n    step: 50,\n    defaultValue: [minEstimateRangeDisplay, maxEstimateRangeDisplay],\n    onChange: function onChange(_ref) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          min = _ref2[0],\n          max = _ref2[1];\n\n      return updateEstimateDisplayAction(min, max);\n    },\n    onAfterChange: function onAfterChange(_ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          min = _ref4[0],\n          max = _ref4[1];\n\n      return updateEstimateRangeAction(min, max);\n    }\n  }), isAuction && _react.default.createElement(\"div\", {\n    className: b('info')\n  }, \"Based on the estimate for the lot\"));\n}\n\nRangeSlider.propTypes = {\n  formattedMaxDisplay: _propTypes.default.string.isRequired,\n  formattedMinDisplay: _propTypes.default.string.isRequired,\n  isAbsoluteMax: _propTypes.default.bool.isRequired,\n  isAuction: _propTypes.default.bool.isRequired,\n  maxEstimate: _propTypes.default.number.isRequired,\n  minEstimate: _propTypes.default.number.isRequired,\n  minEstimateRangeDisplay: _propTypes.default.number.isRequired,\n  maxEstimateRangeDisplay: _propTypes.default.number.isRequired,\n  updateEstimateDisplayAction: _propTypes.default.func.isRequired,\n  updateEstimateRangeAction: _propTypes.default.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auction = state.app.auction,\n      _state$artworkBrowser = state.artworkBrowser,\n      filterParams = _state$artworkBrowser.filterParams,\n      maxEstimateRangeDisplay = _state$artworkBrowser.maxEstimateRangeDisplay,\n      minEstimateRangeDisplay = _state$artworkBrowser.minEstimateRangeDisplay,\n      symbol = _state$artworkBrowser.symbol;\n  var minEstimate = filterParams.ranges.estimate_range.min;\n  var formattedMinDisplay = (0, _accounting.formatMoney)(minEstimateRangeDisplay, {\n    symbol: symbol,\n    precision: 0\n  });\n  var maxEstimate = filterParams.ranges.estimate_range.max;\n  var isAbsoluteMax = maxEstimate === maxEstimateRangeDisplay;\n  var formattedMaxDisplay = (0, _accounting.formatMoney)(maxEstimateRangeDisplay, {\n    symbol: '',\n    precision: 0\n  });\n  return {\n    formattedMaxDisplay: formattedMaxDisplay,\n    formattedMinDisplay: formattedMinDisplay,\n    isAbsoluteMax: isAbsoluteMax,\n    isAuction: auction.isAuction(),\n    maxEstimate: maxEstimate,\n    maxEstimateRangeDisplay: maxEstimateRangeDisplay,\n    minEstimate: minEstimate,\n    minEstimateRangeDisplay: minEstimateRangeDisplay\n  };\n};\n\nvar mapDispatchToProps = {\n  updateEstimateRangeAction: _artworkBrowser.updateEstimateRange,\n  updateEstimateDisplayAction: _artworkBrowser.updateEstimateDisplay\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(RangeSlider);\n\nexports.default = _default;",{"version":3,"sources":["src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js"],"names":["RangeSlider","props","formattedMaxDisplay","formattedMinDisplay","isAbsoluteMax","isAuction","maxEstimate","maxEstimateRangeDisplay","minEstimate","minEstimateRangeDisplay","updateEstimateDisplayAction","updateEstimateRangeAction","b","min","max","propTypes","string","isRequired","bool","number","func","mapStateToProps","state","auction","app","artworkBrowser","filterParams","symbol","ranges","estimate_range","precision","mapDispatchToProps"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Range } from 'rc-slider'\nimport { connect } from 'react-redux'\nimport { formatMoney } from 'accounting'\nimport { updateEstimateRange, updateEstimateDisplay } from 'desktop/apps/auction/actions/artworkBrowser'\n\nfunction RangeSlider (props) {\n  const {\n    formattedMaxDisplay,\n    formattedMinDisplay,\n    isAbsoluteMax,\n    isAuction,\n    maxEstimate,\n    maxEstimateRangeDisplay,\n    minEstimate,\n    minEstimateRangeDisplay,\n    updateEstimateDisplayAction,\n    updateEstimateRangeAction\n  } = props\n\n  const b = block('auction-RangeSlider')\n\n  return (\n    <div className={b()}>\n      <div className={b('metadata')}>\n        <div className={b('title')}>\n          Price\n        </div>\n\n        <div className={b('caption')}>\n          {\n            `${formattedMinDisplay} - ${formattedMaxDisplay}${isAbsoluteMax ? '+' : ''}`\n          }\n      </div>\n      </div>\n      <Range\n        allowCross={false}\n        min={minEstimate}\n        max={maxEstimate}\n        step={50}\n        defaultValue={[minEstimateRangeDisplay, maxEstimateRangeDisplay]}\n        onChange={([min, max]) => updateEstimateDisplayAction(min, max)}\n        onAfterChange={([min, max]) => updateEstimateRangeAction(min, max)}\n      />\n      {isAuction &&\n        <div className={b('info')}>\n          Based on the estimate for the lot\n        </div>\n      }\n    </div>\n  )\n}\n\nRangeSlider.propTypes = {\n  formattedMaxDisplay: PropTypes.string.isRequired,\n  formattedMinDisplay: PropTypes.string.isRequired,\n  isAbsoluteMax: PropTypes.bool.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  maxEstimate: PropTypes.number.isRequired,\n  minEstimate: PropTypes.number.isRequired,\n  minEstimateRangeDisplay: PropTypes.number.isRequired,\n  maxEstimateRangeDisplay: PropTypes.number.isRequired,\n  updateEstimateDisplayAction: PropTypes.func.isRequired,\n  updateEstimateRangeAction: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    app: {\n      auction\n    },\n    artworkBrowser: {\n      filterParams,\n      maxEstimateRangeDisplay,\n      minEstimateRangeDisplay,\n      symbol\n    }\n  } = state\n\n  const minEstimate = filterParams.ranges.estimate_range.min\n  const formattedMinDisplay = formatMoney(minEstimateRangeDisplay, { symbol, precision: 0 })\n  const maxEstimate = filterParams.ranges.estimate_range.max\n  const isAbsoluteMax = maxEstimate === maxEstimateRangeDisplay\n  const formattedMaxDisplay = formatMoney(maxEstimateRangeDisplay, { symbol: '', precision: 0 })\n\n  return {\n    formattedMaxDisplay,\n    formattedMinDisplay,\n    isAbsoluteMax,\n    isAuction: auction.isAuction(),\n    maxEstimate,\n    maxEstimateRangeDisplay,\n    minEstimate,\n    minEstimateRangeDisplay\n  }\n}\n\nconst mapDispatchToProps = {\n  updateEstimateRangeAction: updateEstimateRange,\n  updateEstimateDisplayAction: updateEstimateDisplay\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RangeSlider)\n"]}]}