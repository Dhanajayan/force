{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts","mtime":1535573774000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _identity from \"lodash/identity\";\nimport _pickBy from \"lodash/pickBy\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport Cookies from 'cookies-js';\nimport { ModalType } from \"@artsy/reaction/dist/Components/Authentication/Types\";\nimport { data as sd } from 'sharify';\n\nvar mediator = require(\"../../lib/mediator.coffee\");\n\nvar LoggedOutUser = require(\"../../models/logged_out_user.coffee\");\n\nexport var handleSubmit = function handleSubmit(type, modalOptions, values, formikBag) {\n  var user = new LoggedOutUser();\n  var contextModule = modalOptions.contextModule,\n      copy = modalOptions.copy,\n      destination = modalOptions.destination,\n      redirectTo = modalOptions.redirectTo,\n      intent = modalOptions.intent,\n      signupReferer = modalOptions.signupReferer,\n      trigger = modalOptions.trigger,\n      triggerSeconds = modalOptions.triggerSeconds;\n  /*\n   * These are the attributes that will be saved on the user. We are moving\n   * towards using `intent` on analytics, but Gravity expects `signupIntent`\n   */\n\n  var userAttributes = Object.assign({}, values, {\n    _csrf: sd.CSRF_TOKEN,\n    signupIntent: intent,\n    signupReferer: signupReferer,\n    agreed_to_receive_emails: values.accepted_terms_of_service\n  });\n  user.set(userAttributes);\n  var options = {\n    success: function success(_, res) {\n      formikBag.setSubmitting(false);\n      var analytics = window.analytics;\n      var action;\n\n      switch (type) {\n        case ModalType.login:\n          action = 'Successfully logged in';\n          break;\n\n        case ModalType.signup:\n          action = 'Created account';\n          break;\n\n        case ModalType.forgot:\n          action = 'Forgot Password';\n          break;\n      }\n\n      if (analytics) {\n        var properties = {\n          action: action,\n          user_id: res && res.user && res.user.id,\n          trigger: trigger,\n          trigger_seconds: triggerSeconds,\n          intent: intent,\n          type: type,\n          context_module: contextModule,\n          modal_copy: copy,\n          auth_redirect: redirectTo || destination,\n          service: 'email'\n        };\n        analytics.track(action, _pickBy(properties, _identity));\n      }\n\n      var defaultRedirect = getRedirect(type);\n      window.location = modalOptions.redirectTo || defaultRedirect;\n    },\n    error: function error(_, res) {\n      var error = res.responseJSON;\n      formikBag.setStatus(error);\n      formikBag.setSubmitting(false);\n      mediator.trigger('auth:error', error.message);\n    }\n  };\n\n  switch (type) {\n    case ModalType.login:\n      user.login(options);\n      break;\n\n    case ModalType.signup:\n      user.signup(options);\n      break;\n\n    case ModalType.forgot:\n      user.forgot(options);\n      break;\n  }\n};\nexport var setCookies = function setCookies(options) {\n  var afterSignUpAction = options.afterSignUpAction,\n      destination = options.destination;\n\n  if (afterSignUpAction) {\n    Cookies.set('afterSignUpAction', JSON.stringify(afterSignUpAction));\n  }\n\n  if (destination) {\n    Cookies.set('destination', destination, {\n      expires: 60 * 60 * 24\n    });\n  }\n};\nexport var getRedirect = function getRedirect(type) {\n  var _window = window,\n      location = _window.location;\n\n  switch (type) {\n    case 'login':\n    case 'forgot':\n      if (['/login', '/forgot'].includes(location.pathname)) {\n        return '/';\n      } else {\n        return location;\n      }\n\n    case 'signup':\n      return '/personalize';\n\n    default:\n      return window.location;\n  }\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(handleSubmit, \"handleSubmit\", \"/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts\");\n  reactHotLoader.register(setCookies, \"setCookies\", \"/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts\");\n  reactHotLoader.register(getRedirect, \"getRedirect\", \"/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auth2/helpers.ts"],"names":["Cookies","ModalType","data","sd","mediator","require","LoggedOutUser","handleSubmit","type","modalOptions","values","formikBag","user","contextModule","copy","destination","redirectTo","intent","signupReferer","trigger","triggerSeconds","userAttributes","Object","assign","_csrf","CSRF_TOKEN","signupIntent","agreed_to_receive_emails","accepted_terms_of_service","set","options","success","_","res","setSubmitting","analytics","window","action","login","signup","forgot","properties","user_id","id","trigger_seconds","context_module","modal_copy","auth_redirect","service","track","defaultRedirect","getRedirect","location","error","responseJSON","setStatus","message","setCookies","afterSignUpAction","JSON","stringify","expires","includes","pathname"],"mappings":"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","sourcesContent":["import Cookies from 'cookies-js'\nimport {\n  ModalType,\n  ModalOptions,\n} from 'reaction/Components/Authentication/Types'\nimport { data as sd } from 'sharify'\nimport { pickBy, identity } from 'lodash'\n\nconst mediator = require('../../lib/mediator.coffee')\nconst LoggedOutUser = require('../../models/logged_out_user.coffee')\n\nexport const handleSubmit = (\n  type: ModalType,\n  modalOptions: ModalOptions,\n  values,\n  formikBag\n) => {\n  const user = new LoggedOutUser()\n  const {\n    contextModule,\n    copy,\n    destination,\n    redirectTo,\n    intent,\n    signupReferer,\n    trigger,\n    triggerSeconds,\n  } = modalOptions\n\n  /*\n   * These are the attributes that will be saved on the user. We are moving\n   * towards using `intent` on analytics, but Gravity expects `signupIntent`\n   */\n  const userAttributes = Object.assign({}, values, {\n    _csrf: sd.CSRF_TOKEN,\n    signupIntent: intent,\n    signupReferer,\n    agreed_to_receive_emails: values.accepted_terms_of_service,\n  })\n\n  user.set(userAttributes)\n\n  const options = {\n    success: (_, res) => {\n      formikBag.setSubmitting(false)\n      const analytics = (window as any).analytics\n\n      let action\n      switch (type) {\n        case ModalType.login:\n          action = 'Successfully logged in'\n          break\n        case ModalType.signup:\n          action = 'Created account'\n          break\n        case ModalType.forgot:\n          action = 'Forgot Password'\n          break\n      }\n\n      if (analytics) {\n        const properties = {\n          action,\n          user_id: res && res.user && res.user.id,\n          trigger,\n          trigger_seconds: triggerSeconds,\n          intent,\n          type,\n          context_module: contextModule,\n          modal_copy: copy,\n          auth_redirect: redirectTo || destination,\n          service: 'email',\n        }\n        analytics.track(action, pickBy(properties, identity))\n      }\n\n      const defaultRedirect = getRedirect(type)\n      window.location = modalOptions.redirectTo || (defaultRedirect as any)\n    },\n    error: (_, res) => {\n      const error = res.responseJSON\n      formikBag.setStatus(error)\n      formikBag.setSubmitting(false)\n      mediator.trigger('auth:error', error.message)\n    },\n  }\n\n  switch (type) {\n    case ModalType.login:\n      user.login(options)\n      break\n    case ModalType.signup:\n      user.signup(options)\n      break\n    case ModalType.forgot:\n      user.forgot(options)\n      break\n  }\n}\n\nexport const setCookies = options => {\n  const { afterSignUpAction, destination } = options\n\n  if (afterSignUpAction) {\n    Cookies.set('afterSignUpAction', JSON.stringify(afterSignUpAction))\n  }\n\n  if (destination) {\n    Cookies.set('destination', destination, {\n      expires: 60 * 60 * 24,\n    })\n  }\n}\n\nexport const getRedirect = type => {\n  const { location } = window\n  switch (type) {\n    case 'login':\n    case 'forgot':\n      if (['/login', '/forgot'].includes(location.pathname)) {\n        return '/'\n      } else {\n        return location\n      }\n    case 'signup':\n      return '/personalize'\n    default:\n      return window.location\n  }\n}\n"]}]}