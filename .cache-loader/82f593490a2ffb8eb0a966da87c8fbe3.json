{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _extends from \"@babel/runtime/helpers/extends\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport FilterSort from \"./FilterSort\";\n\nvar Grid = function Grid(props) {\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\"\n  }, props), React.createElement(\"path\", {\n    d: \"M6 6h4v4H6zM14 6h4v4h-4zM22 6h4v4h-4zM6 14h4v4H6zM14 14h4v4h-4zM22 14h4v4h-4zM6 22h4v4H6zM14 22h4v4h-4zM22 22h4v4h-4z\"\n  }));\n};\n\nvar List = function List(props) {\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\"\n  }, props), React.createElement(\"path\", {\n    d: \"M6 22h20v2H6zM6 15h20v2H6zM6 8h20v2H6z\"\n  }));\n};\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { toggleListView } from \"../../../actions/artworkBrowser\";\n\nfunction HeaderDesktop(props) {\n  var toggleListViewAction = props.toggleListViewAction,\n      totalLabel = props.totalLabel,\n      displayType = props.displayType;\n  var b = block('auction-artworks-HeaderDesktop');\n\n  var displayButtonClass = function displayButtonClass(buttonType, displayType) {\n    return classNames(String(b(buttonType)), {\n      active: displayType === buttonType\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: b()\n  }, React.createElement(\"div\", {\n    className: b('left')\n  }, React.createElement(\"div\", {\n    className: b('total')\n  }, totalLabel)), React.createElement(\"div\", {\n    className: b('right')\n  }, React.createElement(\"div\", {\n    className: b('sort')\n  }, React.createElement(FilterSort, null)), React.createElement(\"div\", {\n    className: b('switch')\n  }, React.createElement(\"div\", {\n    className: displayButtonClass('grid', displayType),\n    onClick: function onClick() {\n      return toggleListViewAction(false);\n    }\n  }, React.createElement(Grid, null)), React.createElement(\"div\", {\n    className: displayButtonClass('list', displayType),\n    onClick: function onClick() {\n      return toggleListViewAction(true);\n    }\n  }, React.createElement(List, null)))));\n}\n\nHeaderDesktop.propTypes = {\n  displayType: PropTypes.string.isRequired,\n  toggleListViewAction: PropTypes.func.isRequired,\n  totalLabel: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$artworkBrowser = state.artworkBrowser,\n      isFetchingArtworks = _state$artworkBrowser.isFetchingArtworks,\n      isListView = _state$artworkBrowser.isListView,\n      total = _state$artworkBrowser.total;\n  var displayType = isListView ? 'list' : 'grid';\n  var totalLabel = isFetchingArtworks ? 'Loading results.' : \"\".concat(total, \" Artworks\");\n  return {\n    displayType: displayType,\n    totalLabel: totalLabel\n  };\n};\n\nvar mapDispatchToProps = {\n  toggleListViewAction: toggleListView\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(HeaderDesktop);\n\nexport default _default; // Helpers\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(HeaderDesktop, \"HeaderDesktop\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js"],"names":["FilterSort","Grid","List","PropTypes","React","block","classNames","connect","toggleListView","HeaderDesktop","props","toggleListViewAction","totalLabel","displayType","b","displayButtonClass","buttonType","String","active","propTypes","string","isRequired","func","mapStateToProps","state","artworkBrowser","isFetchingArtworks","isListView","total","mapDispatchToProps"],"mappings":"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","sourcesContent":["import FilterSort from './FilterSort'\nimport Grid from '../../../../../components/main_layout/public/icons/grid.svg'\nimport List from '../../../../../components/main_layout/public/icons/list.svg'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport classNames from 'classnames'\nimport { connect } from 'react-redux'\nimport { toggleListView } from 'desktop/apps/auction/actions/artworkBrowser'\n\nfunction HeaderDesktop (props) {\n  const {\n    toggleListViewAction,\n    totalLabel,\n    displayType\n  } = props\n\n  const b = block('auction-artworks-HeaderDesktop')\n\n  const displayButtonClass = (buttonType, displayType) => {\n    return classNames(\n      String(b(buttonType)),\n      { active: displayType === buttonType }\n    )\n  }\n\n  return (\n    <div className={b()}>\n      <div className={b('left')}>\n        <div className={b('total')}>\n          { totalLabel }\n        </div>\n      </div>\n      <div className={b('right')}>\n        <div className={b('sort')}>\n          <FilterSort />\n        </div>\n        <div className={b('switch')}>\n          <div className={displayButtonClass('grid', displayType)} onClick={() => toggleListViewAction(false)}>\n            <Grid />\n          </div>\n          <div className={displayButtonClass('list', displayType)} onClick={() => toggleListViewAction(true)}>\n            <List />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nHeaderDesktop.propTypes = {\n  displayType: PropTypes.string.isRequired,\n  toggleListViewAction: PropTypes.func.isRequired,\n  totalLabel: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    isFetchingArtworks,\n    isListView,\n    total\n  } = state.artworkBrowser\n\n  const displayType = isListView ? 'list' : 'grid'\n\n  const totalLabel = isFetchingArtworks\n    ? 'Loading results.'\n    : `${total} Artworks`\n\n  return {\n    displayType,\n    totalLabel\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleListViewAction: toggleListView\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderDesktop)\n\n// Helpers\n"]}]}