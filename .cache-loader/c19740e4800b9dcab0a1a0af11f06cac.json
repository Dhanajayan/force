{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auth2/components/ModalContainer.tsx","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auth2/components/ModalContainer.tsx","mtime":1535573774000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport Cookies from 'cookies-js';\nimport React from 'react';\nimport { ModalManager } from \"@artsy/reaction/dist/Components/Authentication/Desktop/ModalManager\";\nimport { handleSubmit, setCookies } from \"../helpers\";\nimport { data as sd } from 'sharify';\n\nvar mediator = require(\"../../../lib/mediator.coffee\");\n\nexport var ModalContainer = function ModalContainer() {\n  var manager;\n  mediator.on('open:auth', function (options) {\n    options.destination = options.destination || location.href;\n    setCookies(options);\n\n    if (options && options.mode === 'register') {\n      options.mode = 'signup';\n    }\n\n    setTimeout(function () {\n      if (manager) {\n        manager.openModal(options);\n      }\n    }, document.readyState === 'complete' ? 0 : 500);\n  });\n  mediator.on('auth:error', function (err) {\n    if (manager) {\n      manager.setError(err);\n    }\n  });\n  return React.createElement(ModalManager, {\n    ref: function ref(_ref) {\n      return manager = _ref;\n    },\n    submitUrls: {\n      login: sd.AP.loginPagePath,\n      signup: sd.AP.signupPagePath,\n      facebook: sd.AP.facebookPath,\n      twitter: sd.AP.twitterPath\n    },\n    csrf: sd.CSRF_TOKEN,\n    handleSubmit: handleSubmit,\n    onSocialAuthEvent: function onSocialAuthEvent(data) {\n      var analyticsOptions = {\n        action: data.mode === 'signup' ? 'Created account' : 'Successfully logged in',\n        type: data.mode,\n        context_module: data.contextModule,\n        modal_copy: data.copy,\n        trigger: data.trigger || 'click',\n        trigger_seconds: data.triggerSeconds,\n        intent: data.intent,\n        auth_redirect: data.redirectTo || data.destination,\n        service: data.service\n      };\n      Cookies.set(\"analytics-\".concat(data.mode), JSON.stringify(analyticsOptions), {\n        expires: 60 * 60 * 24\n      });\n    },\n    onModalClose: function onModalClose() {\n      mediator.trigger('modal:closed');\n    }\n  });\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ModalContainer, \"ModalContainer\", \"/Users/eve/development/force/src/desktop/apps/auth2/components/ModalContainer.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auth2/components/ModalContainer.tsx"],"names":["Cookies","React","ModalManager","handleSubmit","setCookies","data","sd","mediator","require","ModalContainer","manager","on","options","destination","location","href","mode","setTimeout","openModal","document","readyState","err","setError","ref","login","AP","loginPagePath","signup","signupPagePath","facebook","facebookPath","twitter","twitterPath","CSRF_TOKEN","analyticsOptions","action","type","context_module","contextModule","modal_copy","copy","trigger","trigger_seconds","triggerSeconds","intent","auth_redirect","redirectTo","service","set","JSON","stringify","expires"],"mappings":"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","sourcesContent":["import Cookies from 'cookies-js'\nimport React from 'react'\nimport { ModalManager } from 'reaction/Components/Authentication/Desktop/ModalManager'\nimport { handleSubmit, setCookies } from '../helpers'\nimport { data as sd } from 'sharify'\nconst mediator = require('../../../lib/mediator.coffee')\n\nexport const ModalContainer: React.SFC<any> = () => {\n  let manager: ModalManager | null\n\n  mediator.on('open:auth', options => {\n    options.destination = options.destination || location.href\n\n    setCookies(options)\n\n    if (options && options.mode === 'register') {\n      options.mode = 'signup'\n    }\n\n    setTimeout(() => {\n      if (manager) {\n        manager.openModal(options)\n      }\n    }, document.readyState === 'complete' ? 0 : 500)\n  })\n\n  mediator.on('auth:error', err => {\n    if (manager) {\n      manager.setError(err)\n    }\n  })\n\n  return (\n    <ModalManager\n      ref={ref => (manager = ref)}\n      submitUrls={{\n        login: sd.AP.loginPagePath,\n        signup: sd.AP.signupPagePath,\n        facebook: sd.AP.facebookPath,\n        twitter: sd.AP.twitterPath,\n      }}\n      csrf={sd.CSRF_TOKEN}\n      handleSubmit={handleSubmit as any}\n      onSocialAuthEvent={data => {\n        const analyticsOptions = {\n          action:\n            data.mode === 'signup'\n              ? 'Created account'\n              : 'Successfully logged in',\n          type: data.mode,\n          context_module: data.contextModule,\n          modal_copy: data.copy,\n          trigger: data.trigger || 'click',\n          trigger_seconds: data.triggerSeconds,\n          intent: data.intent,\n          auth_redirect: data.redirectTo || data.destination,\n          service: data.service,\n        }\n\n        Cookies.set(\n          `analytics-${data.mode}`,\n          JSON.stringify(analyticsOptions),\n          {\n            expires: 60 * 60 * 24,\n          }\n        )\n      }}\n      onModalClose={() => {\n        mediator.trigger('modal:closed')\n      }}\n    />\n  )\n}\n"]}]}