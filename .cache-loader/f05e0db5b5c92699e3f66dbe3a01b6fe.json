{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _get from \"lodash/get\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport _BidStatus from \"./BidStatus\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport titleAndYear from \"../../../../utils/titleAndYear\";\nimport { connect } from 'react-redux';\n// FIXME: Rewire\nvar BidStatus = _BidStatus;\n\nfunction GridArtwork(props) {\n  var saleArtwork = props.saleArtwork,\n      artistDisplay = props.artistDisplay,\n      date = props.date,\n      image = props.image,\n      isAuction = props.isAuction,\n      isClosed = props.isClosed,\n      lotLabel = props.lotLabel,\n      sale_message = props.sale_message,\n      title = props.title;\n  var b = block('auction-page-GridArtwork');\n  return React.createElement(\"a\", {\n    className: b(),\n    key: saleArtwork._id,\n    href: \"/artwork/\".concat(saleArtwork.id)\n  }, React.createElement(\"div\", {\n    className: b('image-container')\n  }, React.createElement(\"div\", {\n    className: \"vam-outer\"\n  }, React.createElement(\"div\", {\n    className: \"vam-inner\"\n  }, React.createElement(\"div\", {\n    className: b('image')\n  }, React.createElement(\"img\", {\n    src: image,\n    alt: title\n  }))))), React.createElement(\"div\", {\n    className: b('metadata')\n  }, isAuction ? React.createElement(\"div\", {\n    className: b('lot-information')\n  }, React.createElement(\"div\", {\n    className: b('lot-number')\n  }, \"Lot \", lotLabel), !isClosed && React.createElement(BidStatus, {\n    artworkItem: saleArtwork\n  })) : React.createElement(\"div\", null, sale_message), React.createElement(\"div\", {\n    className: b('artists')\n  }, artistDisplay), React.createElement(\"div\", {\n    className: b('title'),\n    dangerouslySetInnerHTML: {\n      __html: titleAndYear(title, date)\n    }\n  })));\n}\n\nGridArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string,\n  // Not needed for e-commerce sales\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string,\n  // E-commerce sales only\n  title: PropTypes.string.isRequired // TODO: Unify this selector across artwork types\n\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var saleArtwork = props.saleArtwork;\n\n  var image = _get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png');\n\n  var artists = saleArtwork.artwork.artists;\n  var artistDisplay = artists && artists.length > 0 ? artists.map(function (aa) {\n    return aa.name;\n  }).join(', ') : '';\n  return {\n    artistDisplay: artistDisplay,\n    date: saleArtwork.artwork.date,\n    image: image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.artworkBrowser.isClosed || state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  };\n};\n\nvar _default = connect(mapStateToProps)(GridArtwork);\n\nexport default _default;\nexport var test = {\n  GridArtwork: GridArtwork\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(BidStatus, \"BidStatus\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js\");\n  reactHotLoader.register(GridArtwork, \"GridArtwork\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js\");\n  reactHotLoader.register(test, \"test\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js"],"names":["_BidStatus","PropTypes","React","block","titleAndYear","connect","BidStatus","GridArtwork","props","saleArtwork","artistDisplay","date","image","isAuction","isClosed","lotLabel","sale_message","title","b","_id","id","__html","propTypes","object","isRequired","string","bool","mapStateToProps","state","artists","artwork","length","map","aa","name","join","app","auction","get","artworkBrowser","lot_label","test"],"mappings":"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","sourcesContent":["import _BidStatus from './BidStatus'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport titleAndYear from 'desktop/apps/auction/utils/titleAndYear'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\n\n// FIXME: Rewire\nlet BidStatus = _BidStatus\n\nfunction GridArtwork (props) {\n  const {\n    saleArtwork,\n    artistDisplay,\n    date,\n    image,\n    isAuction,\n    isClosed,\n    lotLabel,\n    sale_message,\n    title\n  } = props\n\n  const b = block('auction-page-GridArtwork')\n\n  return (\n    <a className={b()} key={saleArtwork._id} href={`/artwork/${saleArtwork.id}`}>\n      <div className={b('image-container')}>\n        <div className='vam-outer'>\n          <div className='vam-inner'>\n            <div className={b('image')}>\n              <img src={image} alt={title} / >\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={b('metadata')}>\n        { isAuction\n          ? <div className={b('lot-information')}>\n            <div className={b('lot-number')}>\n              Lot {lotLabel}\n            </div>\n            { !isClosed &&\n              <BidStatus\n                artworkItem={saleArtwork}\n              /> }\n          </div>\n          : <div>\n            {sale_message}\n          </div>\n        }\n        <div className={b('artists')}>\n          {artistDisplay}\n        </div>\n        <div\n          className={b('title')}\n          dangerouslySetInnerHTML={{\n            __html: titleAndYear(title, date)\n          }}\n        />\n      </div>\n    </a>\n  )\n}\n\nGridArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string, // Not needed for e-commerce sales\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string, // E-commerce sales only\n  title: PropTypes.string.isRequired\n}\n\n// TODO: Unify this selector across artwork types\nconst mapStateToProps = (state, props) => {\n  const { saleArtwork } = props\n  const image = get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png')\n  const { artists } = saleArtwork.artwork\n  const artistDisplay = artists && artists.length > 0\n    ? artists.map((aa) => aa.name).join(', ')\n    : ''\n\n  return {\n    artistDisplay,\n    date: saleArtwork.artwork.date,\n    image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.artworkBrowser.isClosed || state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GridArtwork)\n\nexport const test = { GridArtwork }\n"]}]}