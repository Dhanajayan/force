{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/dompurify/src/purify.js","dependencies":[{"path":"/Users/eve/development/force/node_modules/dompurify/src/purify.js","mtime":1493792424000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["var _Object$freeze = require(\"@babel/runtime/core-js/object/freeze\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\n;\n\n(function (factory) {\n  'use strict';\n  /* global window: false, define: false, module: false */\n\n  var root = typeof window === 'undefined' ? null : window;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return factory(root);\n    });\n  } else if (typeof module !== 'undefined') {\n    module.exports = factory(root);\n  } else {\n    root.DOMPurify = factory(root);\n  }\n})(function factory(window) {\n  'use strict';\n\n  var DOMPurify = function DOMPurify(window) {\n    return factory(window);\n  };\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '0.8.9';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  var document = window.document;\n  var originalDocument = document;\n  var DocumentFragment = window.DocumentFragment;\n  var HTMLTemplateElement = window.HTMLTemplateElement;\n  var Node = window.Node;\n  var NodeFilter = window.NodeFilter;\n  var NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap;\n  var Text = window.Text;\n  var Comment = window.Comment;\n  var DOMParser = window.DOMParser;\n  var useDOMParser = false; // See comment below\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var implementation = document.implementation;\n  var createNodeIterator = document.createNodeIterator;\n  var getElementsByTagName = document.getElementsByTagName;\n  var createDocumentFragment = document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n  var hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n  /* Add properties to a lookup table */\n\n  var _addToSet = function _addToSet(set, array) {\n    var l = array.length;\n\n    while (l--) {\n      if (typeof array[l] === 'string') {\n        array[l] = array[l].toLowerCase();\n      }\n\n      set[array[l]] = true;\n    }\n\n    return set;\n  };\n  /* Shallow clone an object */\n\n\n  var _cloneObj = function _cloneObj(object) {\n    var newObject = {};\n    var property;\n\n    for (property in object) {\n      if (object.hasOwnProperty(property)) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  };\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n\n  var ALLOWED_TAGS = null;\n\n  var DEFAULT_ALLOWED_TAGS = _addToSet({}, [// HTML\n  'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n  'svg', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern', // SVG Filters\n  'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence', //MathML\n  'math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmuliscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mpspace', 'msqrt', 'mystyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', //Text\n  '#text']);\n  /* Allowed attribute names */\n\n\n  var ALLOWED_ATTR = null;\n\n  var DEFAULT_ALLOWED_ATTR = _addToSet({}, [// HTML\n  'accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'span', 'srclang', 'start', 'src', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', // SVG\n  'accent-height', 'accumulate', 'additivive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'mode', 'min', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'surfacescale', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'y', 'y1', 'y2', 'z', 'zoomandpan', // MathML\n  'accent', 'accentunder', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'display', 'displaystyle', 'fence', 'frame', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', // XML\n  'xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n\n  var FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  var FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  var ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  var ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Output should be safe for jQuery's $() factory? */\n\n  var SAFE_FOR_JQUERY = false;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  var SAFE_FOR_TEMPLATES = false;\n  /* Specify template detection regex for SAFE_FOR_TEMPLATES mode */\n\n  var MUSTACHE_EXPR = /\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm;\n  var ERB_EXPR = /<%[\\s\\S]*|[\\s\\S]*%>/gm;\n  /* Decide if document with <html>... should be returned */\n\n  var WHOLE_DOCUMENT = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  var FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  var RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */\n\n  var RETURN_DOM_FRAGMENT = false;\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n\n  var RETURN_DOM_IMPORT = false;\n  /* Output should be free from DOM clobbering attacks? */\n\n  var SANITIZE_DOM = true;\n  /* Keep element content when removing element? */\n\n  var KEEP_CONTENT = true;\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  var FORBID_CONTENTS = _addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n  /* Tags that are safe for data: URIs */\n\n\n  var DATA_URI_TAGS = _addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n  /* Attributes safe for values like \"javascript:\" */\n\n\n  var URI_SAFE_ATTRIBUTES = _addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n  /* Keep a reference to config to pass to hooks */\n\n\n  var CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n  /**\n   * _parseConfig\n   *\n   * @param  optional config literal\n   */\n\n  var _parseConfig = function _parseConfig(cfg) {\n    /* Shield configuration object from tampering */\n    if (_typeof(cfg) !== 'object') {\n      cfg = {};\n    }\n    /* Set configuration parameters */\n\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? _addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? _addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? _addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? _addToSet({}, cfg.FORBID_ATTR) : {};\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = _cloneObj(ALLOWED_TAGS);\n      }\n\n      _addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = _cloneObj(ALLOWED_ATTR);\n      }\n\n      _addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      _addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (Object && 'freeze' in Object) {\n      _Object$freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n  /**\n    * _forceRemove\n    *\n    * @param  a DOM node\n    */\n\n\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({\n      element: node\n    });\n\n    try {\n      node.parentNode.removeChild(node);\n    } catch (e) {\n      node.outerHTML = '';\n    }\n  };\n  /**\n    * _removeAttribute\n    *\n    * @param  an Attribute name\n    * @param  a DOM node\n    */\n\n\n  var _removeAttribute = function _removeAttribute(name, node) {\n    DOMPurify.removed.push({\n      attribute: node.getAttributeNode(name),\n      from: node\n    });\n    node.removeAttribute(name);\n  };\n  /**\n    * _initDocument\n    *\n    * @param  a string of dirty markup\n    * @return a DOM, filled with the dirty markup\n    */\n\n\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc, body;\n    /* Fill body with bogus element */\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    }\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n\n\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (e) {}\n    }\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n       Safari (see comment below) */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      body = doc.body;\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = dirty;\n    }\n    /* Work on whole document or just its body */\n\n\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  }; // Safari 10.1+ (unfixed as of time of writing) has a catastrophic bug in\n  // its implementation of DOMParser such that the following executes the\n  // JavaScript:\n  //\n  // new DOMParser()\n  //   .parseFromString('<svg onload=alert(document.domain)>', 'text/html');\n  //\n  // However, Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n\n\n  if (DOMPurify.isSupported) {\n    (function () {\n      var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">');\n\n      if (doc.querySelector('svg img')) {\n        useDOMParser = true;\n      }\n    })();\n  }\n  /**\n   * _createIterator\n   *\n   * @param  document/fragment to create iterator for\n   * @return iterator instance\n   */\n\n\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n\n\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * _isNode\n   *\n   * @param object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n\n\n  var _isNode = function _isNode(obj) {\n    return _typeof(Node) === \"object\" ? obj instanceof Node : obj && _typeof(obj) === \"object\" && typeof obj.nodeType === \"number\" && typeof obj.nodeName === \"string\";\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   node to check for permission to exist\n   * @return  true if node was killed, false if left alive\n   */\n\n\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var tagName, content;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    tagName = currentNode.nodeName.toLowerCase();\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);\n        } catch (e) {}\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Convert markup to cover jQuery behavior */\n\n\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({\n        element: currentNode.cloneNode()\n      });\n      currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR, ' ');\n      content = content.replace(ERB_EXPR, ' ');\n\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  var DATA_ATTR = /^data-[\\-\\w.\\u00B7-\\uFFFF]/;\n  var ARIA_ATTR = /^aria-[\\-\\w]+$/;\n  var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n  var IS_SCRIPT_OR_DATA = /^(?:\\w+script|data):/i;\n  /* This needs to be extensive thanks to Webkit/Blink's behavior */\n\n  var ATTR_WHITESPACE = /[\\x00-\\x20\\xA0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param   node to sanitize\n   * @return  void\n   */\n\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr, name, value, lcName, idAttr, attributes, hookEvent, l;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    attributes = currentNode.attributes;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      attr = attributes[l];\n      name = attr.name;\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = Array.prototype.slice.apply(attributes);\n\n        _removeAttribute('id', currentNode);\n\n        _removeAttribute(name, currentNode);\n\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if ( // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n\n        _removeAttribute(name, currentNode);\n      }\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Make sure attribute cannot clobber */\n\n\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in window || value in document || value in formElement)) {\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        value = value.replace(MUSTACHE_EXPR, ' ');\n        value = value.replace(ERB_EXPR, ' ');\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n         (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n         XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n         We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && DATA_ATTR.test(lcName)) {// This attribute is safe\n      } else if (ALLOW_ARIA_ATTR && ARIA_ATTR.test(lcName)) {} // This attribute is safe\n\n      /* Otherwise, check the name is permitted */\n      else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n          continue;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n        else if (URI_SAFE_ATTRIBUTES[lcName]) {} // This attribute is safe\n\n          /* Check no script, data or unknown possibly unsafe URI\n             unless we know URI values are safe for that attribute */\n          else if (IS_ALLOWED_URI.test(value.replace(ATTR_WHITESPACE, ''))) {} // This attribute is safe\n\n            /* Keep image data URIs alive if src/xlink:href is allowed */\n            else if ((lcName === 'src' || lcName === 'xlink:href') && value.indexOf('data:') === 0 && DATA_URI_TAGS[currentNode.nodeName.toLowerCase()]) {} // This attribute is safe\n\n              /* Allow unknown protocols: This provides support for links that\n                 are handled by protocol handlers which may be unknown ahead of\n                 time, e.g. fb:, spotify: */\n              else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA.test(value.replace(ATTR_WHITESPACE, ''))) {} // This attribute is safe\n\n                /* Check for binary attributes */\n                else if (!value) {} // binary attributes are safe at this point\n\n                  /* Anything else, presume unsafe, do not add it back */\n                  else {\n                      continue;\n                    }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        currentNode.setAttribute(name, value);\n        DOMPurify.removed.pop();\n      } catch (e) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  fragment to iterate over recursively\n   * @return void\n   */\n\n\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode;\n\n    var shadowIterator = _createIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode\n   */\n\n\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n\n\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body, importedNode, currentNode, oldNode, nodeIterator, returnNode;\n    /* Make sure we have a string to sanitize.\n       DO NOT return early, as this will return the wrong type if\n       the user has requested a DOM object rather than a string */\n\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n      }\n    }\n    /* Check we can run. Otherwise fall back or ignore */\n\n\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        } else if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    _parseConfig(cfg);\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n\n    if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else {\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    nodeIterator = _createIterator(body);\n    /* Now start iterating over the created document */\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* adoptNode() is not used because internal state is not reset\n           (e.g. the past names map of a HTMLFormElement), this is safe\n           in theory but we would rather not risk another attack vector.\n           The state that is cloned by importNode() is explicitly defined\n           by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n  };\n  /**\n   * addHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint\n   * @param {Function} hookFunction\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n  /**\n   * removeHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint\n   * @return void\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n  /**\n   * removeHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint\n   * @return void\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * removeAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   * @return void\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n});",{"version":3,"sources":["node_modules/dompurify/src/purify.js"],"names":["factory","root","window","define","amd","module","exports","DOMPurify","version","removed","document","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","useDOMParser","template","createElement","content","ownerDocument","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","_addToSet","set","array","l","length","toLowerCase","_cloneObj","object","newObject","property","hasOwnProperty","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","MUSTACHE_EXPR","ERB_EXPR","WHOLE_DOCUMENT","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","Object","_forceRemove","node","push","element","parentNode","removeChild","e","outerHTML","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","_initDocument","dirty","doc","body","parseFromString","documentElement","firstElementChild","call","querySelector","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","_isNode","obj","_sanitizeElements","currentNode","tagName","_executeHook","allowedTags","insertAdjacentHTML","innerHTML","test","cloneNode","replace","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_sanitizeAttributes","attr","value","lcName","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","trim","id","Array","prototype","slice","apply","indexOf","pop","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","entryPoint","data","forEach","hook","sanitize","importedNode","oldNode","nodeIterator","returnNode","toString","TypeError","toStaticHTML","appendChild","firstChild","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"mappings":"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","file":"/Users/eve/development/force/node_modules/dompurify/src/purify.js","sourceRoot":"/Users/eve/development/force","sourcesContent":[";(function(factory) {\n    'use strict';\n    /* global window: false, define: false, module: false */\n    var root = typeof window === 'undefined' ? null : window;\n\n    if (typeof define === 'function' && define.amd) {\n        define(function(){ return factory(root); });\n    } else if (typeof module !== 'undefined') {\n        module.exports = factory(root);\n    } else {\n        root.DOMPurify = factory(root);\n    }\n}(function factory(window) {\n    'use strict';\n\n    var DOMPurify = function(window) {\n        return factory(window);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '0.8.9';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n        // not running in a browser, provide a factory function\n        // so that you can pass your own Window\n        DOMPurify.isSupported = false;\n        return DOMPurify;\n    }\n\n    var document = window.document;\n    var originalDocument = document;\n    var DocumentFragment = window.DocumentFragment;\n    var HTMLTemplateElement = window.HTMLTemplateElement;\n    var Node = window.Node;\n    var NodeFilter = window.NodeFilter;\n    var NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap;\n    var Text = window.Text;\n    var Comment = window.Comment;\n    var DOMParser = window.DOMParser;\n    var useDOMParser = false; // See comment below\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n        var template = document.createElement('template');\n        if (template.content && template.content.ownerDocument) {\n            document = template.content.ownerDocument;\n        }\n    }\n    var implementation = document.implementation;\n    var createNodeIterator = document.createNodeIterator;\n    var getElementsByTagName = document.getElementsByTagName;\n    var createDocumentFragment = document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported =\n        typeof implementation.createHTMLDocument !== 'undefined' &&\n        document.documentMode !== 9;\n\n    /* Add properties to a lookup table */\n    var _addToSet = function(set, array) {\n        var l = array.length;\n        while (l--) {\n            if (typeof array[l] === 'string') {\n                array[l] = array[l].toLowerCase();\n            }\n            set[array[l]] = true;\n        }\n        return set;\n    };\n\n    /* Shallow clone an object */\n    var _cloneObj = function(object) {\n        var newObject = {};\n        var property;\n        for (property in object) {\n            if (object.hasOwnProperty(property)) {\n                newObject[property] = object[property];\n            }\n        }\n        return newObject;\n    };\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = _addToSet({}, [\n\n        // HTML\n        'a','abbr','acronym','address','area','article','aside','audio','b',\n        'bdi','bdo','big','blink','blockquote','body','br','button','canvas',\n        'caption','center','cite','code','col','colgroup','content','data',\n        'datalist','dd','decorator','del','details','dfn','dir','div','dl','dt',\n        'element','em','fieldset','figcaption','figure','font','footer','form',\n        'h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','i',\n        'img','input','ins','kbd','label','legend','li','main','map','mark',\n        'marquee','menu','menuitem','meter','nav','nobr','ol','optgroup',\n        'option','output','p','pre','progress','q','rp','rt','ruby','s','samp',\n        'section','select','shadow','small','source','spacer','span','strike',\n        'strong','style','sub','summary','sup','table','tbody','td','template',\n        'textarea','tfoot','th','thead','time','tr','track','tt','u','ul','var',\n        'video','wbr',\n\n        // SVG\n        'svg','altglyph','altglyphdef','altglyphitem','animatecolor',\n        'animatemotion','animatetransform','circle','clippath','defs','desc',\n        'ellipse','filter','font','g','glyph','glyphref','hkern','image','line',\n        'lineargradient','marker','mask','metadata','mpath','path','pattern',\n        'polygon','polyline','radialgradient','rect','stop','switch','symbol',\n        'text','textpath','title','tref','tspan','view','vkern',\n\n        // SVG Filters\n        'feBlend','feColorMatrix','feComponentTransfer','feComposite',\n        'feConvolveMatrix','feDiffuseLighting','feDisplacementMap',\n        'feFlood','feFuncA','feFuncB','feFuncG','feFuncR','feGaussianBlur',\n        'feMerge','feMergeNode','feMorphology','feOffset',\n        'feSpecularLighting','feTile','feTurbulence',\n\n        //MathML\n        'math','menclose','merror','mfenced','mfrac','mglyph','mi','mlabeledtr',\n        'mmuliscripts','mn','mo','mover','mpadded','mphantom','mroot','mrow',\n        'ms','mpspace','msqrt','mystyle','msub','msup','msubsup','mtable','mtd',\n        'mtext','mtr','munder','munderover',\n\n        //Text\n        '#text'\n    ]);\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = _addToSet({}, [\n\n        // HTML\n        'accept','action','align','alt','autocomplete','background','bgcolor',\n        'border','cellpadding','cellspacing','checked','cite','class','clear','color',\n        'cols','colspan','coords','datetime','default','dir','disabled',\n        'download','enctype','face','for','headers','height','hidden','high','href',\n        'hreflang','id','ismap','label','lang','list','loop', 'low','max',\n        'maxlength','media','method','min','multiple','name','noshade','novalidate',\n        'nowrap','open','optimum','pattern','placeholder','poster','preload','pubdate',\n        'radiogroup','readonly','rel','required','rev','reversed','role','rows',\n        'rowspan','spellcheck','scope','selected','shape','size','span',\n        'srclang','start','src','step','style','summary','tabindex','title',\n        'type','usemap','valign','value','width','xmlns',\n\n        // SVG\n        'accent-height','accumulate','additivive','alignment-baseline',\n        'ascent','attributename','attributetype','azimuth','basefrequency',\n        'baseline-shift','begin','bias','by','clip','clip-path','clip-rule',\n        'color','color-interpolation','color-interpolation-filters','color-profile',\n        'color-rendering','cx','cy','d','dx','dy','diffuseconstant','direction',\n        'display','divisor','dur','edgemode','elevation','end','fill','fill-opacity',\n        'fill-rule','filter','flood-color','flood-opacity','font-family','font-size',\n        'font-size-adjust','font-stretch','font-style','font-variant','font-weight',\n        'fx', 'fy','g1','g2','glyph-name','glyphref','gradientunits','gradienttransform',\n        'image-rendering','in','in2','k','k1','k2','k3','k4','kerning','keypoints',\n        'keysplines','keytimes','lengthadjust','letter-spacing','kernelmatrix',\n        'kernelunitlength','lighting-color','local','marker-end','marker-mid',\n        'marker-start','markerheight','markerunits','markerwidth','maskcontentunits',\n        'maskunits','max','mask','mode','min','numoctaves','offset','operator',\n        'opacity','order','orient','orientation','origin','overflow','paint-order',\n        'path','pathlength','patterncontentunits','patterntransform','patternunits',\n        'points','preservealpha','r','rx','ry','radius','refx','refy','repeatcount',\n        'repeatdur','restart','result','rotate','scale','seed','shape-rendering',\n        'specularconstant','specularexponent','spreadmethod','stddeviation','stitchtiles',\n        'stop-color','stop-opacity','stroke-dasharray','stroke-dashoffset','stroke-linecap',\n        'stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke','stroke-width',\n        'surfacescale','targetx','targety','transform','text-anchor','text-decoration',\n        'text-rendering','textlength','u1','u2','unicode','values','viewbox',\n        'visibility','vert-adv-y','vert-origin-x','vert-origin-y','word-spacing',\n        'wrap','writing-mode','xchannelselector','ychannelselector','x','x1','x2',\n        'y','y1','y2','z','zoomandpan',\n\n        // MathML\n        'accent','accentunder','bevelled','close','columnsalign','columnlines',\n        'columnspan','denomalign','depth','display','displaystyle','fence',\n        'frame','largeop','length','linethickness','lspace','lquote',\n        'mathbackground','mathcolor','mathsize','mathvariant','maxsize',\n        'minsize','movablelimits','notation','numalign','open','rowalign',\n        'rowlines','rowspacing','rowspan','rspace','rquote','scriptlevel',\n        'scriptminsize','scriptsizemultiplier','selection','separator',\n        'separators','stretchy','subscriptshift','supscriptshift','symmetric',\n        'voffset',\n\n        // XML\n        'xlink:href','xml:id','xlink:title','xml:space','xmlns:xlink'\n    ]);\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for jQuery's $() factory? */\n    var SAFE_FOR_JQUERY = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Specify template detection regex for SAFE_FOR_TEMPLATES mode */\n    var MUSTACHE_EXPR = /\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm;\n    var ERB_EXPR = /<%[\\s\\S]*|[\\s\\S]*%>/gm;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify. */\n    var RETURN_DOM_IMPORT = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = _addToSet({}, [\n        'audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video'\n    ]);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = _addToSet({}, [\n        'audio', 'video', 'img', 'source', 'image'\n    ]);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = _addToSet({}, [\n        'alt','class','for','id','label','name','pattern','placeholder',\n        'summary','title','value','style','xmlns'\n    ]);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  optional config literal\n     */\n    var _parseConfig = function(cfg) {\n        /* Shield configuration object from tampering */\n        if (typeof cfg !== 'object') {\n            cfg = {};\n        }\n\n        /* Set configuration parameters */\n        ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ?\n            _addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n        ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ?\n            _addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n        FORBID_TAGS = 'FORBID_TAGS' in cfg ?\n            _addToSet({}, cfg.FORBID_TAGS) : {};\n        FORBID_ATTR = 'FORBID_ATTR' in cfg ?\n            _addToSet({}, cfg.FORBID_ATTR) : {};\n        ALLOW_ARIA_ATTR     = cfg.ALLOW_ARIA_ATTR     !== false; // Default true\n        ALLOW_DATA_ATTR     = cfg.ALLOW_DATA_ATTR     !== false; // Default true\n        ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n        SAFE_FOR_JQUERY     = cfg.SAFE_FOR_JQUERY     ||  false; // Default false\n        SAFE_FOR_TEMPLATES  = cfg.SAFE_FOR_TEMPLATES  ||  false; // Default false\n        WHOLE_DOCUMENT      = cfg.WHOLE_DOCUMENT      ||  false; // Default false\n        RETURN_DOM          = cfg.RETURN_DOM          ||  false; // Default false\n        RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT ||  false; // Default false\n        RETURN_DOM_IMPORT   = cfg.RETURN_DOM_IMPORT   ||  false; // Default false\n        FORCE_BODY          = cfg.FORCE_BODY          ||  false; // Default false\n        SANITIZE_DOM        = cfg.SANITIZE_DOM        !== false; // Default true\n        KEEP_CONTENT        = cfg.KEEP_CONTENT        !== false; // Default true\n\n        if (SAFE_FOR_TEMPLATES) {\n            ALLOW_DATA_ATTR = false;\n        }\n\n        if (RETURN_DOM_FRAGMENT) {\n            RETURN_DOM = true;\n        }\n\n        /* Merge configuration parameters */\n        if (cfg.ADD_TAGS) {\n            if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n                ALLOWED_TAGS = _cloneObj(ALLOWED_TAGS);\n            }\n            _addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n        }\n        if (cfg.ADD_ATTR) {\n            if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n                ALLOWED_ATTR = _cloneObj(ALLOWED_ATTR);\n            }\n            _addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n        }\n        if (cfg.ADD_URI_SAFE_ATTR) {\n            _addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n        }\n\n        /* Add #text in case KEEP_CONTENT is set to true */\n        if (KEEP_CONTENT) { ALLOWED_TAGS['#text'] = true; }\n\n        // Prevent further manipulation of configuration.\n        // Not available in IE8, Safari 5, etc.\n        if (Object && 'freeze' in Object) { Object.freeze(cfg); }\n\n        CONFIG = cfg;\n    };\n\n   /**\n     * _forceRemove\n     *\n     * @param  a DOM node\n     */\n    var _forceRemove = function(node) {\n        DOMPurify.removed.push({element: node});\n        try {\n            node.parentNode.removeChild(node);\n        } catch (e) {\n            node.outerHTML = '';\n        }\n    };\n\n   /**\n     * _removeAttribute\n     *\n     * @param  an Attribute name\n     * @param  a DOM node\n     */\n    var _removeAttribute = function(name, node) {\n        DOMPurify.removed.push({\n            attribute: node.getAttributeNode(name),\n            from: node\n        });\n        node.removeAttribute(name);\n    };\n\n   /**\n     * _initDocument\n     *\n     * @param  a string of dirty markup\n     * @return a DOM, filled with the dirty markup\n     */\n    var _initDocument = function(dirty) {\n        /* Create a HTML document */\n        var doc, body;\n\n        /* Fill body with bogus element */\n        if (FORCE_BODY) {\n            dirty = '<remove></remove>' + dirty;\n        }\n\n        /* Use DOMParser to workaround Firefox bug (see comment below) */\n        if (useDOMParser) {\n            try {\n                doc = new DOMParser().parseFromString(dirty, 'text/html');\n            } catch (e) {}\n        }\n\n        /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n           Safari (see comment below) */\n        if (!doc || !doc.documentElement) {\n            doc = implementation.createHTMLDocument('');\n            body = doc.body;\n            body.parentNode.removeChild(body.parentNode.firstElementChild);\n            body.outerHTML = dirty;\n        }\n\n        /* Work on whole document or just its body */\n        return getElementsByTagName.call(doc,\n            WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    // Safari 10.1+ (unfixed as of time of writing) has a catastrophic bug in\n    // its implementation of DOMParser such that the following executes the\n    // JavaScript:\n    //\n    // new DOMParser()\n    //   .parseFromString('<svg onload=alert(document.domain)>', 'text/html');\n    //\n    // However, Firefox uses a different parser for innerHTML rather than\n    // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n    // which means that you *must* use DOMParser, otherwise the output may\n    // not be safe if used in a document.write context later.\n    //\n    // So we feature detect the Firefox bug and use the DOMParser if necessary.\n    if (DOMPurify.isSupported) {\n        (function () {\n            var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">');\n            if (doc.querySelector('svg img')) {\n                useDOMParser = true;\n            }\n        }());\n    }\n\n    /**\n     * _createIterator\n     *\n     * @param  document/fragment to create iterator for\n     * @return iterator instance\n     */\n    var _createIterator = function(root) {\n        return createNodeIterator.call(root.ownerDocument || root,\n            root,\n            NodeFilter.SHOW_ELEMENT\n            | NodeFilter.SHOW_COMMENT\n            | NodeFilter.SHOW_TEXT,\n            function() { return NodeFilter.FILTER_ACCEPT; },\n            false\n        );\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  element to check for clobbering attacks\n     * @return true if clobbered, false if safe\n     */\n    var _isClobbered = function(elm) {\n        if (elm instanceof Text || elm instanceof Comment) {\n            return false;\n        }\n        if (  typeof elm.nodeName !== 'string'\n           || typeof elm.textContent !== 'string'\n           || typeof elm.removeChild !== 'function'\n           || !(elm.attributes instanceof NamedNodeMap)\n           || typeof elm.removeAttribute !== 'function'\n           || typeof elm.setAttribute !== 'function'\n        ) {\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param object to check whether it's a DOM node\n     * @return true is object is a DOM node\n     */\n    var _isNode = function(obj) {\n        return (\n            typeof Node === \"object\" ? obj instanceof Node : obj\n                && typeof obj === \"object\" && typeof obj.nodeType === \"number\"\n                && typeof obj.nodeName===\"string\"\n        );\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   node to check for permission to exist\n     * @return  true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function(currentNode) {\n        var tagName, content;\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeElements', currentNode, null);\n\n        /* Check if element is clobbered or can clobber */\n        if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n            return true;\n        }\n\n        /* Now let's check the element's type and name */\n        tagName = currentNode.nodeName.toLowerCase();\n\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeElement', currentNode, {\n            tagName: tagName,\n            allowedTags: ALLOWED_TAGS\n        });\n\n        /* Remove element if anything forbids its presence */\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            /* Keep content except for black-listed elements */\n            if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]\n                    && typeof currentNode.insertAdjacentHTML === 'function') {\n                try {\n                    currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);\n                } catch (e) {}\n            }\n            _forceRemove(currentNode);\n            return true;\n        }\n\n        /* Convert markup to cover jQuery behavior */\n        if (SAFE_FOR_JQUERY && !currentNode.firstElementChild &&\n                (!currentNode.content || !currentNode.content.firstElementChild) &&\n                /</g.test(currentNode.textContent)) {\n            DOMPurify.removed.push({element: currentNode.cloneNode()});\n            currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n        }\n\n        /* Sanitize element content to be template-safe */\n        if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n            /* Get the element's text content */\n            content = currentNode.textContent;\n            content = content.replace(MUSTACHE_EXPR, ' ');\n            content = content.replace(ERB_EXPR, ' ');\n            if (currentNode.textContent !== content) {\n                DOMPurify.removed.push({element: currentNode.cloneNode()});\n                currentNode.textContent = content;\n            }\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeElements', currentNode, null);\n\n        return false;\n    };\n\n    var DATA_ATTR = /^data-[\\-\\w.\\u00B7-\\uFFFF]/;\n    var ARIA_ATTR = /^aria-[\\-\\w]+$/;\n    var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n    var IS_SCRIPT_OR_DATA = /^(?:\\w+script|data):/i;\n    /* This needs to be extensive thanks to Webkit/Blink's behavior */\n    var ATTR_WHITESPACE = /[\\x00-\\x20\\xA0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param   node to sanitize\n     * @return  void\n     */\n    var _sanitizeAttributes = function(currentNode) {\n        var attr, name, value, lcName, idAttr, attributes, hookEvent, l;\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n        attributes = currentNode.attributes;\n\n        /* Check if we have attributes; if not we might have a text node */\n        if (!attributes) { return; }\n\n        hookEvent = {\n            attrName: '',\n            attrValue: '',\n            keepAttr: true,\n            allowedAttributes: ALLOWED_ATTR\n        };\n        l = attributes.length;\n\n        /* Go backwards over all attributes; safely remove bad ones */\n        while (l--) {\n            attr = attributes[l];\n            name = attr.name;\n            value = attr.value.trim();\n            lcName = name.toLowerCase();\n\n            /* Execute a hook if present */\n            hookEvent.attrName = lcName;\n            hookEvent.attrValue = value;\n            hookEvent.keepAttr = true;\n            _executeHook('uponSanitizeAttribute', currentNode, hookEvent );\n            value = hookEvent.attrValue;\n\n            /* Remove attribute */\n            // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n            // remove a \"name\" attribute from an <img> tag that has an \"id\"\n            // attribute at the time.\n            if (lcName === 'name'  &&\n                    currentNode.nodeName === 'IMG' && attributes.id) {\n                idAttr = attributes.id;\n                attributes = Array.prototype.slice.apply(attributes);\n                _removeAttribute('id', currentNode);\n                _removeAttribute(name, currentNode);\n                if (attributes.indexOf(idAttr) > l) {\n                    currentNode.setAttribute('id', idAttr.value);\n                }\n            } else if (\n                  // This works around a bug in Safari, where input[type=file]\n                  // cannot be dynamically set after type has been removed\n                  currentNode.nodeName === 'INPUT' && lcName === 'type' &&\n                  value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n                  continue;\n            } else {\n                // This avoids a crash in Safari v9.0 with double-ids.\n                // The trick is to first set the id to be empty and then to\n                // remove the attribute\n                if (name === 'id') {\n                    currentNode.setAttribute(name, '');\n                }\n                _removeAttribute(name, currentNode);\n            }\n\n            /* Did the hooks approve of the attribute? */\n            if (!hookEvent.keepAttr) {\n                continue;\n            }\n\n            /* Make sure attribute cannot clobber */\n            if (SANITIZE_DOM &&\n                    (lcName === 'id' || lcName === 'name') &&\n                    (value in window || value in document || value in formElement)) {\n                continue;\n            }\n\n            /* Sanitize attribute content to be template-safe */\n            if (SAFE_FOR_TEMPLATES) {\n                value = value.replace(MUSTACHE_EXPR, ' ');\n                value = value.replace(ERB_EXPR, ' ');\n            }\n\n            /* Allow valid data-* attributes: At least one character after \"-\"\n               (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n               XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n               We don't need to check the value; it's always URI safe. */\n            if (ALLOW_DATA_ATTR && DATA_ATTR.test(lcName)) {\n                // This attribute is safe\n            }\n            else if (ALLOW_ARIA_ATTR && ARIA_ATTR.test(lcName)) {\n                // This attribute is safe\n            }\n            /* Otherwise, check the name is permitted */\n            else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n                continue;\n            }\n            /* Check value is safe. First, is attr inert? If so, is safe */\n            else if (URI_SAFE_ATTRIBUTES[lcName]) {\n                // This attribute is safe\n            }\n            /* Check no script, data or unknown possibly unsafe URI\n               unless we know URI values are safe for that attribute */\n            else if (IS_ALLOWED_URI.test(value.replace(ATTR_WHITESPACE,''))) {\n                // This attribute is safe\n            }\n            /* Keep image data URIs alive if src/xlink:href is allowed */\n            else if (\n                (lcName === 'src' || lcName === 'xlink:href') &&\n                value.indexOf('data:') === 0 &&\n                DATA_URI_TAGS[currentNode.nodeName.toLowerCase()]) {\n                // This attribute is safe\n            }\n            /* Allow unknown protocols: This provides support for links that\n               are handled by protocol handlers which may be unknown ahead of\n               time, e.g. fb:, spotify: */\n            else if (\n                ALLOW_UNKNOWN_PROTOCOLS &&\n                !IS_SCRIPT_OR_DATA.test(value.replace(ATTR_WHITESPACE,''))) {\n                // This attribute is safe\n            }\n            /* Check for binary attributes */\n            else if (!value) {\n                // binary attributes are safe at this point\n            }\n            /* Anything else, presume unsafe, do not add it back */\n            else {\n                continue;\n            }\n\n            /* Handle invalid data-* attribute set by try-catching it */\n            try {\n                currentNode.setAttribute(name, value);\n                DOMPurify.removed.pop();\n            } catch (e) {}\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  fragment to iterate over recursively\n     * @return void\n     */\n    var _sanitizeShadowDOM = function(fragment) {\n        var shadowNode;\n        var shadowIterator = _createIterator(fragment);\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n        while ( (shadowNode = shadowIterator.nextNode()) ) {\n            /* Execute a hook if present */\n            _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n            /* Sanitize tags and elements */\n            if (_sanitizeElements(shadowNode)) {\n                continue;\n            }\n\n            /* Deep shadow DOM detected */\n            if (shadowNode.content instanceof DocumentFragment) {\n                _sanitizeShadowDOM(shadowNode.content);\n            }\n\n            /* Check attributes, sanitize if necessary */\n            _sanitizeAttributes(shadowNode);\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode\n     */\n    var _executeHook = function(entryPoint, currentNode, data) {\n        if (!hooks[entryPoint]) { return; }\n\n        hooks[entryPoint].forEach(function(hook) {\n            hook.call(DOMPurify, currentNode, data, CONFIG);\n        });\n    };\n\n    /**\n     * sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    DOMPurify.sanitize = function(dirty, cfg) {\n        var body, importedNode, currentNode, oldNode, nodeIterator, returnNode;\n        /* Make sure we have a string to sanitize.\n           DO NOT return early, as this will return the wrong type if\n           the user has requested a DOM object rather than a string */\n        if (!dirty) {\n            dirty = '<!-->';\n        }\n\n        /* Stringify, in case dirty is an object */\n        if (typeof dirty !== 'string' && !_isNode(dirty)) {\n            if (typeof dirty.toString !== 'function') {\n                throw new TypeError('toString is not a function');\n            } else {\n                dirty = dirty.toString();\n            }\n        }\n\n        /* Check we can run. Otherwise fall back or ignore */\n        if (!DOMPurify.isSupported) {\n            if (typeof window.toStaticHTML === 'object'\n                || typeof window.toStaticHTML === 'function') {\n                if (typeof dirty === 'string') {\n                    return window.toStaticHTML(dirty);\n                } else if (_isNode(dirty)) {\n                    return window.toStaticHTML(dirty.outerHTML);\n                }\n            }\n            return dirty;\n        }\n\n        /* Assign config vars */\n        _parseConfig(cfg);\n\n        /* Clean up removed elements */\n        DOMPurify.removed = [];\n\n        if (dirty instanceof Node) {\n            /* If dirty is a DOM element, append to an empty document to avoid\n               elements being stripped by the parser */\n            body = _initDocument('<!-->');\n            importedNode = body.ownerDocument.importNode(dirty, true);\n            if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n                /* Node is already a body, use as is */\n                body = importedNode;\n            } else {\n                body.appendChild(importedNode);\n            }\n        } else {\n            /* Exit directly if we have nothing to do */\n            if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n                return dirty;\n            }\n\n            /* Initialize the document to work on */\n            body = _initDocument(dirty);\n\n            /* Check we have a DOM node from the data */\n            if (!body) {\n                return RETURN_DOM ? null : '';\n            }\n        }\n\n        /* Remove first element node (ours) if FORCE_BODY is set */\n        if (FORCE_BODY) {\n            _forceRemove(body.firstChild);\n        }\n\n        /* Get node iterator */\n        nodeIterator = _createIterator(body);\n\n        /* Now start iterating over the created document */\n        while ( (currentNode = nodeIterator.nextNode()) ) {\n\n            /* Fix IE's strange behavior with manipulated textNodes #89 */\n            if (currentNode.nodeType === 3 && currentNode === oldNode) {\n                continue;\n            }\n\n            /* Sanitize tags and elements */\n            if (_sanitizeElements(currentNode)) {\n                continue;\n            }\n\n            /* Shadow DOM detected, sanitize it */\n            if (currentNode.content instanceof DocumentFragment) {\n                _sanitizeShadowDOM(currentNode.content);\n            }\n\n            /* Check attributes, sanitize if necessary */\n            _sanitizeAttributes(currentNode);\n\n            oldNode = currentNode;\n        }\n\n        /* Return sanitized string or DOM */\n        if (RETURN_DOM) {\n\n            if (RETURN_DOM_FRAGMENT) {\n                returnNode = createDocumentFragment.call(body.ownerDocument);\n\n                while (body.firstChild) {\n                    returnNode.appendChild(body.firstChild);\n                }\n            } else {\n                returnNode = body;\n            }\n\n            if (RETURN_DOM_IMPORT) {\n                /* adoptNode() is not used because internal state is not reset\n                   (e.g. the past names map of a HTMLFormElement), this is safe\n                   in theory but we would rather not risk another attack vector.\n                   The state that is cloned by importNode() is explicitly defined\n                   by the specs. */\n                returnNode = importNode.call(originalDocument, returnNode, true);\n            }\n\n            return returnNode;\n        }\n\n        return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    };\n\n    /**\n     * addHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint\n     * @param {Function} hookFunction\n     */\n    DOMPurify.addHook = function(entryPoint, hookFunction) {\n        if (typeof hookFunction !== 'function') { return; }\n        hooks[entryPoint] = hooks[entryPoint] || [];\n        hooks[entryPoint].push(hookFunction);\n    };\n\n    /**\n     * removeHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint\n     * @return void\n     */\n    DOMPurify.removeHook = function(entryPoint) {\n        if (hooks[entryPoint]) {\n            hooks[entryPoint].pop();\n        }\n    };\n\n    /**\n     * removeHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint\n     * @return void\n     */\n    DOMPurify.removeHooks = function(entryPoint) {\n        if (hooks[entryPoint]) {\n            hooks[entryPoint] = [];\n        }\n    };\n\n    /**\n     * removeAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     * @return void\n     */\n    DOMPurify.removeAllHooks = function() {\n        hooks = {};\n    };\n\n    return DOMPurify;\n}));\n"]}]}