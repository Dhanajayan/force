{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/Toggle.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/Toggle.tsx","mtime":1529688806000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Toggle = void 0;\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _Arrow = require(\"../../../../../../src/Styleguide/Elements/Arrow\");\n\nvar _Flex = require(\"../../../../../../src/Styleguide/Elements/Flex\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _classCallCheck(this, Toggle);\n\n    _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));\n    Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        expanded: false,\n        disabled: false\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"toggleExpand\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        _this.setState({\n          expanded: !_this.state.expanded\n        });\n      }\n    });\n    _this.state = _extends({}, props);\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"render\",\n    value: function render() {\n      var _state = this.state,\n          disabled = _state.disabled,\n          expanded = _state.expanded;\n      return _react.default.createElement(_Flex.Flex, {\n        width: \"100%\",\n        flexDirection: \"column\"\n      }, _react.default.createElement(Header, {\n        onClick: this.toggleExpand,\n        disabled: disabled\n      }, _react.default.createElement(_Flex.Flex, {\n        justifyContent: \"space-between\"\n      }, _react.default.createElement(_palette.Sans, {\n        size: \"2\",\n        weight: \"medium\",\n        color: \"black100\",\n        mt: 0.3\n      }, this.props.label), !disabled && _react.default.createElement(_Flex.Flex, {\n        justifyContent: \"right\"\n      }, _react.default.createElement(_Arrow.Arrow, {\n        direction: expanded ? \"up\" : \"down\"\n      })))), expanded && _react.default.createElement(_Flex.Flex, {\n        flexDirection: \"column\",\n        alignItems: \"left\",\n        mt: -1,\n        mb: 1\n      }, this.props.children));\n    }\n  }]);\n\n  return Toggle;\n}(_react.default.Component);\n\nexports.Toggle = Toggle;\n\nvar Header = _styledComponents.default.div.attrs({}).withConfig({\n  displayName: \"Toggle__Header\",\n  componentId: \"t650yn-0\"\n})([\"border-top:1px solid \", \";cursor:pointer;padding-bottom:16px;padding-top:16px;pointer-events:\", \";user-select:none;\"], (0, _styledSystem.themeGet)(\"colors.black10\"), function (props) {\n  return props.disabled ? \"none\" : \"auto\";\n});",{"version":3,"sources":["node_modules/@artsy/reaction/src/Styleguide/Components/Toggle.tsx"],"names":["Toggle","props","expanded","disabled","setState","state","toggleExpand","label","children","Component","Header","div","attrs"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;IAaaA,M;;;;;AAMX,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4GAAMA,KAAN;AADiB;AAAA;AAAA;AAAA;AAAA,aALX;AACNC,kBAAU,KADJ;AAENC,kBAAU;AAFJ;AAKW;AAAA;AAAA;AAAA;AAAA;AAAA,aAQJ,iBAAM;AACnB,cAAKC,QAAL,CAAc;AAAEF,oBAAU,CAAC,MAAKG,KAAL,CAAWH;AAAxB,SAAd;AACD;AAVkB;AAGjB,UAAKG,KAAL,gBACKJ,KADL;AAHiB;AAMlB;;;;6BAMQ;AAAA,mBACwB,KAAKI,KAD7B;AAAA,UACCF,QADD,UACCA,QADD;AAAA,UACWD,QADX,UACWA,QADX;AAGP,aACE;AAAM,eAAM,MAAZ;AAAmB,uBAAc;AAAjC,SACE,6BAAC,MAAD;AAAQ,iBAAS,KAAKI,YAAtB;AAAoC,kBAAUH;AAA9C,SACE;AAAM,wBAAe;AAArB,SACE;AAAM,cAAK,GAAX;AAAe,gBAAO,QAAtB;AAA+B,eAAM,UAArC;AAAgD,YAAI;AAApD,SACG,KAAKF,KAAL,CAAWM,KADd,CADF,EAIG,CAACJ,QAAD,IACC;AAAM,wBAAe;AAArB,SACE;AAAO,mBAAWD,WAAW,IAAX,GAAkB;AAApC,QADF,CALJ,CADF,CADF,EAaGA,YACC;AAAM,uBAAc,QAApB;AAA6B,oBAAW,MAAxC;AAA+C,YAAI,CAAC,CAApD;AAAuD,YAAI;AAA3D,SACG,KAAKD,KAAL,CAAWO,QADd,CAdJ,CADF;AAqBD;;;;EA1CyB,eAAMC,S;;;;AA6ClC,IAAMC,SAAS,0BAAOC,GAAP,CAAWC,KAAX,CAA8B,EAA9B,CAAT;AAAA;AAAA;AAAA,4HACoB,4BAAS,gBAAT,CADpB,EAKc;AAAA,SAAUX,MAAME,QAAN,GAAiB,MAAjB,GAA0B,MAApC;AAAA,CALd,CAAN","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/Toggle.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { themeGet } from \"styled-system\"\nimport { Arrow } from \"Styleguide/Elements/Arrow\"\nimport { Flex } from \"Styleguide/Elements/Flex\"\n\nexport interface ToggleProps {\n  disabled?: boolean\n  expanded?: boolean\n  label?: string\n}\n\nexport interface ToggleState {\n  disabled: boolean\n  expanded: boolean\n}\n\nexport class Toggle extends React.Component<ToggleProps> {\n  state = {\n    expanded: false,\n    disabled: false,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ...props,\n    }\n  }\n\n  toggleExpand = () => {\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  render() {\n    const { disabled, expanded } = this.state\n\n    return (\n      <Flex width=\"100%\" flexDirection=\"column\">\n        <Header onClick={this.toggleExpand} disabled={disabled}>\n          <Flex justifyContent=\"space-between\">\n            <Sans size=\"2\" weight=\"medium\" color=\"black100\" mt={0.3}>\n              {this.props.label}\n            </Sans>\n            {!disabled && (\n              <Flex justifyContent=\"right\">\n                <Arrow direction={expanded ? \"up\" : \"down\"} />\n              </Flex>\n            )}\n          </Flex>\n        </Header>\n        {expanded && (\n          <Flex flexDirection=\"column\" alignItems=\"left\" mt={-1} mb={1}>\n            {this.props.children}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }\n}\n\nconst Header = styled.div.attrs<ToggleProps>({})`\n  border-top: 1px solid ${themeGet(\"colors.black10\")};\n  cursor: pointer;\n  padding-bottom: 16px;\n  padding-top: 16px;\n  pointer-events: ${props => (props.disabled ? \"none\" : \"auto\")};\n  user-select: none;\n`\n"]}]}