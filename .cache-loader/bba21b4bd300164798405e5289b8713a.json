{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _FilterSort = _interopRequireDefault(require(\"./FilterSort\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _artworkBrowser = require(\"../../../actions/artworkBrowser\");\n\nvar Grid = function Grid(props) {\n  return _react.default.createElement(\"svg\", (0, _extends2.default)({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\"\n  }, props), _react.default.createElement(\"path\", {\n    d: \"M6 6h4v4H6zM14 6h4v4h-4zM22 6h4v4h-4zM6 14h4v4H6zM14 14h4v4h-4zM22 14h4v4h-4zM6 22h4v4H6zM14 22h4v4h-4zM22 22h4v4h-4z\"\n  }));\n};\n\nvar List = function List(props) {\n  return _react.default.createElement(\"svg\", (0, _extends2.default)({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\"\n  }, props), _react.default.createElement(\"path\", {\n    d: \"M6 22h20v2H6zM6 15h20v2H6zM6 8h20v2H6z\"\n  }));\n};\n\nfunction HeaderDesktop(props) {\n  var toggleListViewAction = props.toggleListViewAction,\n      totalLabel = props.totalLabel,\n      displayType = props.displayType;\n  var b = (0, _bemCnLite.default)('auction-artworks-HeaderDesktop');\n\n  var displayButtonClass = function displayButtonClass(buttonType, displayType) {\n    return (0, _classnames.default)(String(b(buttonType)), {\n      active: displayType === buttonType\n    });\n  };\n\n  return _react.default.createElement(\"div\", {\n    className: b()\n  }, _react.default.createElement(\"div\", {\n    className: b('left')\n  }, _react.default.createElement(\"div\", {\n    className: b('total')\n  }, totalLabel)), _react.default.createElement(\"div\", {\n    className: b('right')\n  }, _react.default.createElement(\"div\", {\n    className: b('sort')\n  }, _react.default.createElement(_FilterSort.default, null)), _react.default.createElement(\"div\", {\n    className: b('switch')\n  }, _react.default.createElement(\"div\", {\n    className: displayButtonClass('grid', displayType),\n    onClick: function onClick() {\n      return toggleListViewAction(false);\n    }\n  }, _react.default.createElement(Grid, null)), _react.default.createElement(\"div\", {\n    className: displayButtonClass('list', displayType),\n    onClick: function onClick() {\n      return toggleListViewAction(true);\n    }\n  }, _react.default.createElement(List, null)))));\n}\n\nHeaderDesktop.propTypes = {\n  displayType: _propTypes.default.string.isRequired,\n  toggleListViewAction: _propTypes.default.func.isRequired,\n  totalLabel: _propTypes.default.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$artworkBrowser = state.artworkBrowser,\n      isFetchingArtworks = _state$artworkBrowser.isFetchingArtworks,\n      isListView = _state$artworkBrowser.isListView,\n      total = _state$artworkBrowser.total;\n  var displayType = isListView ? 'list' : 'grid';\n  var totalLabel = isFetchingArtworks ? 'Loading results.' : \"\".concat(total, \" Artworks\");\n  return {\n    displayType: displayType,\n    totalLabel: totalLabel\n  };\n};\n\nvar mapDispatchToProps = {\n  toggleListViewAction: _artworkBrowser.toggleListView\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HeaderDesktop); // Helpers\n\n\nexports.default = _default;",{"version":3,"sources":["src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js"],"names":["Grid","List","HeaderDesktop","props","toggleListViewAction","totalLabel","displayType","b","displayButtonClass","buttonType","String","active","propTypes","string","isRequired","func","mapStateToProps","state","artworkBrowser","isFetchingArtworks","isListView","total","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;IAPOA,I,YAAAA,I;;;;;;;;;IACAC,I,YAAAA,I;;;;;;;;;AAQP,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAAA,MAE3BC,oBAF2B,GAKzBD,KALyB,CAE3BC,oBAF2B;AAAA,MAG3BC,UAH2B,GAKzBF,KALyB,CAG3BE,UAH2B;AAAA,MAI3BC,WAJ2B,GAKzBH,KALyB,CAI3BG,WAJ2B;AAO7B,MAAMC,IAAI,wBAAM,gCAAN,CAAV;;AAEA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,UAAD,EAAaH,WAAb,EAA6B;AACtD,WAAO,yBACLI,OAAOH,EAAEE,UAAF,CAAP,CADK,EAEL;AAAEE,cAAQL,gBAAgBG;AAA1B,KAFK,CAAP;AAID,GALD;;AAOA,SACE;AAAK,eAAWF;AAAhB,KACE;AAAK,eAAWA,EAAE,MAAF;AAAhB,KACE;AAAK,eAAWA,EAAE,OAAF;AAAhB,KACIF,UADJ,CADF,CADF,EAME;AAAK,eAAWE,EAAE,OAAF;AAAhB,KACE;AAAK,eAAWA,EAAE,MAAF;AAAhB,KACE,uDADF,CADF,EAIE;AAAK,eAAWA,EAAE,QAAF;AAAhB,KACE;AAAK,eAAWC,mBAAmB,MAAnB,EAA2BF,WAA3B,CAAhB;AAAyD,aAAS;AAAA,aAAMF,qBAAqB,KAArB,CAAN;AAAA;AAAlE,KACE,6BAAC,IAAD,OADF,CADF,EAIE;AAAK,eAAWI,mBAAmB,MAAnB,EAA2BF,WAA3B,CAAhB;AAAyD,aAAS;AAAA,aAAMF,qBAAqB,IAArB,CAAN;AAAA;AAAlE,KACE,6BAAC,IAAD,OADF,CAJF,CAJF,CANF,CADF;AAsBD;;AAEDF,cAAcU,SAAd,GAA0B;AACxBN,eAAa,mBAAUO,MAAV,CAAiBC,UADN;AAExBV,wBAAsB,mBAAUW,IAAV,CAAeD,UAFb;AAGxBT,cAAY,mBAAUQ,MAAV,CAAiBC;AAHL,CAA1B;;AAMA,IAAME,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,8BAK7BA,MAAMC,cALuB;AAAA,MAE/BC,kBAF+B,yBAE/BA,kBAF+B;AAAA,MAG/BC,UAH+B,yBAG/BA,UAH+B;AAAA,MAI/BC,KAJ+B,yBAI/BA,KAJ+B;AAOjC,MAAMf,cAAcc,aAAa,MAAb,GAAsB,MAA1C;AAEA,MAAMf,aAAac,qBACf,kBADe,aAEZE,KAFY,cAAnB;AAIA,SAAO;AACLf,4BADK;AAELD;AAFK,GAAP;AAID,CAjBD;;AAmBA,IAAMiB,qBAAqB;AACzBlB;AADyB,CAA3B;;eAIe,yBACbY,eADa,EAEbM,kBAFa,EAGbpB,aAHa,C,EAKf","file":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderDesktop.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import FilterSort from './FilterSort'\nimport Grid from '../../../../../components/main_layout/public/icons/grid.svg'\nimport List from '../../../../../components/main_layout/public/icons/list.svg'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport classNames from 'classnames'\nimport { connect } from 'react-redux'\nimport { toggleListView } from 'desktop/apps/auction/actions/artworkBrowser'\n\nfunction HeaderDesktop (props) {\n  const {\n    toggleListViewAction,\n    totalLabel,\n    displayType\n  } = props\n\n  const b = block('auction-artworks-HeaderDesktop')\n\n  const displayButtonClass = (buttonType, displayType) => {\n    return classNames(\n      String(b(buttonType)),\n      { active: displayType === buttonType }\n    )\n  }\n\n  return (\n    <div className={b()}>\n      <div className={b('left')}>\n        <div className={b('total')}>\n          { totalLabel }\n        </div>\n      </div>\n      <div className={b('right')}>\n        <div className={b('sort')}>\n          <FilterSort />\n        </div>\n        <div className={b('switch')}>\n          <div className={displayButtonClass('grid', displayType)} onClick={() => toggleListViewAction(false)}>\n            <Grid />\n          </div>\n          <div className={displayButtonClass('list', displayType)} onClick={() => toggleListViewAction(true)}>\n            <List />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nHeaderDesktop.propTypes = {\n  displayType: PropTypes.string.isRequired,\n  toggleListViewAction: PropTypes.func.isRequired,\n  totalLabel: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    isFetchingArtworks,\n    isListView,\n    total\n  } = state.artworkBrowser\n\n  const displayType = isListView ? 'list' : 'grid'\n\n  const totalLabel = isFetchingArtworks\n    ? 'Loading results.'\n    : `${total} Artworks`\n\n  return {\n    displayType,\n    totalLabel\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleListViewAction: toggleListView\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderDesktop)\n\n// Helpers\n"]}]}