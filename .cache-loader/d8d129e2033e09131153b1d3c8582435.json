{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/lib/global_react_modules.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/lib/global_react_modules.js","mtime":1537178749000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Artwork as ReactionArtwork } from \"@artsy/reaction/dist/Components/Artwork\";\nimport { ArtworkGrid as ReactionArtworkGrid } from \"@artsy/reaction/dist/Components/ArtworkGrid\";\nimport { ContextProvider } from \"@artsy/reaction/dist/Artsy\";\nimport { data as sd } from 'sharify';\nimport { ReactionTooltipQuestion } from \"../components/react/stitch_components/ReactionTooltipQuestion\";\nimport { ReactionArtworkDetails } from \"../components/react/stitch_components/ReactionArtworkDetails\";\nexport var TooltipQuestion = ReactionTooltipQuestion;\nexport var ArtworkDetails = ReactionArtworkDetails;\nexport var ArtworkGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ArtworkGrid, _Component);\n\n  function ArtworkGrid(props) {\n    var _this;\n\n    _classCallCheck(this, ArtworkGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArtworkGrid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"appendArtworks\", function (artworks) {\n      _this.setState({\n        artworks: artworks\n      });\n    });\n\n    _this.state = {\n      artworks: props.artworks || [] // NOTE: Reaction's ArtworkGrid has its own conception of infinite scroll\n      // which is enabled when `onLoadMore` is passed in. Since we're detecting\n      // scroll thresholds from backbone and thus externally, this callback can\n      // be used instead. See desktop/components/artwork_masonry/view.coffee for\n      // an example implementation\n\n    };\n\n    if (props.onAppendArtworks) {\n      props.onAppendArtworks(_this.appendArtworks);\n    }\n\n    return _this;\n  }\n\n  _createClass(ArtworkGrid, [{\n    key: \"render\",\n    value: function render() {\n      var artworks = mapToRelayConnection(this.state.artworks);\n      return React.createElement(ContextProvider, {\n        user: sd.CURRENT_USER\n      }, React.createElement(ReactionArtworkGrid, _extends({}, this.props, {\n        artworks: artworks,\n        useRelay: false\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    value: function __reactstandin__regenerateByEval(key, code) {\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ArtworkGrid;\n}(Component);\n\n_defineProperty(ArtworkGrid, \"propTypes\", {\n  artworks: PropTypes.array.isRequired\n});\n\nexport var Fillwidth = function Fillwidth(props) {\n  if (typeof window !== 'undefined') {\n    var _require = require(\"@artsy/reaction/dist/Components/Artwork/Fillwidth\"),\n        ReactionFillWidth = _require.Fillwidth;\n\n    var artworks = mapToRelayConnection(props.artworks); // eslint-disable-line\n\n    return React.createElement(ContextProvider, {\n      user: sd.CURRENT_USER\n    }, React.createElement(ReactionFillWidth, _extends({}, props, {\n      artworks: artworks,\n      useRelay: false\n    })));\n  } else {\n    return '';\n  }\n};\nexport var Artwork = function Artwork(props) {\n  return React.createElement(ContextProvider, {\n    user: sd.CURRENT_USER\n  }, React.createElement(ReactionArtwork, _extends({}, props, {\n    useRelay: false\n  })));\n}; // Helpers\n// Ensure that old artwork collections conform to new Relay connection api\n\nvar mapToRelayConnection = function mapToRelayConnection(artworks) {\n  return {\n    edges: artworks.map(function (artwork) {\n      return {\n        node: artwork\n      };\n    })\n  };\n};\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TooltipQuestion, \"TooltipQuestion\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  reactHotLoader.register(ArtworkDetails, \"ArtworkDetails\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  reactHotLoader.register(ArtworkGrid, \"ArtworkGrid\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  reactHotLoader.register(Fillwidth, \"Fillwidth\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  reactHotLoader.register(Artwork, \"Artwork\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  reactHotLoader.register(mapToRelayConnection, \"mapToRelayConnection\", \"/Users/eve/development/force/src/desktop/lib/global_react_modules.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/lib/global_react_modules.js"],"names":["PropTypes","React","Component","Artwork","ReactionArtwork","ArtworkGrid","ReactionArtworkGrid","ContextProvider","data","sd","ReactionTooltipQuestion","ReactionArtworkDetails","TooltipQuestion","ArtworkDetails","props","artworks","setState","state","onAppendArtworks","appendArtworks","mapToRelayConnection","CURRENT_USER","array","isRequired","Fillwidth","window","require","ReactionFillWidth","edges","map","artwork","node"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAO,IAAIC,eAApB;AACA,SAASC,WAAW,IAAIC,mBAAxB;AACA,SAASC,eAAT;AACA,SAASC,IAAI,IAAIC,EAAjB,QAA2B,SAA3B;AAEA,SAASC,uBAAT;AACA,SAASC,sBAAT;AAEA,OAAO,IAAMC,eAAe,GAAGF,uBAAxB;AACP,OAAO,IAAMG,cAAc,GAAGF,sBAAvB;AAEP,WAAaN,WAAb;AAAA;AAAA;AAAA;;AAKE,uBAAYS,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,6FAiBF,UAAAC,QAAQ,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,KArBkB;;AAGjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,IAAkB,EADjB,CAIb;AACA;AACA;AACA;AACA;;AARa,KAAb;;AASA,QAAID,KAAK,CAACI,gBAAV,EAA4B;AAC1BJ,MAAAA,KAAK,CAACI,gBAAN,CAAuB,MAAKC,cAA5B;AACD;;AAdgB;AAelB;;AApBH;AAAA;AAAA,6BA4BW;AACP,UAAMJ,QAAQ,GAAGK,oBAAoB,CAAC,KAAKH,KAAL,CAAWF,QAAZ,CAArC;AAEA,aACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEN,EAAE,CAACY;AAA1B,SACE,oBAAC,mBAAD,eACM,KAAKP,KADX;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,QAAQ,EAAE;AAHZ,SADF,CADF;AASD;AAxCH;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAiCb,SAAjC;;gBAAaG,W,eACQ;AACjBU,EAAAA,QAAQ,EAAEf,SAAS,CAACsB,KAAV,CAAgBC;AADT,C;;AA0CrB,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAV,KAAK,EAAI;AAChC,MAAI,OAAOW,MAAP,KAAkB,WAAtB,EAAmC;AAAA,mBAG7BC,OAAO,qDAHsB;AAAA,QAEpBC,iBAFoB,YAE/BH,SAF+B;;AAKjC,QAAMT,QAAQ,GAAGK,oBAAoB,CAACN,KAAK,CAACC,QAAP,CAArC,CALiC,CAKqB;;AAEtD,WACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEN,EAAE,CAACY;AAA1B,OACE,oBAAC,iBAAD,eAAuBP,KAAvB;AAA8B,MAAA,QAAQ,EAAEC,QAAxC;AAAkD,MAAA,QAAQ,EAAE;AAA5D,OADF,CADF;AAKD,GAZD,MAYO;AACL,WAAO,EAAP;AACD;AACF,CAhBM;AAkBP,OAAO,IAAMZ,OAAO,GAAG,SAAVA,OAAU,CAAAW,KAAK,EAAI;AAC9B,SACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,EAAE,CAACY;AAA1B,KACE,oBAAC,eAAD,eAAqBP,KAArB;AAA4B,IAAA,QAAQ,EAAE;AAAtC,KADF,CADF;AAKD,CANM,C,CAQP;AAEA;;AACA,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAL,QAAQ,EAAI;AACvC,SAAO;AACLa,IAAAA,KAAK,EAAEb,QAAQ,CAACc,GAAT,CAAa,UAAAC,OAAO,EAAI;AAC7B,aAAO;AACLC,QAAAA,IAAI,EAAED;AADD,OAAP;AAGD,KAJM;AADF,GAAP;AAOD,CARD;;;;;;;;;;;;;0BA3EalB,e;0BACAC,c;0BAEAR,W;0BA2CAmB,S;0BAkBArB,O;0BAWPiB,oB","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Artwork as ReactionArtwork } from 'reaction/Components/Artwork'\nimport { ArtworkGrid as ReactionArtworkGrid } from 'reaction/Components/ArtworkGrid'\nimport { ContextProvider } from 'reaction/Artsy'\nimport { data as sd } from 'sharify'\n\nimport { ReactionTooltipQuestion } from '../components/react/stitch_components/ReactionTooltipQuestion'\nimport { ReactionArtworkDetails } from '../components/react/stitch_components/ReactionArtworkDetails'\n\nexport const TooltipQuestion = ReactionTooltipQuestion\nexport const ArtworkDetails = ReactionArtworkDetails\n\nexport class ArtworkGrid extends Component {\n  static propTypes = {\n    artworks: PropTypes.array.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      artworks: props.artworks || [],\n    }\n\n    // NOTE: Reaction's ArtworkGrid has its own conception of infinite scroll\n    // which is enabled when `onLoadMore` is passed in. Since we're detecting\n    // scroll thresholds from backbone and thus externally, this callback can\n    // be used instead. See desktop/components/artwork_masonry/view.coffee for\n    // an example implementation\n    if (props.onAppendArtworks) {\n      props.onAppendArtworks(this.appendArtworks)\n    }\n  }\n\n  appendArtworks = artworks => {\n    this.setState({\n      artworks,\n    })\n  }\n\n  render() {\n    const artworks = mapToRelayConnection(this.state.artworks)\n\n    return (\n      <ContextProvider user={sd.CURRENT_USER}>\n        <ReactionArtworkGrid\n          {...this.props}\n          artworks={artworks}\n          useRelay={false}\n        />\n      </ContextProvider>\n    )\n  }\n}\n\nexport const Fillwidth = props => {\n  if (typeof window !== 'undefined') {\n    const {\n      Fillwidth: ReactionFillWidth,\n    } = require('reaction/Components/Artwork/Fillwidth')\n\n    const artworks = mapToRelayConnection(props.artworks) // eslint-disable-line\n\n    return (\n      <ContextProvider user={sd.CURRENT_USER}>\n        <ReactionFillWidth {...props} artworks={artworks} useRelay={false} />\n      </ContextProvider>\n    )\n  } else {\n    return ''\n  }\n}\n\nexport const Artwork = props => {\n  return (\n    <ContextProvider user={sd.CURRENT_USER}>\n      <ReactionArtwork {...props} useRelay={false} />\n    </ContextProvider>\n  )\n}\n\n// Helpers\n\n// Ensure that old artwork collections conform to new Relay connection api\nconst mapToRelayConnection = artworks => {\n  return {\n    edges: artworks.map(artwork => {\n      return {\n        node: artwork,\n      }\n    }),\n  }\n}\n"]}]}