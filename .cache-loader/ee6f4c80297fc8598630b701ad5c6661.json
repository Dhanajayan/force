{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport _AuctionInfoDesktop from \"./AuctionInfoDesktop\";\nimport _AuctionInfoMobile from \"./AuctionInfoMobile\";\nimport { connect } from 'react-redux'; // FIXME: Rewire\n\nvar AuctionInfoDesktop = _AuctionInfoDesktop;\nvar AuctionInfoMobile = _AuctionInfoMobile;\n\nfunction AuctionInfoContainer(_ref) {\n  var isMobile = _ref.isMobile;\n  return isMobile ? React.createElement(AuctionInfoMobile, null) : React.createElement(AuctionInfoDesktop, null);\n}\n\nAuctionInfoContainer.propTypes = {\n  isMobile: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isMobile: state.app.isMobile\n  };\n};\n\nvar _default = connect(mapStateToProps)(AuctionInfoContainer);\n\nexport default _default;\nexport var test = {\n  AuctionInfoContainer: AuctionInfoContainer\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AuctionInfoDesktop, \"AuctionInfoDesktop\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  reactHotLoader.register(AuctionInfoMobile, \"AuctionInfoMobile\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  reactHotLoader.register(AuctionInfoContainer, \"AuctionInfoContainer\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  reactHotLoader.register(test, \"test\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/layout/auction_info/index.js"],"names":["PropTypes","React","_AuctionInfoDesktop","_AuctionInfoMobile","connect","AuctionInfoDesktop","AuctionInfoMobile","AuctionInfoContainer","isMobile","propTypes","bool","isRequired","mapStateToProps","state","app","test"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP;AACA,OAAOC,kBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,IAAIC,kBAAkB,GAAGH,mBAAzB;AACA,IAAII,iBAAiB,GAAGH,kBAAxB;;AAEA,SAASI,oBAAT,OAA6C;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC3C,SAAOA,QAAQ,GACX,oBAAC,iBAAD,OADW,GAEX,oBAAC,kBAAD,OAFJ;AAGD;;AAEDD,oBAAoB,CAACE,SAArB,GAAiC;AAC/BD,EAAAA,QAAQ,EAAER,SAAS,CAACU,IAAV,CAAeC;AADM,CAAjC;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCL,IAAAA,QAAQ,EAAEK,KAAK,CAACC,GAAN,CAAUN;AADc,GAAZ;AAAA,CAAxB;;eAIeJ,OAAO,CACpBQ,eADoB,CAAP,CAEbL,oBAFa,C;;AAAf;AAIA,OAAO,IAAMQ,IAAI,GAAG;AAAER,EAAAA,oBAAoB,EAApBA;AAAF,CAAb;;;;;;;;;;;;0BArBHF,kB;0BACAC,iB;0BAEKC,oB;0BAUHK,e;0BAQOG,I","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport _AuctionInfoDesktop from './AuctionInfoDesktop'\nimport _AuctionInfoMobile from './AuctionInfoMobile'\nimport { connect } from 'react-redux'\n\n// FIXME: Rewire\nlet AuctionInfoDesktop = _AuctionInfoDesktop\nlet AuctionInfoMobile = _AuctionInfoMobile\n\nfunction AuctionInfoContainer ({ isMobile }) {\n  return isMobile\n    ? <AuctionInfoMobile />\n    : <AuctionInfoDesktop />\n}\n\nAuctionInfoContainer.propTypes = {\n  isMobile: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  isMobile: state.app.isMobile\n})\n\nexport default connect(\n  mapStateToProps\n)(AuctionInfoContainer)\n\nexport const test = { AuctionInfoContainer }\n"]}]}