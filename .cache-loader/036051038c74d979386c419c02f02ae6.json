{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = exports.default = void 0;\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _BidStatus2 = _interopRequireDefault(require(\"./BidStatus\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _titleAndYear = _interopRequireDefault(require(\"../../../../utils/titleAndYear\"));\n\nvar _reactRedux = require(\"react-redux\");\n\n// FIXME: Rewire\nvar BidStatus = _BidStatus2.default;\n\nfunction GridArtwork(props) {\n  var saleArtwork = props.saleArtwork,\n      artistDisplay = props.artistDisplay,\n      date = props.date,\n      image = props.image,\n      isAuction = props.isAuction,\n      isClosed = props.isClosed,\n      lotLabel = props.lotLabel,\n      sale_message = props.sale_message,\n      title = props.title;\n  var b = (0, _bemCnLite.default)('auction-page-GridArtwork');\n  return _react.default.createElement(\"a\", {\n    className: b(),\n    key: saleArtwork._id,\n    href: \"/artwork/\".concat(saleArtwork.id)\n  }, _react.default.createElement(\"div\", {\n    className: b('image-container')\n  }, _react.default.createElement(\"div\", {\n    className: \"vam-outer\"\n  }, _react.default.createElement(\"div\", {\n    className: \"vam-inner\"\n  }, _react.default.createElement(\"div\", {\n    className: b('image')\n  }, _react.default.createElement(\"img\", {\n    src: image,\n    alt: title\n  }))))), _react.default.createElement(\"div\", {\n    className: b('metadata')\n  }, isAuction ? _react.default.createElement(\"div\", {\n    className: b('lot-information')\n  }, _react.default.createElement(\"div\", {\n    className: b('lot-number')\n  }, \"Lot \", lotLabel), !isClosed && _react.default.createElement(BidStatus, {\n    artworkItem: saleArtwork\n  })) : _react.default.createElement(\"div\", null, sale_message), _react.default.createElement(\"div\", {\n    className: b('artists')\n  }, artistDisplay), _react.default.createElement(\"div\", {\n    className: b('title'),\n    dangerouslySetInnerHTML: {\n      __html: (0, _titleAndYear.default)(title, date)\n    }\n  })));\n}\n\nGridArtwork.propTypes = {\n  saleArtwork: _propTypes.default.object.isRequired,\n  date: _propTypes.default.string.isRequired,\n  image: _propTypes.default.string.isRequired,\n  isAuction: _propTypes.default.bool.isRequired,\n  isClosed: _propTypes.default.bool.isRequired,\n  lotLabel: _propTypes.default.string,\n  // Not needed for e-commerce sales\n  artistDisplay: _propTypes.default.string.isRequired,\n  sale_message: _propTypes.default.string,\n  // E-commerce sales only\n  title: _propTypes.default.string.isRequired // TODO: Unify this selector across artwork types\n\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var saleArtwork = props.saleArtwork;\n  var image = (0, _get2.default)(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png');\n  var artists = saleArtwork.artwork.artists;\n  var artistDisplay = artists && artists.length > 0 ? artists.map(function (aa) {\n    return aa.name;\n  }).join(', ') : '';\n  return {\n    artistDisplay: artistDisplay,\n    date: saleArtwork.artwork.date,\n    image: image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.artworkBrowser.isClosed || state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(GridArtwork);\n\nexports.default = _default;\nvar test = {\n  GridArtwork: GridArtwork\n};\nexports.test = test;",{"version":3,"sources":["src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js"],"names":["BidStatus","GridArtwork","props","saleArtwork","artistDisplay","date","image","isAuction","isClosed","lotLabel","sale_message","title","b","_id","id","__html","propTypes","object","isRequired","string","bool","mapStateToProps","state","artists","artwork","length","map","aa","name","join","app","auction","get","artworkBrowser","lot_label","test"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/GridArtwork.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import _BidStatus from './BidStatus'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport titleAndYear from 'desktop/apps/auction/utils/titleAndYear'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\n\n// FIXME: Rewire\nlet BidStatus = _BidStatus\n\nfunction GridArtwork (props) {\n  const {\n    saleArtwork,\n    artistDisplay,\n    date,\n    image,\n    isAuction,\n    isClosed,\n    lotLabel,\n    sale_message,\n    title\n  } = props\n\n  const b = block('auction-page-GridArtwork')\n\n  return (\n    <a className={b()} key={saleArtwork._id} href={`/artwork/${saleArtwork.id}`}>\n      <div className={b('image-container')}>\n        <div className='vam-outer'>\n          <div className='vam-inner'>\n            <div className={b('image')}>\n              <img src={image} alt={title} / >\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={b('metadata')}>\n        { isAuction\n          ? <div className={b('lot-information')}>\n            <div className={b('lot-number')}>\n              Lot {lotLabel}\n            </div>\n            { !isClosed &&\n              <BidStatus\n                artworkItem={saleArtwork}\n              /> }\n          </div>\n          : <div>\n            {sale_message}\n          </div>\n        }\n        <div className={b('artists')}>\n          {artistDisplay}\n        </div>\n        <div\n          className={b('title')}\n          dangerouslySetInnerHTML={{\n            __html: titleAndYear(title, date)\n          }}\n        />\n      </div>\n    </a>\n  )\n}\n\nGridArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string, // Not needed for e-commerce sales\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string, // E-commerce sales only\n  title: PropTypes.string.isRequired\n}\n\n// TODO: Unify this selector across artwork types\nconst mapStateToProps = (state, props) => {\n  const { saleArtwork } = props\n  const image = get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png')\n  const { artists } = saleArtwork.artwork\n  const artistDisplay = artists && artists.length > 0\n    ? artists.map((aa) => aa.name).join(', ')\n    : ''\n\n  return {\n    artistDisplay,\n    date: saleArtwork.artwork.date,\n    image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.artworkBrowser.isClosed || state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(GridArtwork)\n\nexport const test = { GridArtwork }\n"]}]}