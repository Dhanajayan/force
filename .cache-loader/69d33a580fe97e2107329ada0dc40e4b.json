{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = exports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _BidStatus2 = _interopRequireDefault(require(\"./BidStatus\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _titleAndYear = _interopRequireDefault(require(\"../../../../utils/titleAndYear\"));\n\nvar _reactRedux = require(\"react-redux\");\n\n// FIXME: Rewire\nvar BidStatus = _BidStatus2.default;\n\nfunction MasonryArtwork(props) {\n  var saleArtwork = props.saleArtwork,\n      artistDisplay = props.artistDisplay,\n      date = props.date,\n      image = props.image,\n      isAuction = props.isAuction,\n      isClosed = props.isClosed,\n      lotLabel = props.lotLabel,\n      sale_message = props.sale_message,\n      title = props.title;\n  var b = (0, _bemCnLite.default)('auction-page-MasonryArtwork');\n  return _react.default.createElement(\"a\", {\n    href: \"/artwork/\".concat(saleArtwork.id),\n    className: b()\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(\"img\", {\n    className: b('image'),\n    src: image,\n    alt: title\n  })), isAuction ? _react.default.createElement(\"div\", {\n    className: b('lot-number')\n  }, \"Lot \", lotLabel) : _react.default.createElement(\"div\", {\n    className: b('sale-message')\n  }, sale_message), _react.default.createElement(\"div\", {\n    className: b('artists')\n  }, artistDisplay), _react.default.createElement(\"div\", {\n    className: b('title'),\n    dangerouslySetInnerHTML: {\n      __html: (0, _titleAndYear.default)(title, date)\n    }\n  }), isAuction && !isClosed && _react.default.createElement(\"div\", {\n    className: b('bid-status')\n  }, _react.default.createElement(BidStatus, {\n    artworkItem: saleArtwork\n  })));\n}\n\nMasonryArtwork.propTypes = {\n  saleArtwork: _propTypes.default.object.isRequired,\n  date: _propTypes.default.string.isRequired,\n  image: _propTypes.default.string.isRequired,\n  isAuction: _propTypes.default.bool.isRequired,\n  isClosed: _propTypes.default.bool.isRequired,\n  lotLabel: _propTypes.default.string,\n  // Not needed for e-commerce works\n  artistDisplay: _propTypes.default.string.isRequired,\n  sale_message: _propTypes.default.string,\n  title: _propTypes.default.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var saleArtwork = props.saleArtwork;\n  var image = (0, _lodash.default)(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png');\n  var artists = saleArtwork.artwork.artists;\n  var artistDisplay = artists && artists.length > 0 ? artists.map(function (aa) {\n    return aa.name;\n  }).join(', ') : '';\n  return {\n    date: saleArtwork.artwork.date,\n    image: image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    artistDisplay: artistDisplay,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(MasonryArtwork);\n\nexports.default = _default;\nvar test = {\n  MasonryArtwork: MasonryArtwork\n};\nexports.test = test;",{"version":3,"sources":["src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js"],"names":["BidStatus","MasonryArtwork","props","saleArtwork","artistDisplay","date","image","isAuction","isClosed","lotLabel","sale_message","title","b","id","__html","propTypes","object","isRequired","string","bool","mapStateToProps","state","artists","artwork","length","map","aa","name","join","app","auction","get","lot_label","test"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport _BidStatus from './BidStatus'\nimport block from 'bem-cn-lite'\nimport get from 'lodash.get'\nimport titleAndYear from 'desktop/apps/auction/utils/titleAndYear'\nimport { connect } from 'react-redux'\n\n// FIXME: Rewire\nlet BidStatus = _BidStatus\n\nfunction MasonryArtwork (props) {\n  const {\n    saleArtwork,\n    artistDisplay,\n    date,\n    image,\n    isAuction,\n    isClosed,\n    lotLabel,\n    sale_message,\n    title\n  } = props\n\n  const b = block('auction-page-MasonryArtwork')\n\n  return (\n    <a href={`/artwork/${saleArtwork.id}`} className={b()}>\n      <div>\n        <img className={b('image')} src={image} alt={title} />\n      </div>\n\n      { isAuction\n        ? <div className={b('lot-number')}>\n          Lot {lotLabel}\n        </div>\n        : <div className={b('sale-message')}>\n          {sale_message}\n        </div>\n      }\n\n      <div className={b('artists')}>\n        {artistDisplay}\n      </div>\n\n      <div\n        className={b('title')}\n        dangerouslySetInnerHTML={{\n          __html: titleAndYear(title, date)\n        }}\n      />\n\n      { isAuction && !isClosed &&\n        <div className={b('bid-status')}>\n          <BidStatus\n            artworkItem={saleArtwork}\n          />\n        </div> }\n    </a>\n  )\n}\n\nMasonryArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string, // Not needed for e-commerce works\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, props) => {\n  const { saleArtwork } = props\n  const image = get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png')\n  const { artists } = saleArtwork.artwork\n  const artistDisplay = artists && artists.length > 0\n    ? artists.map((aa) => aa.name).join(', ')\n    : ''\n\n  return {\n    date: saleArtwork.artwork.date,\n    image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    artistDisplay,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(MasonryArtwork)\n\nexport const test = { MasonryArtwork }\n"]}]}