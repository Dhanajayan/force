{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport _BidStatus from \"./BidStatus\";\nimport block from 'bem-cn-lite';\nimport get from 'lodash.get';\nimport titleAndYear from \"../../../../utils/titleAndYear\";\nimport { connect } from 'react-redux'; // FIXME: Rewire\n\nvar BidStatus = _BidStatus;\n\nfunction MasonryArtwork(props) {\n  var saleArtwork = props.saleArtwork,\n      artistDisplay = props.artistDisplay,\n      date = props.date,\n      image = props.image,\n      isAuction = props.isAuction,\n      isClosed = props.isClosed,\n      lotLabel = props.lotLabel,\n      sale_message = props.sale_message,\n      title = props.title;\n  var b = block('auction-page-MasonryArtwork');\n  return React.createElement(\"a\", {\n    href: \"/artwork/\".concat(saleArtwork.id),\n    className: b()\n  }, React.createElement(\"div\", null, React.createElement(\"img\", {\n    className: b('image'),\n    src: image,\n    alt: title\n  })), isAuction ? React.createElement(\"div\", {\n    className: b('lot-number')\n  }, \"Lot \", lotLabel) : React.createElement(\"div\", {\n    className: b('sale-message')\n  }, sale_message), React.createElement(\"div\", {\n    className: b('artists')\n  }, artistDisplay), React.createElement(\"div\", {\n    className: b('title'),\n    dangerouslySetInnerHTML: {\n      __html: titleAndYear(title, date)\n    }\n  }), isAuction && !isClosed && React.createElement(\"div\", {\n    className: b('bid-status')\n  }, React.createElement(BidStatus, {\n    artworkItem: saleArtwork\n  })));\n}\n\nMasonryArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string,\n  // Not needed for e-commerce works\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var saleArtwork = props.saleArtwork;\n  var image = get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png');\n  var artists = saleArtwork.artwork.artists;\n  var artistDisplay = artists && artists.length > 0 ? artists.map(function (aa) {\n    return aa.name;\n  }).join(', ') : '';\n  return {\n    date: saleArtwork.artwork.date,\n    image: image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    artistDisplay: artistDisplay,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  };\n};\n\nvar _default = connect(mapStateToProps)(MasonryArtwork);\n\nexport default _default;\nexport var test = {\n  MasonryArtwork: MasonryArtwork\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(BidStatus, \"BidStatus\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js\");\n  reactHotLoader.register(MasonryArtwork, \"MasonryArtwork\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js\");\n  reactHotLoader.register(test, \"test\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/artwork/MasonryArtwork.js"],"names":["PropTypes","React","_BidStatus","block","get","titleAndYear","connect","BidStatus","MasonryArtwork","props","saleArtwork","artistDisplay","date","image","isAuction","isClosed","lotLabel","sale_message","title","b","id","__html","propTypes","object","isRequired","string","bool","mapStateToProps","state","artists","artwork","length","map","aa","name","join","app","auction","lot_label","test"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport _BidStatus from './BidStatus'\nimport block from 'bem-cn-lite'\nimport get from 'lodash.get'\nimport titleAndYear from 'desktop/apps/auction/utils/titleAndYear'\nimport { connect } from 'react-redux'\n\n// FIXME: Rewire\nlet BidStatus = _BidStatus\n\nfunction MasonryArtwork (props) {\n  const {\n    saleArtwork,\n    artistDisplay,\n    date,\n    image,\n    isAuction,\n    isClosed,\n    lotLabel,\n    sale_message,\n    title\n  } = props\n\n  const b = block('auction-page-MasonryArtwork')\n\n  return (\n    <a href={`/artwork/${saleArtwork.id}`} className={b()}>\n      <div>\n        <img className={b('image')} src={image} alt={title} />\n      </div>\n\n      { isAuction\n        ? <div className={b('lot-number')}>\n          Lot {lotLabel}\n        </div>\n        : <div className={b('sale-message')}>\n          {sale_message}\n        </div>\n      }\n\n      <div className={b('artists')}>\n        {artistDisplay}\n      </div>\n\n      <div\n        className={b('title')}\n        dangerouslySetInnerHTML={{\n          __html: titleAndYear(title, date)\n        }}\n      />\n\n      { isAuction && !isClosed &&\n        <div className={b('bid-status')}>\n          <BidStatus\n            artworkItem={saleArtwork}\n          />\n        </div> }\n    </a>\n  )\n}\n\nMasonryArtwork.propTypes = {\n  saleArtwork: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  lotLabel: PropTypes.string, // Not needed for e-commerce works\n  artistDisplay: PropTypes.string.isRequired,\n  sale_message: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, props) => {\n  const { saleArtwork } = props\n  const image = get(saleArtwork, 'artwork.images.0.image_medium', '/images/missing_image.png')\n  const { artists } = saleArtwork.artwork\n  const artistDisplay = artists && artists.length > 0\n    ? artists.map((aa) => aa.name).join(', ')\n    : ''\n\n  return {\n    date: saleArtwork.artwork.date,\n    image,\n    isAuction: state.app.auction.get('is_auction'),\n    isClosed: state.app.auction.isClosed(),\n    lotLabel: saleArtwork.lot_label,\n    artistDisplay,\n    sale_message: saleArtwork.artwork.sale_message,\n    title: saleArtwork.artwork.title\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(MasonryArtwork)\n\nexport const test = { MasonryArtwork }\n"]}]}