{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/analytics/account_login.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/analytics/account_login.js","mtime":1531409003000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n//\n// Generic events around attempting to log in\n//\n// Viewed login form\nvar trackViewLogin = function trackViewLogin() {\n  analytics.track('Viewed login form');\n};\n\nvar trackLogin = function trackLogin(options) {\n  analytics.track('Successfully logged in', options);\n  analytics.identify(options.user_id, _.pick(options, 'email'), {\n    integrations: {\n      All: false,\n      Marketo: true\n    }\n  });\n};\n\nanalyticsHooks.on('mediator:open:auth', function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.mode === 'login') trackViewLogin(options);\n});\n$('#auth-footer [href*=log_in]').click(trackViewLogin); // Clicked login via the header\n\n$('.mlh-login').click(function () {\n  analytics.track('Clicked login via the header');\n}); // Login: The password you entered is incorrect.\n\nanalyticsHooks.on('mediator:auth:error', function (message) {\n  if (message === 'invalid email or password') {\n    analytics.track('Login: The password you entered is incorrect.');\n  }\n}); // Track social auth login\n\nif (Cookies.get('analytics-login')) {\n  var data = JSON.parse(Cookies.get('analytics-login'));\n  Cookies.expire('analytics-login');\n\n  if (sd.CURRENT_USER) {\n    trackLogin(_objectSpread({}, data, {\n      user_id: sd.CURRENT_USER.id\n    }));\n  }\n}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(trackViewLogin, \"trackViewLogin\", \"/Users/eve/development/force/src/desktop/analytics/account_login.js\");\n  reactHotLoader.register(trackLogin, \"trackLogin\", \"/Users/eve/development/force/src/desktop/analytics/account_login.js\");\n  reactHotLoader.register(data, \"data\", \"/Users/eve/development/force/src/desktop/analytics/account_login.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/analytics/account_login.js"],"names":["trackViewLogin","analytics","track","trackLogin","options","identify","user_id","_","pick","integrations","All","Marketo","analyticsHooks","on","mode","$","click","message","Cookies","get","data","JSON","parse","expire","sd","CURRENT_USER","id"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAEA;AACA,IAAIA,cAAc,GAAG,SAAjBA,cAAiB,GAAW;AAC9BC,EAAAA,SAAS,CAACC,KAAV,CAAgB,mBAAhB;AACD,CAFD;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC5BH,EAAAA,SAAS,CAACC,KAAV,CAAgB,wBAAhB,EAA0CE,OAA1C;AAEAH,EAAAA,SAAS,CAACI,QAAV,CAAmBD,OAAO,CAACE,OAA3B,EAAoCC,CAAC,CAACC,IAAF,CAAOJ,OAAP,EAAgB,OAAhB,CAApC,EAA8D;AAC5DK,IAAAA,YAAY,EAAE;AACZC,MAAAA,GAAG,EAAE,KADO;AAEZC,MAAAA,OAAO,EAAE;AAFG;AAD8C,GAA9D;AAMD,CATD;;AAWAC,cAAc,CAACC,EAAf,CAAkB,oBAAlB,EAAwC,YAAkB;AAAA,MAAjBT,OAAiB,uEAAP,EAAO;AACxD,MAAIA,OAAO,CAACU,IAAR,KAAiB,OAArB,EAA8Bd,cAAc,CAACI,OAAD,CAAd;AAC/B,CAFD;AAIAW,CAAC,CAAC,6BAAD,CAAD,CAAiCC,KAAjC,CAAuChB,cAAvC,E,CAEA;;AACAe,CAAC,CAAC,YAAD,CAAD,CAAgBC,KAAhB,CAAsB,YAAW;AAC/Bf,EAAAA,SAAS,CAACC,KAAV,CAAgB,8BAAhB;AACD,CAFD,E,CAIA;;AACAU,cAAc,CAACC,EAAf,CAAkB,qBAAlB,EAAyC,UAASI,OAAT,EAAkB;AACzD,MAAIA,OAAO,KAAK,2BAAhB,EAA6C;AAC3ChB,IAAAA,SAAS,CAACC,KAAV,CAAgB,+CAAhB;AACD;AACF,CAJD,E,CAMA;;AACA,IAAIgB,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAJ,EAAoC;AAClC,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAX,CAAX;AACAD,EAAAA,OAAO,CAACK,MAAR,CAAe,iBAAf;;AAEA,MAAIC,EAAE,CAACC,YAAP,EAAqB;AACnBtB,IAAAA,UAAU,mBACLiB,IADK;AAERd,MAAAA,OAAO,EAAEkB,EAAE,CAACC,YAAH,CAAgBC;AAFjB,OAAV;AAID;AACF;;;;;;;;;;;;;0BA5CG1B,c;0BAIEG,U;0BA+BAiB,I","sourcesContent":["//\n// Generic events around attempting to log in\n//\n\n// Viewed login form\nvar trackViewLogin = function() {\n  analytics.track('Viewed login form')\n}\n\nconst trackLogin = options => {\n  analytics.track('Successfully logged in', options)\n\n  analytics.identify(options.user_id, _.pick(options, 'email'), {\n    integrations: {\n      All: false,\n      Marketo: true,\n    },\n  })\n}\n\nanalyticsHooks.on('mediator:open:auth', (options = {}) => {\n  if (options.mode === 'login') trackViewLogin(options)\n})\n\n$('#auth-footer [href*=log_in]').click(trackViewLogin)\n\n// Clicked login via the header\n$('.mlh-login').click(function() {\n  analytics.track('Clicked login via the header')\n})\n\n// Login: The password you entered is incorrect.\nanalyticsHooks.on('mediator:auth:error', function(message) {\n  if (message === 'invalid email or password') {\n    analytics.track('Login: The password you entered is incorrect.')\n  }\n})\n\n// Track social auth login\nif (Cookies.get('analytics-login')) {\n  var data = JSON.parse(Cookies.get('analytics-login'))\n  Cookies.expire('analytics-login')\n\n  if (sd.CURRENT_USER) {\n    trackLogin({\n      ...data,\n      user_id: sd.CURRENT_USER.id,\n    })\n  }\n}\n"]}]}