{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/helpers.ts","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/helpers.ts","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendAuthData = sendAuthData;\nexports.checkEmail = exports.handleSubmit = void 0;\n\nvar sharify = _interopRequireWildcard(require(\"sharify\"));\n\nvar _metaphysics = require(\"Utils/metaphysics\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nvar handleSubmit = function handleSubmit(url, csrf, redirectTo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(values, formikBag) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return sendAuthData(url, _extends({\n                  _csrf: csrf\n                }, values));\n\n              case 3:\n                data = _context.sent;\n\n                if (data.success) {\n                  if (redirectTo) {\n                    document.location.pathname = redirectTo;\n                  }\n                } else {\n                  formikBag.setStatus(data);\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                formikBag.setStatus(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexports.handleSubmit = handleSubmit;\n\nfunction sendAuthData(_x3, _x4) {\n  return _sendAuthData.apply(this, arguments);\n}\n\nfunction _sendAuthData() {\n  _sendAuthData = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(url, values) {\n    var res, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(url, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              },\n              method: \"POST\",\n              credentials: \"same-origin\",\n              body: JSON.stringify(values)\n            });\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _sendAuthData.apply(this, arguments);\n}\n\nvar checkEmail = function checkEmail(_ref2) {\n  var values = _ref2.values,\n      actions = _ref2.actions,\n      shouldExist = _ref2.shouldExist;\n\n  var query = function query(email) {\n    return \"\\n    query {\\n      user(email: \\\"\".concat(email, \"\\\") {\\n        userAlreadyExists\\n      }\\n    }\\n  \");\n  };\n\n  return (0, _metaphysics.metaphysics)({\n    query: query(values.email)\n  }, {\n    appToken: sharify.data.XAPP_TOKEN\n  }).then(function (_ref3) {\n    var data = _ref3.data;\n\n    if (data.user.userAlreadyExists) {\n      if (shouldExist) {\n        return true;\n      } else {\n        actions.setFieldError(\"email\", \"Email already exists.\");\n        actions.setSubmitting(false);\n        return false;\n      }\n    } else {\n      if (shouldExist) {\n        actions.setFieldError(\"email\", \"Email does not exist.\");\n        actions.setSubmitting(false);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  });\n};\n\nexports.checkEmail = checkEmail;",{"version":3,"sources":["node_modules/@artsy/reaction/src/Components/Authentication/helpers.ts"],"names":["handleSubmit","url","csrf","redirectTo","values","formikBag","sendAuthData","_csrf","data","success","document","location","pathname","setStatus","fetch","headers","Accept","method","credentials","body","JSON","stringify","res","json","checkEmail","actions","shouldExist","query","email","appToken","sharify","XAPP_TOKEN","then","user","userAlreadyExists","setFieldError","setSubmitting"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AAEO,IAAMA,eAAe,SAAfA,YAAe,CAC1BC,GAD0B,EAE1BC,IAF0B,EAG1BC,UAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAIvB,iBAAOC,MAAP,EAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEkBC,aAAaL,GAAb;AAAoBM,yBAAOL;AAA3B,mBAAoCE,MAApC,EAFlB;;AAAA;AAEKI,oBAFL;;AAGD,oBAAIA,KAAKC,OAAT,EAAkB;AAChB,sBAAIN,UAAJ,EAAgB;AACdO,6BAASC,QAAT,CAAkBC,QAAlB,GAA6BT,UAA7B;AACD;AACF,iBAJD,MAIO;AACLE,4BAAUQ,SAAV,CAAoBL,IAApB;AACD;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWDH,0BAAUQ,SAAV;;AAXC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;;;SAmBeP,Y;;;;;;;0BAAf,kBACLL,GADK,EAELG,MAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIaU,MAAMb,GAAN,EAAW;AAC3Bc,uBAAS;AACPC,wBAAQ,kBADD;AAEP,gCAAgB,kBAFT;AAGP,oCAAoB;AAHb,eADkB;AAM3BC,sBAAQ,MANmB;AAO3BC,2BAAa,aAPc;AAQ3BC,oBAAMC,KAAKC,SAAL,CAAejB,MAAf;AARqB,aAAX,CAJb;;AAAA;AAICkB,eAJD;AAAA;AAAA,mBAccA,IAAIC,IAAJ,EAdd;;AAAA;AAcCf,gBAdD;AAAA,8CAeEA,IAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,IAAMgB,aAAa,SAAbA,UAAa,QAAsC;AAAA,MAAnCpB,MAAmC,SAAnCA,MAAmC;AAAA,MAA3BqB,OAA2B,SAA3BA,OAA2B;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;;AAC9D,MAAMC,QAAQ,SAARA,KAAQ;AAAA,wDAEKC,KAFL;AAAA,GAAd;;AAOA,SAAO,8BACL;AAAED,WAAOA,MAAMvB,OAAOwB,KAAb;AAAT,GADK,EAEL;AACEC,cAAUC,QAAQtB,IAAR,CAAauB;AADzB,GAFK,EAKLC,IALK,CAKA,iBAAmB;AAAA,QAAhBxB,IAAgB,SAAhBA,IAAgB;;AACxB,QAAIA,KAAKyB,IAAL,CAAUC,iBAAd,EAAiC;AAC/B,UAAIR,WAAJ,EAAiB;AACf,eAAO,IAAP;AACD,OAFD,MAEO;AACLD,gBAAQU,aAAR,CAAsB,OAAtB,EAA+B,uBAA/B;AACAV,gBAAQW,aAAR,CAAsB,KAAtB;AACA,eAAO,KAAP;AACD;AACF,KARD,MAQO;AACL,UAAIV,WAAJ,EAAiB;AACfD,gBAAQU,aAAR,CAAsB,OAAtB,EAA+B,uBAA/B;AACAV,gBAAQW,aAAR,CAAsB,KAAtB;AACA,eAAO,KAAP;AACD,OAJD,MAIO;AACL,eAAO,IAAP;AACD;AACF;AACF,GAvBM,CAAP;AAwBD,CAhCM","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/helpers.ts","sourceRoot":"/Users/eve/development/force","sourcesContent":["import * as sharify from \"sharify\"\nimport { metaphysics } from \"Utils/metaphysics\"\n\nexport const handleSubmit = (\n  url: string,\n  csrf: string,\n  redirectTo?: string\n) => async (values, formikBag) => {\n  try {\n    const data = await sendAuthData(url, { _csrf: csrf, ...values })\n    if (data.success) {\n      if (redirectTo) {\n        document.location.pathname = redirectTo\n      }\n    } else {\n      formikBag.setStatus(data)\n    }\n  } catch (err) {\n    formikBag.setStatus(err)\n  }\n}\n\nexport async function sendAuthData(\n  url: string,\n  values: { [key: string]: any; _csrf: string }\n) {\n  const res = await fetch(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n    },\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(values),\n  })\n  const data = await res.json()\n  return data\n}\n\nexport const checkEmail = ({ values, actions, shouldExist }) => {\n  const query = email => `\n    query {\n      user(email: \"${email}\") {\n        userAlreadyExists\n      }\n    }\n  `\n  return metaphysics(\n    { query: query(values.email) },\n    {\n      appToken: sharify.data.XAPP_TOKEN,\n    }\n  ).then(({ data }: any) => {\n    if (data.user.userAlreadyExists) {\n      if (shouldExist) {\n        return true\n      } else {\n        actions.setFieldError(\"email\", \"Email already exists.\")\n        actions.setSubmitting(false)\n        return false\n      }\n    } else {\n      if (shouldExist) {\n        actions.setFieldError(\"email\", \"Email does not exist.\")\n        actions.setSubmitting(false)\n        return false\n      } else {\n        return true\n      }\n    }\n  })\n}\n"]}]}