{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/sign_up/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/sign_up/index.js","mtime":1527619810000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _reduxForm = require(\"redux-form\");\n\nvar _underscore = require(\"underscore\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _text_input = require(\"../text_input\");\n\nvar _checkbox_input = require(\"../checkbox_input\");\n\nvar _actions = require(\"../../client/actions\");\n\nvar _GDPRCheckbox = require(\"../../../../components/react/gdpr/GDPRCheckbox\");\n\nfunction validate(values) {\n  var accepted_terms_of_service = values.accepted_terms_of_service,\n      email = values.email,\n      name = values.name,\n      password = values.password;\n  var errors = {};\n  if (!name) errors.name = 'Required';\n  if (!email) errors.email = 'Required';\n  if (!password) errors.password = 'Required';\n  if (!accepted_terms_of_service) errors.accepted_terms_of_service = 'Please agree to our terms to continue';\n  return errors;\n}\n\nfunction SignUp(props) {\n  var error = props.error,\n      handleSubmit = props.handleSubmit,\n      isLoading = props.isLoading,\n      signUpAction = props.signUpAction,\n      updateAuthFormStateAndClearErrorAction = props.updateAuthFormStateAndClearErrorAction;\n  var b = (0, _bemCnLite.default)('consignments-submission-sign-up');\n  return _react.default.createElement(\"div\", {\n    className: b()\n  }, _react.default.createElement(\"div\", {\n    className: b('title')\n  }, \"Create an Account\"), _react.default.createElement(\"div\", {\n    className: b('subtitle')\n  }, \"Already have an account?\", ' ', _react.default.createElement(\"span\", {\n    className: b('clickable'),\n    onClick: function onClick() {\n      return updateAuthFormStateAndClearErrorAction('logIn');\n    }\n  }, \"Log in\"), \".\"), _react.default.createElement(\"form\", {\n    className: b('form'),\n    onSubmit: handleSubmit(signUpAction)\n  }, _react.default.createElement(\"div\", {\n    className: b('row')\n  }, _react.default.createElement(\"div\", {\n    className: b('row-item')\n  }, _react.default.createElement(_reduxForm.Field, {\n    name: \"name\",\n    component: _text_input.renderTextInput,\n    item: 'name',\n    label: 'Full Name',\n    autofocus: true\n  }))), _react.default.createElement(\"div\", {\n    className: b('row')\n  }, _react.default.createElement(\"div\", {\n    className: b('row-item')\n  }, _react.default.createElement(_reduxForm.Field, {\n    name: \"email\",\n    component: _text_input.renderTextInput,\n    item: 'email',\n    label: 'Email',\n    type: 'email'\n  }))), _react.default.createElement(\"div\", {\n    className: b('row')\n  }, _react.default.createElement(\"div\", {\n    className: b('row-item')\n  }, _react.default.createElement(_reduxForm.Field, {\n    name: \"password\",\n    component: _text_input.renderTextInput,\n    item: 'password',\n    label: 'Password',\n    type: 'password'\n  }))), _react.default.createElement(\"div\", {\n    className: b('row')\n  }, _react.default.createElement(\"div\", {\n    className: b('row-item')\n  }, _react.default.createElement(_reduxForm.Field, {\n    name: \"accepted_terms_of_service\",\n    component: _checkbox_input.renderCheckboxInput,\n    item: 'accepted_terms_of_service',\n    label: _react.default.createElement(_GDPRCheckbox.GDPRMessage, null),\n    value: false\n  }))), _react.default.createElement(\"button\", {\n    className: b.builder()('sign-up-button').mix('avant-garde-button-black')(),\n    type: \"submit\"\n  }, isLoading ? _react.default.createElement(\"div\", {\n    className: \"loading-spinner-white\"\n  }) : 'Submit'), error && _react.default.createElement(\"div\", {\n    className: b('error')\n  }, error)));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    error: state.submissionFlow.error,\n    isLoading: state.submissionFlow.isLoading\n  };\n};\n\nvar mapDispatchToProps = {\n  signUpAction: _actions.signUp,\n  updateAuthFormStateAndClearErrorAction: _actions.updateAuthFormStateAndClearError\n};\nSignUp.propTypes = {\n  error: _propTypes.default.string,\n  handleSubmit: _propTypes.default.func.isRequired,\n  isLoading: _propTypes.default.bool.isRequired,\n  signUpAction: _propTypes.default.func.isRequired,\n  updateAuthFormStateAndClearErrorAction: _propTypes.default.func.isRequired\n};\n\nvar _default = (0, _underscore.compose)((0, _reduxForm.reduxForm)({\n  form: 'signUp',\n  // a unique identifier for this form\n  validate: validate\n}), (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(SignUp);\n\nexports.default = _default;",{"version":3,"sources":["src/desktop/apps/consign/components/sign_up/index.js"],"names":["validate","values","accepted_terms_of_service","email","name","password","errors","SignUp","props","error","handleSubmit","isLoading","signUpAction","updateAuthFormStateAndClearErrorAction","b","builder","mix","mapStateToProps","state","submissionFlow","mapDispatchToProps","propTypes","string","func","isRequired","bool","form"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/consign/components/sign_up/index.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Field, reduxForm } from 'redux-form'\nimport { compose } from 'underscore'\nimport { connect } from 'react-redux'\nimport { renderTextInput } from '../text_input'\nimport { renderCheckboxInput } from '../checkbox_input'\nimport { signUp, updateAuthFormStateAndClearError } from '../../client/actions'\nimport { GDPRMessage } from 'desktop/components/react/gdpr/GDPRCheckbox'\n\nfunction validate(values) {\n  const { accepted_terms_of_service, email, name, password } = values\n  const errors = {}\n\n  if (!name) errors.name = 'Required'\n  if (!email) errors.email = 'Required'\n  if (!password) errors.password = 'Required'\n  if (!accepted_terms_of_service)\n    errors.accepted_terms_of_service = 'Please agree to our terms to continue'\n\n  return errors\n}\n\nfunction SignUp(props) {\n  const {\n    error,\n    handleSubmit,\n    isLoading,\n    signUpAction,\n    updateAuthFormStateAndClearErrorAction,\n  } = props\n\n  const b = block('consignments-submission-sign-up')\n\n  return (\n    <div className={b()}>\n      <div className={b('title')}>Create an Account</div>\n      <div className={b('subtitle')}>\n        Already have an account?{' '}\n        <span\n          className={b('clickable')}\n          onClick={() => updateAuthFormStateAndClearErrorAction('logIn')}\n        >\n          Log in\n        </span>.\n      </div>\n      <form className={b('form')} onSubmit={handleSubmit(signUpAction)}>\n        <div className={b('row')}>\n          <div className={b('row-item')}>\n            <Field\n              name=\"name\"\n              component={renderTextInput}\n              item={'name'}\n              label={'Full Name'}\n              autofocus\n            />\n          </div>\n        </div>\n        <div className={b('row')}>\n          <div className={b('row-item')}>\n            <Field\n              name=\"email\"\n              component={renderTextInput}\n              item={'email'}\n              label={'Email'}\n              type={'email'}\n            />\n          </div>\n        </div>\n        <div className={b('row')}>\n          <div className={b('row-item')}>\n            <Field\n              name=\"password\"\n              component={renderTextInput}\n              item={'password'}\n              label={'Password'}\n              type={'password'}\n            />\n          </div>\n        </div>\n        <div className={b('row')}>\n          <div className={b('row-item')}>\n            <Field\n              name=\"accepted_terms_of_service\"\n              component={renderCheckboxInput}\n              item={'accepted_terms_of_service'}\n              label={<GDPRMessage />}\n              value={false}\n            />\n          </div>\n        </div>\n        <button\n          className={b\n            .builder()('sign-up-button')\n            .mix('avant-garde-button-black')()}\n          type=\"submit\"\n        >\n          {isLoading ? <div className=\"loading-spinner-white\" /> : 'Submit'}\n        </button>\n        {error && <div className={b('error')}>{error}</div>}\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.submissionFlow.error,\n    isLoading: state.submissionFlow.isLoading,\n  }\n}\n\nconst mapDispatchToProps = {\n  signUpAction: signUp,\n  updateAuthFormStateAndClearErrorAction: updateAuthFormStateAndClearError,\n}\n\nSignUp.propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  signUpAction: PropTypes.func.isRequired,\n  updateAuthFormStateAndClearErrorAction: PropTypes.func.isRequired,\n}\n\nexport default compose(\n  reduxForm({\n    form: 'signUp', // a unique identifier for this form\n    validate,\n  }),\n  connect(mapStateToProps, mapDispatchToProps)\n)(SignUp)\n"]}]}