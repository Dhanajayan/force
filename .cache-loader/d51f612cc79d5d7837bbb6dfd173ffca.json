{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeDescribeWorkDesktop = makeDescribeWorkDesktop;\n\nvar _location_autocomplete = _interopRequireDefault(require(\"../location_autocomplete\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _reduxForm = require(\"redux-form\");\n\nvar _underscore = require(\"underscore\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _validate = require(\"../../client/validate\");\n\nvar _checkbox_input = require(\"../checkbox_input\");\n\nvar _radio_input = require(\"../radio_input\");\n\nvar _select_input = require(\"../select_input\");\n\nvar _text_input = require(\"../text_input\");\n\nvar _actions = require(\"../../client/actions\");\n\nfunction makeDescribeWorkDesktop() {\n  var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  function DescribeWorkDesktop(props) {\n    var artistName = props.artistName,\n        categoryOptions = props.categoryOptions,\n        error = props.error,\n        isLoading = props.isLoading,\n        handleSubmit = props.handleSubmit,\n        hasEditionValue = props.hasEditionValue,\n        submitDescribeWorkAction = props.submitDescribeWorkAction;\n    var b = (0, _bemCnLite.default)('consignments-submission-describe-work');\n    return _react.default.createElement(\"div\", {\n      className: b()\n    }, _react.default.createElement(\"div\", {\n      className: b('title')\n    }, \"Enter details about the work by \", artistName), _react.default.createElement(\"div\", {\n      className: b('subtitle')\n    }, \"To ensure a quick response please provide as much information as possible.\"), _react.default.createElement(\"form\", {\n      className: b('form'),\n      onSubmit: handleSubmit(submitDescribeWorkAction)\n    }, _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"title\",\n      component: _text_input.renderTextInput,\n      item: 'title',\n      instructions: 'If the title is unknown, please enter your best guess.',\n      label: 'Title*',\n      autofocus: true\n    }))), _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"category\",\n      component: _select_input.renderSelectInput,\n      item: 'category',\n      label: 'Category*',\n      options: categoryOptions\n    })), _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"year\",\n      component: _text_input.renderTextInput,\n      item: 'year',\n      label: 'Year*'\n    }))), _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"medium\",\n      component: _text_input.renderTextInput,\n      item: 'medium',\n      label: 'Medium*'\n    }))), _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"height\",\n      component: _text_input.renderTextInput,\n      item: 'height',\n      label: 'Height*',\n      warn: _validate.numberWarning\n    })), _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"width\",\n      component: _text_input.renderTextInput,\n      item: 'width',\n      label: 'Width*',\n      warn: _validate.numberWarning\n    })), _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"depth\",\n      component: _text_input.renderTextInput,\n      item: 'depth',\n      label: 'Depth',\n      warn: _validate.numberWarning\n    })), _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"dimensions_metric\",\n      component: _select_input.renderSelectInput,\n      item: 'dimensions_metric',\n      label: 'Units*',\n      options: ['in', 'cm']\n    }))), hasEditionValue && _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"edition_number\",\n      component: _text_input.renderTextInput,\n      item: 'edition_number',\n      label: 'Edition Number*'\n    })), _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"edition_size\",\n      component: _text_input.renderTextInput,\n      item: 'edition_size',\n      label: 'Size of Edition*',\n      warn: _validate.numberWarning\n    }))), _react.default.createElement(\"div\", {\n      className: b('row', {\n        'border-bottom': true\n      })\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"edition\",\n      component: _checkbox_input.renderCheckboxInput,\n      item: 'edition',\n      label: 'This is an edition',\n      value: false\n    }))), _react.default.createElement(\"div\", {\n      className: b('small-row', {\n        'border-bottom': true\n      })\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"signature\",\n      component: _radio_input.renderRadioInput,\n      item: 'signature',\n      label: 'Is this work signed?*',\n      options: [{\n        label: 'yes',\n        val: true\n      }, {\n        label: 'no',\n        val: false\n      }]\n    }))), _react.default.createElement(\"div\", {\n      className: b('small-row', {\n        'border-bottom': true\n      })\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"authenticity_certificate\",\n      component: _radio_input.renderRadioInput,\n      item: 'authenticity_certificate',\n      label: 'Does this work come with a certificate of authenticity?*',\n      options: [{\n        label: 'yes',\n        val: true\n      }, {\n        label: 'no',\n        val: false\n      }]\n    }))), _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"provenance\",\n      component: _text_input.renderTextInput,\n      item: 'provenance',\n      instructions: 'Where did you acquire this work?',\n      label: 'Provenance'\n    }))), _react.default.createElement(\"div\", {\n      className: b('row', {\n        'border-bottom': true\n      })\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(\"div\", {\n      className: b('instructions')\n    }, \"What city is the work located in?*\"), _react.default.createElement(_reduxForm.Field, {\n      name: \"location\",\n      component: _location_autocomplete.default\n    }))), _react.default.createElement(\"div\", {\n      className: b('row')\n    }, _react.default.createElement(\"div\", {\n      className: b('row-item')\n    }, _react.default.createElement(_reduxForm.Field, {\n      name: \"phone\",\n      component: _text_input.renderTextInput,\n      label: 'Mobile Number*',\n      item: 'phone'\n    }))), _react.default.createElement(\"button\", {\n      className: b.builder()('next-button').mix('avant-garde-button-black')(),\n      type: \"submit\"\n    }, isLoading ? _react.default.createElement(\"div\", {\n      className: \"loading-spinner-white\"\n    }) : 'Submit'), error && _react.default.createElement(\"div\", {\n      className: b('error')\n    }, error)));\n  }\n\n  var mapStateToProps = function mapStateToProps(state) {\n    var selector = (0, _reduxForm.formValueSelector)('describeWork');\n    var hasEditionValue = selector(state, 'edition');\n    return {\n      artistName: state.submissionFlow.artistName,\n      categoryOptions: state.submissionFlow.categoryOptions,\n      error: state.submissionFlow.error,\n      isLoading: state.submissionFlow.isLoading,\n      hasEditionValue: hasEditionValue,\n      locationAutocompleteFrozen: state.submissionFlow.locationAutocompleteFrozen,\n      locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue\n    };\n  };\n\n  var mapDispatchToProps = {\n    submitDescribeWorkAction: _actions.submitDescribeWork\n  };\n  DescribeWorkDesktop.propTypes = {\n    artistName: _propTypes.default.string.isRequired,\n    categoryOptions: _propTypes.default.array.isRequired,\n    error: _propTypes.default.string,\n    isLoading: _propTypes.default.bool.isRequired,\n    handleSubmit: _propTypes.default.func.isRequired,\n    hasEditionValue: _propTypes.default.bool,\n    submitDescribeWorkAction: _propTypes.default.func.isRequired\n  };\n  return (0, _underscore.compose)((0, _reduxForm.reduxForm)({\n    form: 'describeWork',\n    // a unique identifier for this form\n    validate: _validate.validate,\n    initialValues: initialValues,\n    onSubmitFail: _validate.dispatchAndScrollToError\n  }), (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(DescribeWorkDesktop);\n}",{"version":3,"sources":["src/desktop/apps/consign/components/describe_work_desktop/index.js"],"names":["makeDescribeWorkDesktop","initialValues","DescribeWorkDesktop","props","artistName","categoryOptions","error","isLoading","handleSubmit","hasEditionValue","submitDescribeWorkAction","b","label","val","builder","mix","mapStateToProps","state","selector","submissionFlow","locationAutocompleteFrozen","locationAutocompleteValue","mapDispatchToProps","propTypes","string","isRequired","array","bool","func","form","validate","onSubmitFail"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import LocationAutocomplete from '../location_autocomplete'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Field, formValueSelector, reduxForm } from 'redux-form'\nimport { compose } from 'underscore'\nimport { connect } from 'react-redux'\nimport { dispatchAndScrollToError, numberWarning, validate } from '../../client/validate'\nimport { renderCheckboxInput } from '../checkbox_input'\nimport { renderRadioInput } from '../radio_input'\nimport { renderSelectInput } from '../select_input'\nimport { renderTextInput } from '../text_input'\nimport { submitDescribeWork } from '../../client/actions'\n\nexport function makeDescribeWorkDesktop (initialValues = {}) {\n  function DescribeWorkDesktop (props) {\n    const {\n      artistName,\n      categoryOptions,\n      error,\n      isLoading,\n      handleSubmit,\n      hasEditionValue,\n      submitDescribeWorkAction\n    } = props\n\n    const b = block('consignments-submission-describe-work')\n\n    return (\n      <div className={b()}>\n        <div className={b('title')}>\n          Enter details about the work by {artistName}\n        </div>\n        <div className={b('subtitle')}>\n          To ensure a quick response please provide as much information as possible.\n        </div>\n        <form className={b('form')} onSubmit={handleSubmit(submitDescribeWorkAction)}>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='title' component={renderTextInput}\n                item={'title'}\n                instructions={'If the title is unknown, please enter your best guess.'}\n                label={'Title*'}\n                autofocus\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='category' component={renderSelectInput}\n                item={'category'}\n                label={'Category*'}\n                options={categoryOptions}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field name='year' component={renderTextInput}\n                item={'year'}\n                label={'Year*'}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='medium' component={renderTextInput}\n                item={'medium'}\n                label={'Medium*'}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='height' component={renderTextInput}\n                item={'height'}\n                label={'Height*'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field name='width' component={renderTextInput}\n                item={'width'}\n                label={'Width*'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field name='depth' component={renderTextInput}\n                item={'depth'}\n                label={'Depth'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field name='dimensions_metric' component={renderSelectInput}\n                item={'dimensions_metric'}\n                label={'Units*'}\n                options={['in', 'cm']}\n              />\n            </div>\n          </div>\n          {\n            hasEditionValue && (\n              <div className={b('row')}>\n                <div className={b('row-item')}>\n                  <Field name='edition_number' component={renderTextInput}\n                    item={'edition_number'}\n                    label={'Edition Number*'}\n                  />\n                </div>\n                <div className={b('row-item')}>\n                  <Field name='edition_size' component={renderTextInput}\n                    item={'edition_size'}\n                    label={'Size of Edition*'}\n                    warn={numberWarning}\n                  />\n                </div>\n              </div>\n            )\n          }\n          <div className={b('row', {'border-bottom': true})}>\n            <div className={b('row-item')}>\n              <Field name='edition' component={renderCheckboxInput}\n                item={'edition'}\n                label={'This is an edition'}\n                value={false}\n              />\n            </div>\n          </div>\n          <div className={b('small-row', {'border-bottom': true})}>\n            <div className={b('row-item')}>\n              <Field name='signature' component={renderRadioInput}\n                item={'signature'}\n                label={'Is this work signed?*'}\n                options={[{ label: 'yes', val: true }, { label: 'no', val: false }]}\n              />\n            </div>\n          </div>\n          <div className={b('small-row', {'border-bottom': true})}>\n            <div className={b('row-item')}>\n              <Field name='authenticity_certificate' component={renderRadioInput}\n                item={'authenticity_certificate'}\n                label={'Does this work come with a certificate of authenticity?*'}\n                options={[{ label: 'yes', val: true }, { label: 'no', val: false }]}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='provenance' component={renderTextInput}\n                item={'provenance'}\n                instructions={'Where did you acquire this work?'}\n                label={'Provenance'}\n              />\n            </div>\n          </div>\n          <div className={b('row', {'border-bottom': true})}>\n            <div className={b('row-item')}>\n              <div className={b('instructions')}>What city is the work located in?*</div>\n              <Field name='location' component={LocationAutocomplete} />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field name='phone' component={renderTextInput} label={'Mobile Number*'} item={'phone'} />\n            </div>\n          </div>\n          <button\n            className={b.builder()('next-button').mix('avant-garde-button-black')()}\n            type='submit'\n          >\n            {\n              isLoading ? <div className='loading-spinner-white' /> : 'Submit'\n            }\n          </button>\n          {\n            error && <div className={b('error')}>{error}</div>\n          }\n        </form>\n      </div>\n    )\n  }\n\n  const mapStateToProps = (state) => {\n    const selector = formValueSelector('describeWork')\n    const hasEditionValue = selector(state, 'edition')\n    return {\n      artistName: state.submissionFlow.artistName,\n      categoryOptions: state.submissionFlow.categoryOptions,\n      error: state.submissionFlow.error,\n      isLoading: state.submissionFlow.isLoading,\n      hasEditionValue,\n      locationAutocompleteFrozen: state.submissionFlow.locationAutocompleteFrozen,\n      locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue\n    }\n  }\n\n  const mapDispatchToProps = {\n    submitDescribeWorkAction: submitDescribeWork\n  }\n\n  DescribeWorkDesktop.propTypes = {\n    artistName: PropTypes.string.isRequired,\n    categoryOptions: PropTypes.array.isRequired,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    hasEditionValue: PropTypes.bool,\n    submitDescribeWorkAction: PropTypes.func.isRequired\n  }\n\n  return compose(\n    reduxForm({\n      form: 'describeWork', // a unique identifier for this form\n      validate,\n      initialValues,\n      onSubmitFail: dispatchAndScrollToError\n    }),\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(DescribeWorkDesktop)\n}\n"]}]}