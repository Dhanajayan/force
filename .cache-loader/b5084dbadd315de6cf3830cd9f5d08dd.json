{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport _ from 'underscore';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport { connect } from 'react-redux';\nimport { toggleListView, updateSort } from \"../../../actions/artworkBrowser\";\nvar propTypes = {\n  sortMap: PropTypes.object.isRequired,\n  totalLabel: PropTypes.string.isRequired,\n  updateSortAction: PropTypes.func.isRequired\n};\n\nfunction HeaderMobile(props) {\n  var sortMap = props.sortMap,\n      totalLabel = props.totalLabel,\n      updateSortAction = props.updateSortAction;\n  var b = block('auction-artworks-HeaderMobile');\n  return React.createElement(\"header\", {\n    className: b()\n  }, React.createElement(\"div\", {\n    className: b('total')\n  }, React.createElement(\"em\", null, totalLabel)), React.createElement(\"div\", {\n    className: b('sort')\n  }, React.createElement(\"select\", {\n    dir: \"rtl\",\n    onChange: function onChange(event) {\n      return updateSortAction(event.target.value);\n    }\n  }, _.map(sortMap, function (sortName, sort) {\n    return React.createElement(\"option\", {\n      value: sort,\n      key: sort\n    }, sortName);\n  }))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$artworkBrowser = state.artworkBrowser,\n      filterParams = _state$artworkBrowser.filterParams,\n      isFetchingArtworks = _state$artworkBrowser.isFetchingArtworks,\n      sortMap = _state$artworkBrowser.sortMap,\n      total = _state$artworkBrowser.total;\n  var selectedSort = filterParams.sort;\n  var totalLabel = isFetchingArtworks ? 'Loading...' : \"\".concat(total, \" Lots\");\n  return {\n    filterParams: filterParams,\n    selectedSort: selectedSort,\n    sortMap: _objectSpread({\n      default: 'Default'\n    }, sortMap),\n    totalLabel: totalLabel\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateSortAction: function updateSortAction(sortValue) {\n      if (sortValue === 'default') {\n        dispatch(toggleListView(false));\n        dispatch(updateSort('position')); // default\n      } else {\n        dispatch(toggleListView(true));\n        dispatch(updateSort(sortValue));\n      }\n    }\n  };\n};\n\nHeaderMobile.propTypes = propTypes;\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(HeaderMobile);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(propTypes, \"propTypes\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js\");\n  reactHotLoader.register(HeaderMobile, \"HeaderMobile\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/HeaderMobile.js"],"names":["_","PropTypes","React","block","connect","toggleListView","updateSort","propTypes","sortMap","object","isRequired","totalLabel","string","updateSortAction","func","HeaderMobile","props","b","event","target","value","map","sortName","sort","mapStateToProps","state","artworkBrowser","filterParams","isFetchingArtworks","total","selectedSort","default","mapDispatchToProps","dispatch","sortValue"],"mappings":";;;;;;;;AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,UAAzB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEP,SAAS,CAACQ,MAAV,CAAiBC,UADV;AAEhBC,EAAAA,UAAU,EAAEV,SAAS,CAACW,MAAV,CAAiBF,UAFb;AAGhBG,EAAAA,gBAAgB,EAAEZ,SAAS,CAACa,IAAV,CAAeJ;AAHjB,CAAlB;;AAMA,SAASK,YAAT,CAAuBC,KAAvB,EAA8B;AAAA,MAE1BR,OAF0B,GAKxBQ,KALwB,CAE1BR,OAF0B;AAAA,MAG1BG,UAH0B,GAKxBK,KALwB,CAG1BL,UAH0B;AAAA,MAI1BE,gBAJ0B,GAKxBG,KALwB,CAI1BH,gBAJ0B;AAO5B,MAAMI,CAAC,GAAGd,KAAK,CAAC,+BAAD,CAAf;AAEA,SACE;AAAQ,IAAA,SAAS,EAAEc,CAAC;AAApB,KACE;AAAK,IAAA,SAAS,EAAEA,CAAC,CAAC,OAAD;AAAjB,KACE,gCACGN,UADH,CADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAEM,CAAC,CAAC,MAAD;AAAjB,KACE;AACE,IAAA,GAAG,EAAC,KADN;AAEE,IAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,aAAWL,gBAAgB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3B;AAAA;AAFZ,KAKIpB,CAAC,CAACqB,GAAF,CAAMb,OAAN,EAAe,UAACc,QAAD,EAAWC,IAAX,EAAoB;AACjC,WACE;AAAQ,MAAA,KAAK,EAAEA,IAAf;AAAqB,MAAA,GAAG,EAAEA;AAA1B,OACGD,QADH,CADF;AAKD,GAND,CALJ,CADF,CAPF,CADF;AA0BD;;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,8BAM7BA,KAAK,CAACC,cANuB;AAAA,MAE/BC,YAF+B,yBAE/BA,YAF+B;AAAA,MAG/BC,kBAH+B,yBAG/BA,kBAH+B;AAAA,MAI/BpB,OAJ+B,yBAI/BA,OAJ+B;AAAA,MAK/BqB,KAL+B,yBAK/BA,KAL+B;AAQjC,MAAMC,YAAY,GAAGH,YAAY,CAACJ,IAAlC;AAEA,MAAMZ,UAAU,GAAGiB,kBAAkB,GACjC,YADiC,aAE9BC,KAF8B,UAArC;AAIA,SAAO;AACLF,IAAAA,YAAY,EAAZA,YADK;AAELG,IAAAA,YAAY,EAAZA,YAFK;AAGLtB,IAAAA,OAAO;AAAIuB,MAAAA,OAAO,EAAE;AAAb,OAA2BvB,OAA3B,CAHF;AAILG,IAAAA,UAAU,EAAVA;AAJK,GAAP;AAMD,CApBD;;AAsBA,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCpB,IAAAA,gBAAgB,EAAE,0BAACqB,SAAD,EAAe;AAC/B,UAAIA,SAAS,KAAK,SAAlB,EAA6B;AAC3BD,QAAAA,QAAQ,CAAC5B,cAAc,CAAC,KAAD,CAAf,CAAR;AACA4B,QAAAA,QAAQ,CAAC3B,UAAU,CAAC,UAAD,CAAX,CAAR,CAF2B,CAEM;AAClC,OAHD,MAGO;AACL2B,QAAAA,QAAQ,CAAC5B,cAAc,CAAC,IAAD,CAAf,CAAR;AACA4B,QAAAA,QAAQ,CAAC3B,UAAU,CAAC4B,SAAD,CAAX,CAAR;AACD;AACF;AATuC,GAAf;AAAA,CAA3B;;AAYAnB,YAAY,CAACR,SAAb,GAAyBA,SAAzB;;eAEeH,OAAO,CACpBoB,eADoB,EAEpBQ,kBAFoB,CAAP,CAGbjB,YAHa,C;;AAAf;;;;;;;;;;;;0BA/EMR,S;0BAMGQ,Y;0BAqCHS,e;0BAsBAQ,kB","sourcesContent":["import _ from 'underscore'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { connect } from 'react-redux'\nimport { toggleListView, updateSort } from 'desktop/apps/auction/actions/artworkBrowser'\n\nconst propTypes = {\n  sortMap: PropTypes.object.isRequired,\n  totalLabel: PropTypes.string.isRequired,\n  updateSortAction: PropTypes.func.isRequired\n}\n\nfunction HeaderMobile (props) {\n  const {\n    sortMap,\n    totalLabel,\n    updateSortAction\n  } = props\n\n  const b = block('auction-artworks-HeaderMobile')\n\n  return (\n    <header className={b()}>\n      <div className={b('total')}>\n        <em>\n          {totalLabel}\n        </em>\n      </div>\n\n      <div className={b('sort')}>\n        <select\n          dir='rtl'\n          onChange={(event) => updateSortAction(event.target.value)}\n        >\n          {\n            _.map(sortMap, (sortName, sort) => {\n              return (\n                <option value={sort} key={sort}>\n                  {sortName}\n                </option>\n              )\n            })\n          }\n        </select>\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    filterParams,\n    isFetchingArtworks,\n    sortMap,\n    total\n  } = state.artworkBrowser\n\n  const selectedSort = filterParams.sort\n\n  const totalLabel = isFetchingArtworks\n    ? 'Loading...'\n    : `${total} Lots`\n\n  return {\n    filterParams,\n    selectedSort,\n    sortMap: { default: 'Default', ...sortMap },\n    totalLabel\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSortAction: (sortValue) => {\n    if (sortValue === 'default') {\n      dispatch(toggleListView(false))\n      dispatch(updateSort('position')) // default\n    } else {\n      dispatch(toggleListView(true))\n      dispatch(updateSort(sortValue))\n    }\n  }\n})\n\nHeaderMobile.propTypes = propTypes\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderMobile)\n"]}]}