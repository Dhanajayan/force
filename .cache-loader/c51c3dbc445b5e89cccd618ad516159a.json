{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/location_autocomplete/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/location_autocomplete/index.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactAutosuggest = _interopRequireDefault(require(\"react-autosuggest\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _actions = require(\"../../client/actions\");\n\nvar Close = function Close(props) {\n  return _react.default.createElement(\"svg\", (0, _extends2.default)({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"32\",\n    height: \"32\",\n    viewBox: \"0 0 32 32\"\n  }, props), _react.default.createElement(\"path\", {\n    d: \"M28.042 6.064l-1.954-1.979-10.076 9.949L6.064 3.958 4.085 5.913l9.948 10.075-10.075 9.948 1.955 1.979 10.075-9.948 9.948 10.075 1.978-1.954-9.947-10.076z\"\n  }));\n};\n\nfunction LocationAutocomplete(props) {\n  var chooseLocationAction = props.chooseLocationAction,\n      clearLocationSuggestionsAction = props.clearLocationSuggestionsAction,\n      fetchLocationSuggestionsAction = props.fetchLocationSuggestionsAction,\n      input = props.input,\n      locationAutocompleteFrozen = props.locationAutocompleteFrozen,\n      locationAutocompleteSuggestions = props.locationAutocompleteSuggestions,\n      locationAutocompleteValue = props.locationAutocompleteValue,\n      _props$meta = props.meta,\n      error = _props$meta.error,\n      touched = _props$meta.touched,\n      unfreezeLocationInputAction = props.unfreezeLocationInputAction,\n      updateLocationAutocompleteAction = props.updateLocationAutocompleteAction;\n  var b = (0, _bemCnLite.default)('consignments-location-input');\n  var locationAutosuggestInputProps = {\n    disabled: locationAutocompleteFrozen,\n    onChange: updateLocationAutocompleteAction,\n    value: locationAutocompleteValue\n  };\n\n  var renderInputComponent = function renderInputComponent(inputProps) {\n    return _react.default.createElement(\"div\", null, _react.default.createElement(\"input\", (0, _extends2.default)({}, inputProps, {\n      className: b.builder()('input').mix('bordered-input')()\n    })), touched && error && _react.default.createElement(\"div\", {\n      className: b('error')\n    }, error));\n  };\n\n  var getSuggestionValue = function getSuggestionValue(suggestion) {\n    return suggestion.description;\n  };\n\n  var renderSuggestion = function renderSuggestion(suggestion) {\n    return _react.default.createElement(\"div\", {\n      className: \"autosuggest-suggestion\"\n    }, _react.default.createElement(\"div\", null, suggestion.description));\n  };\n\n  var chooseLocationOption = function chooseLocationOption(event, _ref) {\n    var suggestion = _ref.suggestion,\n        suggestionValue = _ref.suggestionValue,\n        suggestionIndex = _ref.suggestionIndex,\n        sectionIndex = _ref.sectionIndex,\n        method = _ref.method;\n    chooseLocationAction(suggestion);\n    input.onChange(suggestionValue);\n  };\n\n  var unfreeze = function unfreeze() {\n    unfreezeLocationInputAction();\n    input.onChange('');\n  };\n\n  return _react.default.createElement(\"div\", {\n    className: b.builder()({\n      disabled: locationAutocompleteFrozen,\n      error: Boolean(touched && error)\n    })(),\n    name: 'location'\n  }, _react.default.createElement(_reactAutosuggest.default, {\n    suggestions: locationAutocompleteSuggestions,\n    onSuggestionsFetchRequested: fetchLocationSuggestionsAction,\n    onSuggestionsClearRequested: clearLocationSuggestionsAction,\n    onSuggestionSelected: chooseLocationOption,\n    getSuggestionValue: getSuggestionValue,\n    renderInputComponent: renderInputComponent,\n    renderSuggestion: renderSuggestion,\n    inputProps: locationAutosuggestInputProps\n  }), locationAutocompleteFrozen && _react.default.createElement(\"div\", {\n    className: b('unfreeze'),\n    onClick: unfreeze\n  }, _react.default.createElement(Close, null)));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    locationAutocompleteFrozen: state.submissionFlow.locationAutocompleteFrozen,\n    locationAutocompleteSuggestions: state.submissionFlow.locationAutocompleteSuggestions,\n    locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    chooseLocationAction: function chooseLocationAction(suggestion) {\n      dispatch((0, _actions.chooseLocation)(suggestion));\n    },\n    clearLocationSuggestionsAction: function clearLocationSuggestionsAction() {\n      dispatch((0, _actions.clearLocationSuggestions)());\n    },\n    fetchLocationSuggestionsAction: function fetchLocationSuggestionsAction(_ref2) {\n      var value = _ref2.value;\n      dispatch((0, _actions.fetchLocationSuggestions)(value));\n    },\n    unfreezeLocationInputAction: function unfreezeLocationInputAction() {\n      dispatch((0, _actions.unfreezeLocationInput)());\n    },\n    updateLocationAutocompleteAction: function updateLocationAutocompleteAction(event, _ref3) {\n      var newValue = _ref3.newValue;\n      dispatch((0, _actions.updateLocationAutocomplete)(newValue));\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LocationAutocomplete);\n\nexports.default = _default;\nLocationAutocomplete.propTypes = {\n  chooseLocationAction: _propTypes.default.func.isRequired,\n  clearLocationSuggestionsAction: _propTypes.default.func.isRequired,\n  fetchLocationSuggestionsAction: _propTypes.default.func.isRequired,\n  input: _propTypes.default.object.isRequired,\n  locationAutocompleteFrozen: _propTypes.default.bool.isRequired,\n  locationAutocompleteSuggestions: _propTypes.default.array,\n  locationAutocompleteValue: _propTypes.default.string,\n  meta: _propTypes.default.object.isRequired,\n  unfreezeLocationInputAction: _propTypes.default.func.isRequired,\n  updateLocationAutocompleteAction: _propTypes.default.func.isRequired\n};",{"version":3,"sources":["src/desktop/apps/consign/components/location_autocomplete/index.js"],"names":["Close","LocationAutocomplete","props","chooseLocationAction","clearLocationSuggestionsAction","fetchLocationSuggestionsAction","input","locationAutocompleteFrozen","locationAutocompleteSuggestions","locationAutocompleteValue","meta","error","touched","unfreezeLocationInputAction","updateLocationAutocompleteAction","b","locationAutosuggestInputProps","disabled","onChange","value","renderInputComponent","inputProps","builder","mix","getSuggestionValue","suggestion","description","renderSuggestion","chooseLocationOption","event","suggestionValue","suggestionIndex","sectionIndex","method","unfreeze","Boolean","mapStateToProps","state","submissionFlow","mapDispatchToProps","dispatch","newValue","propTypes","func","isRequired","object","bool","array","string"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/consign/components/location_autocomplete/index.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import Autosuggest from 'react-autosuggest'\nimport Close from '../../../../components/main_layout/public/icons/close.svg'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { connect } from 'react-redux'\nimport {\n  chooseLocation,\n  clearLocationSuggestions,\n  fetchLocationSuggestions,\n  unfreezeLocationInput,\n  updateLocationAutocomplete\n} from '../../client/actions'\n\nfunction LocationAutocomplete (props) {\n  const {\n    chooseLocationAction,\n    clearLocationSuggestionsAction,\n    fetchLocationSuggestionsAction,\n    input,\n    locationAutocompleteFrozen,\n    locationAutocompleteSuggestions,\n    locationAutocompleteValue,\n    meta: {\n      error,\n      touched\n    },\n    unfreezeLocationInputAction,\n    updateLocationAutocompleteAction\n  } = props\n\n  const b = block('consignments-location-input')\n\n  const locationAutosuggestInputProps = {\n    disabled: locationAutocompleteFrozen,\n    onChange: updateLocationAutocompleteAction,\n    value: locationAutocompleteValue\n  }\n\n  const renderInputComponent = inputProps => (\n    <div>\n      <input {...inputProps} className={b.builder()('input').mix('bordered-input')()} />\n      {\n        touched && (\n          (error && <div className={b('error')}>{error}</div>)\n        )\n      }\n    </div>\n  )\n\n  const getSuggestionValue = suggestion => (\n    suggestion.description\n  )\n\n  const renderSuggestion = suggestion => (\n    <div className='autosuggest-suggestion'>\n      <div>{suggestion.description}</div>\n    </div>\n  )\n\n  const chooseLocationOption = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n    chooseLocationAction(suggestion)\n    input.onChange(suggestionValue)\n  }\n\n  const unfreeze = () => {\n    unfreezeLocationInputAction()\n    input.onChange('')\n  }\n\n  return (\n    <div className={b.builder()({ disabled: locationAutocompleteFrozen, error: Boolean(touched && error) })()} name={'location'}>\n      <Autosuggest\n        suggestions={locationAutocompleteSuggestions}\n        onSuggestionsFetchRequested={fetchLocationSuggestionsAction}\n        onSuggestionsClearRequested={clearLocationSuggestionsAction}\n        onSuggestionSelected={chooseLocationOption}\n        getSuggestionValue={getSuggestionValue}\n        renderInputComponent={renderInputComponent}\n        renderSuggestion={renderSuggestion}\n        inputProps={locationAutosuggestInputProps}\n      />\n      { locationAutocompleteFrozen && <div className={b('unfreeze')} onClick={unfreeze}><Close /></div> }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  locationAutocompleteFrozen: state.submissionFlow.locationAutocompleteFrozen,\n  locationAutocompleteSuggestions: state.submissionFlow.locationAutocompleteSuggestions,\n  locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    chooseLocationAction (suggestion) {\n      dispatch(chooseLocation(suggestion))\n    },\n    clearLocationSuggestionsAction () {\n      dispatch(clearLocationSuggestions())\n    },\n    fetchLocationSuggestionsAction ({ value }) {\n      dispatch(fetchLocationSuggestions(value))\n    },\n    unfreezeLocationInputAction () {\n      dispatch(unfreezeLocationInput())\n    },\n    updateLocationAutocompleteAction (event, { newValue }) {\n      dispatch(updateLocationAutocomplete(newValue))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LocationAutocomplete)\n\nLocationAutocomplete.propTypes = {\n  chooseLocationAction: PropTypes.func.isRequired,\n  clearLocationSuggestionsAction: PropTypes.func.isRequired,\n  fetchLocationSuggestionsAction: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n  locationAutocompleteFrozen: PropTypes.bool.isRequired,\n  locationAutocompleteSuggestions: PropTypes.array,\n  locationAutocompleteValue: PropTypes.string,\n  meta: PropTypes.object.isRequired,\n  unfreezeLocationInputAction: PropTypes.func.isRequired,\n  updateLocationAutocompleteAction: PropTypes.func.isRequired\n}\n"]}]}