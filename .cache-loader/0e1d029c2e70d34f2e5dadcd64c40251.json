{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/checkbox_input/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/checkbox_input/index.js","mtime":1527619810000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nexport var renderCheckboxInput = function renderCheckboxInput(_ref) {\n  var _ref$input = _ref.input,\n      onChange = _ref$input.onChange,\n      value = _ref$input.value,\n      _ref$meta = _ref.meta,\n      error = _ref$meta.error,\n      touched = _ref$meta.touched,\n      custom = _objectWithoutProperties(_ref, [\"input\", \"meta\"]);\n\n  return React.createElement(CheckboxInput, _extends({}, custom, {\n    value: value,\n    onChange: onChange,\n    error: error,\n    touched: touched\n  }));\n};\nexport default function CheckboxInput(props) {\n  var error = props.error,\n      item = props.item,\n      label = props.label,\n      onChange = props.onChange,\n      touched = props.touched,\n      value = props.value;\n  var b = block('consignments-submission-checkbox-input');\n  return React.createElement(\"div\", {\n    className: b.builder()('wrapper', {\n      error: Boolean(touched && error)\n    }).mix('artsy-checkbox')(),\n    onClick: function onClick() {\n      return onChange(!value);\n    }\n  }, React.createElement(\"div\", {\n    className: b.builder()('input').mix('artsy-checkbox--checkbox')()\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: item,\n    value: item,\n    checked: value || false,\n    onChange: function onChange() {}\n  }), React.createElement(\"label\", {\n    htmlFor: item\n  })), React.createElement(\"label\", {\n    className: b('label'),\n    htmlFor: item\n  }, label), touched && error && React.createElement(\"div\", {\n    className: b('error')\n  }, error));\n}\nCheckboxInput.propTypes = {\n  item: PropTypes.string.isRequired,\n  label: PropTypes.any,\n  onChange: PropTypes.func.isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(renderCheckboxInput, \"renderCheckboxInput\", \"/Users/eve/development/force/src/desktop/apps/consign/components/checkbox_input/index.js\");\n  reactHotLoader.register(CheckboxInput, \"CheckboxInput\", \"/Users/eve/development/force/src/desktop/apps/consign/components/checkbox_input/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/consign/components/checkbox_input/index.js"],"names":["PropTypes","React","block","renderCheckboxInput","input","onChange","value","meta","error","touched","custom","CheckboxInput","props","item","label","b","builder","Boolean","mix","propTypes","string","isRequired","any","func"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,wBACjCC,KADiC;AAAA,MACxBC,QADwB,cACxBA,QADwB;AAAA,MACdC,KADc,cACdA,KADc;AAAA,uBAEjCC,IAFiC;AAAA,MAEzBC,KAFyB,aAEzBA,KAFyB;AAAA,MAElBC,OAFkB,aAElBA,OAFkB;AAAA,MAG9BC,MAH8B;;AAAA,SAKjC,oBAAC,aAAD,eACMA,MADN;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,OAAO,EAAEC;AALX,KALiC;AAAA,CAA5B;AAcP,eAAe,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MACnCJ,KADmC,GACcI,KADd,CACnCJ,KADmC;AAAA,MAC5BK,IAD4B,GACcD,KADd,CAC5BC,IAD4B;AAAA,MACtBC,KADsB,GACcF,KADd,CACtBE,KADsB;AAAA,MACfT,QADe,GACcO,KADd,CACfP,QADe;AAAA,MACLI,OADK,GACcG,KADd,CACLH,OADK;AAAA,MACIH,KADJ,GACcM,KADd,CACIN,KADJ;AAE3C,MAAMS,CAAC,GAAGb,KAAK,CAAC,wCAAD,CAAf;AAEA,SACE;AACE,IAAA,SAAS,EAAEa,CAAC,CACTC,OADQ,GACE,SADF,EACa;AAAER,MAAAA,KAAK,EAAES,OAAO,CAACR,OAAO,IAAID,KAAZ;AAAhB,KADb,EAERU,GAFQ,CAEJ,gBAFI,GADb;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMb,QAAQ,CAAC,CAACC,KAAF,CAAd;AAAA;AAJX,KAME;AACE,IAAA,SAAS,EAAES,CAAC,CACTC,OADQ,GACE,OADF,EAERE,GAFQ,CAEJ,0BAFI;AADb,KAKE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAEL,IAFR;AAGE,IAAA,KAAK,EAAEA,IAHT;AAIE,IAAA,OAAO,EAAEP,KAAK,IAAI,KAJpB;AAKE,IAAA,QAAQ,EAAE,oBAAM,CAAE;AALpB,IALF,EAYE;AAAO,IAAA,OAAO,EAAEO;AAAhB,IAZF,CANF,EAoBE;AAAO,IAAA,SAAS,EAAEE,CAAC,CAAC,OAAD,CAAnB;AAA8B,IAAA,OAAO,EAAEF;AAAvC,KACGC,KADH,CApBF,EAuBGL,OAAO,IAAID,KAAX,IAAoB;AAAK,IAAA,SAAS,EAAEO,CAAC,CAAC,OAAD;AAAjB,KAA6BP,KAA7B,CAvBvB,CADF;AA2BD;AAEDG,aAAa,CAACQ,SAAd,GAA0B;AACxBN,EAAAA,IAAI,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADC;AAExBP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,GAFO;AAGxBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IAAV,CAAeF;AAHD,CAA1B;;;;;;;;;;;;0BA/CalB,mB;0BAcWQ,a","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\n\nexport const renderCheckboxInput = ({\n  input: { onChange, value },\n  meta: { error, touched },\n  ...custom\n}) => (\n  <CheckboxInput\n    {...custom}\n    value={value}\n    onChange={onChange}\n    error={error}\n    touched={touched}\n  />\n)\n\nexport default function CheckboxInput(props) {\n  const { error, item, label, onChange, touched, value } = props\n  const b = block('consignments-submission-checkbox-input')\n\n  return (\n    <div\n      className={b\n        .builder()('wrapper', { error: Boolean(touched && error) })\n        .mix('artsy-checkbox')()}\n      onClick={() => onChange(!value)}\n    >\n      <div\n        className={b\n          .builder()('input')\n          .mix('artsy-checkbox--checkbox')()}\n      >\n        <input\n          type=\"checkbox\"\n          name={item}\n          value={item}\n          checked={value || false}\n          onChange={() => {}}\n        />\n        <label htmlFor={item} />\n      </div>\n      <label className={b('label')} htmlFor={item}>\n        {label}\n      </label>\n      {touched && error && <div className={b('error')}>{error}</div>}\n    </div>\n  )\n}\n\nCheckboxInput.propTypes = {\n  item: PropTypes.string.isRequired,\n  label: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n}\n"]}]}