{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/raven-js/src/raven.js","dependencies":[{"path":"/Users/eve/development/force/node_modules/raven-js/src/raven.js","mtime":1494015784000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["/*global XDomainRequest:false, __DEV__:false*/\n'use strict';\n\nvar _JSON$stringify = require(\"@babel/runtime/core-js/json/stringify\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar TraceKit = require(\"../vendor/TraceKit/tracekit\");\n\nvar stringify = require(\"../vendor/json-stringify-safe/stringify\");\n\nvar RavenConfigError = require(\"./configError\");\n\nvar utils = require(\"./utils\");\n\nvar isError = utils.isError,\n    isObject = utils.isObject;\n\nvar wrapConsoleMethod = require(\"./console\").wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n} // This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\n\n\nvar _window = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar _document = _window.document;\nvar _navigator = _window.navigator; // First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\n\nfunction Raven() {\n  this._hasJSON = !!(_typeof(JSON) === 'object' && _JSON$stringify); // Raven can run in contexts where there's no document (react-native)\n\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    crossOrigin: 'anonymous',\n    collectWindowErrors: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit; // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n\n  this._resetBackoff();\n\n  for (var method in this._originalConsole) {\n    // eslint-disable-line guard-for-in\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.15.0',\n  debug: false,\n  TraceKit: TraceKit,\n  // alias to TraceKit\n\n  /*\n   * Configure Raven with a DSN and extra options\n   *\n   * @param {string} dsn The public Sentry DSN\n   * @param {object} options Optional set of of global options [optional]\n   * @return {Raven}\n   */\n  config: function config(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n\n      return self;\n    }\n\n    if (!dsn) return self;\n    var globalOptions = self._globalOptions; // merge in options\n\n    if (options) {\n      each(options, function (key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn); // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/); // join regexp rules into one big rule\n\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length ? joinRegExp(globalOptions.ignoreUrls) : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length ? joinRegExp(globalOptions.whitelistUrls) : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(0, Math.min(globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true\n    };\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n    var instrument = globalOptions.instrument;\n\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n\n    globalOptions.instrument = instrument;\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors; // return for chaining\n\n    return self;\n  },\n\n  /*\n   * Installs a global window.onerror error handler\n   * to capture and report uncaught exceptions.\n   * At this point, install() is required to be called due\n   * to the way TraceKit is set up.\n   *\n   * @return {Raven}\n   */\n  install: function install() {\n    var self = this;\n\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function () {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs(); // Install all of the plugins\n\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n   * Set the DSN (can be called multiple time unlike config)\n   *\n   * @param {string} dsn The public Sentry DSN\n   */\n  setDSN: function setDSN(dsn) {\n    var self = this,\n        uri = self._parseDSN(dsn),\n        lastSlash = uri.path.lastIndexOf('/'),\n        path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n    self._globalServer = self._getGlobalServer(uri);\n    self._globalEndpoint = self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/'; // Reset backoff state since we may be pointing at a\n    // new project/server\n\n    this._resetBackoff();\n  },\n\n  /*\n   * Wrap code within a context so Raven can capture errors\n   * reliably across domains that is executed immediately.\n   *\n   * @param {object} options A specific set of options for this context [optional]\n   * @param {function} func The callback to be immediately executed within the context\n   * @param {array} args An array of arguments to be called with the callback [optional]\n   */\n  context: function context(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = undefined;\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n   * Wrap code within a context and returns back a new function to be executed\n   *\n   * @param {object} options A specific set of options for this context [optional]\n   * @param {function} func The function to be wrapped in a new context\n   * @param {function} func A function to call before the try/catch wrapper [optional, private]\n   * @return {function} The newly wrapped functions with a context\n   */\n  wrap: function wrap(options, func, _before) {\n    var self = this; // 1 argument has been passed, and it's not a function\n    // so just return it\n\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    } // options is optional\n\n\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    } // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n\n\n    if (!isFunction(func)) {\n      return func;\n    } // We don't wanna wrap it twice!\n\n\n    try {\n      if (func.__raven__) {\n        return func;\n      } // If this has already been wrapped in the past, return that\n\n\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n          i = arguments.length,\n          deep = !options || options && options.deep !== false;\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      } // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n\n\n      while (i--) {\n        args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n      }\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n\n        self.captureException(e, options);\n        throw e;\n      }\n    } // copy over properties of the old function\n\n\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n\n    wrapped.prototype = func.prototype;\n    func.__raven_wrapper__ = wrapped; // Signal that this function has been wrapped already\n    // for both debugging and to prevent it to being wrapped twice\n\n    wrapped.__raven__ = true;\n    wrapped.__inner__ = func;\n    return wrapped;\n  },\n\n  /*\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function uninstall() {\n    TraceKit.report.uninstall();\n\n    this._restoreBuiltIns();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n    return this;\n  },\n\n  /*\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function captureException(ex, options) {\n    // If not an Error is passed through, recall as a message instead\n    if (!isError(ex)) {\n      return this.captureMessage(ex, objectMerge({\n        trimHeadFrames: 1,\n        stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n\n      }, options));\n    } // Store the raw exception object for potential debugging and introspection\n\n\n    this._lastCapturedException = ex; // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  /*\n   * Manually send a message to Sentry\n   *\n   * @param {string} msg A plain message to be captured in Sentry\n   * @param {object} options A specific set of options for this message [optional]\n   * @return {Raven}\n   */\n  captureMessage: function captureMessage(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n      return;\n    }\n\n    options = options || {};\n    var data = objectMerge({\n      message: msg + '' // Make sure it's actually a string\n\n    }, options);\n\n    if (this._globalOptions.stacktrace || options && options.stacktrace) {\n      var ex; // Generate a \"synthetic\" stack trace from this point.\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n      //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n      //       or if it catches a thrown object without a \"stack\" property.\n\n      try {\n        throw new Error(msg);\n      } catch (ex1) {\n        ex = ex1;\n      } // null exception name so `Error` isn't prefixed to msg\n\n\n      ex.name = null;\n      options = objectMerge({\n        // fingerprint on msg, not stack trace (legacy behavior, could be\n        // revisited)\n        fingerprint: msg,\n        // since we know this is a synthetic trace, the top N-most frames\n        // MUST be from Raven.js, so mark them as in_app later by setting\n        // trimHeadFrames\n        trimHeadFrames: (options.trimHeadFrames || 0) + 1\n      }, options);\n      var stack = TraceKit.computeStackTrace(ex);\n\n      var frames = this._prepareFrames(stack, options);\n\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    } // Fire away!\n\n\n    this._send(data);\n\n    return this;\n  },\n  captureBreadcrumb: function captureBreadcrumb(obj) {\n    var crumb = objectMerge({\n      timestamp: now() / 1000\n    }, obj);\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n\n    return this;\n  },\n  addPlugin: function addPlugin(plugin\n  /*arg1, arg2, ... argN*/\n  ) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n   * Set/clear a user to be sent along with the payload.\n   *\n   * @param {object} user An object representing user data [optional]\n   * @return {Raven}\n   */\n  setUserContext: function setUserContext(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n    return this;\n  },\n\n  /*\n   * Merge extra attributes to be sent along with the payload.\n   *\n   * @param {object} extra An object representing extra data [optional]\n   * @return {Raven}\n   */\n  setExtraContext: function setExtraContext(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n   * Merge tags to be sent along with the payload.\n   *\n   * @param {object} tags An object representing tags [optional]\n   * @return {Raven}\n   */\n  setTagsContext: function setTagsContext(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n   * Clear all of the context.\n   *\n   * @return {Raven}\n   */\n  clearContext: function clearContext() {\n    this._globalContext = {};\n    return this;\n  },\n\n  /*\n   * Get a copy of the current context. This cannot be mutated.\n   *\n   * @return {object} copy of context\n   */\n  getContext: function getContext() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n   * Set environment of application\n   *\n   * @param {string} environment Typically something like 'production'.\n   * @return {Raven}\n   */\n  setEnvironment: function setEnvironment(environment) {\n    this._globalOptions.environment = environment;\n    return this;\n  },\n\n  /*\n   * Set release version of application\n   *\n   * @param {string} release Typically something like a git SHA to identify version\n   * @return {Raven}\n   */\n  setRelease: function setRelease(release) {\n    this._globalOptions.release = release;\n    return this;\n  },\n\n  /*\n   * Set the dataCallback option\n   *\n   * @param {function} callback The callback to run which allows the\n   *                            data blob to be mutated before sending\n   * @return {Raven}\n   */\n  setDataCallback: function setDataCallback(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = isFunction(callback) ? function (data) {\n      return callback(data, original);\n    } : callback;\n    return this;\n  },\n\n  /*\n   * Set the breadcrumbCallback option\n   *\n   * @param {function} callback The callback to run which allows filtering\n   *                            or mutating breadcrumbs\n   * @return {Raven}\n   */\n  setBreadcrumbCallback: function setBreadcrumbCallback(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = isFunction(callback) ? function (data) {\n      return callback(data, original);\n    } : callback;\n    return this;\n  },\n\n  /*\n   * Set the shouldSendCallback option\n   *\n   * @param {function} callback The callback to run which allows\n   *                            introspecting the blob before sending\n   * @return {Raven}\n   */\n  setShouldSendCallback: function setShouldSendCallback(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = isFunction(callback) ? function (data) {\n      return callback(data, original);\n    } : callback;\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function setTransport(transport) {\n    this._globalOptions.transport = transport;\n    return this;\n  },\n\n  /*\n   * Get the latest raw exception that was captured by Raven.\n   *\n   * @return {error}\n   */\n  lastException: function lastException() {\n    return this._lastCapturedException;\n  },\n\n  /*\n   * Get the last event id\n   *\n   * @return {string}\n   */\n  lastEventId: function lastEventId() {\n    return this._lastEventId;\n  },\n\n  /*\n   * Determine if Raven is setup and ready to go.\n   *\n   * @return {boolean}\n   */\n  isSetup: function isSetup() {\n    if (!this._hasJSON) return false; // needs JSON support\n\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n\n      return false;\n    }\n\n    return true;\n  },\n  afterLoad: function afterLoad() {\n    // TODO: remove window dependence?\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n  showReportDialog: function showReportDialog(options) {\n    if (!_document) // doesn't work without a document (React native)\n      return;\n    options = options || {};\n    var lastEventId = options.eventId || this.lastEventId();\n\n    if (!lastEventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    var dsn = options.dsn || this._dsn;\n\n    if (!dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var qs = '';\n    qs += '?eventId=' + encode(lastEventId);\n    qs += '&dsn=' + encode(dsn);\n    var user = options.user || this._globalContext.user;\n\n    if (user) {\n      if (user.name) qs += '&name=' + encode(user.name);\n      if (user.email) qs += '&email=' + encode(user.email);\n    }\n\n    var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n    var script = _document.createElement('script');\n\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/' + qs;\n\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function _ignoreNextOnError() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function () {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n  _triggerEvent: function _triggerEvent(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n    if (!this._hasDocument) return;\n    options = options || {};\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options) {\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n    }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {// Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function _breadcrumbEventHandler(evtName) {\n    var self = this;\n    return function (evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null; // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n\n      if (self._lastCapturedEvent === evt) return;\n      self._lastCapturedEvent = evt; // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n\n      var target;\n\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName,\n        // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function _keypressEventHandler() {\n    var self = this,\n        debounceDuration = 1000; // milliseconds\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n\n    return function (evt) {\n      var target;\n\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n\n      var tagName = target && target.tagName; // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n\n      if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) return; // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n\n      var timeout = self._keypressTimeout;\n\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function () {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function _captureUrlChange(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from); // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n\n    this._lastHref = to; // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) from = parsedFrom.relative;\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function _instrumentTryCatch() {\n    var self = this;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function (fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n\n        var originalCallback = args[0];\n\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(originalCallback);\n        } // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n\n\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(proto, 'addEventListener', function (orig) {\n          return function (evtName, fn, capture, secure) {\n            // preserve arity\n            try {\n              if (fn && fn.handleEvent) {\n                fn.handleEvent = self.wrap(fn.handleEvent);\n              }\n            } catch (err) {} // can sometimes get 'Permission denied to access property \"handle Event'\n            // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n            // so that we don't have more than one wrapper function\n\n\n            var before, clickHandler, keypressHandler;\n\n            if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n              // NOTE: generating multiple handlers per addEventListener invocation, should\n              //       revisit and verify we can just use one (almost certainly)\n              clickHandler = self._breadcrumbEventHandler('click');\n              keypressHandler = self._keypressEventHandler();\n\n              before = function before(evt) {\n                // need to intercept every DOM event in `before` argument, in case that\n                // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                // see #724\n                if (!evt) return;\n                var eventType;\n\n                try {\n                  eventType = evt.type;\n                } catch (e) {\n                  // just accessing event properties can throw an exception in some rare circumstances\n                  // see: https://github.com/getsentry/raven-js/issues/838\n                  return;\n                }\n\n                if (eventType === 'click') return clickHandler(evt);else if (eventType === 'keypress') return keypressHandler(evt);\n              };\n            }\n\n            return orig.call(this, evtName, self.wrap(fn, undefined, before), capture, secure);\n          };\n        }, wrappedBuiltIns);\n        fill(proto, 'removeEventListener', function (orig) {\n          return function (evt, fn, capture, secure) {\n            try {\n              fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n            } catch (e) {// ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n            }\n\n            return orig.call(this, evt, fn, capture, secure);\n          };\n        }, wrappedBuiltIns);\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n\n    if (_window.requestAnimationFrame) {\n      fill(_window, 'requestAnimationFrame', function (orig) {\n        return function (cb) {\n          return orig(self.wrap(cb));\n        };\n      }, wrappedBuiltIns);\n    } // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n\n\n    var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function _instrumentBreadcrumbs() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function (orig) {\n          return self.wrap(orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = XMLHttpRequest.prototype;\n      fill(xhrproto, 'open', function (origOpen) {\n        return function (method, url) {\n          // preserve arity\n          // if Sentry key appears in URL, don't capture\n          if (isString(url) && url.indexOf(self._globalKey) === -1) {\n            this.__raven_xhr = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n          }\n\n          return origOpen.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n      fill(xhrproto, 'send', function (origSend) {\n        return function (data) {\n          // preserve arity\n          var xhr = this;\n\n          function onreadystatechangeHandler() {\n            if (xhr.__raven_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                xhr.__raven_xhr.status_code = xhr.status;\n              } catch (e) {\n                /* do nothing */\n              }\n\n              self.captureBreadcrumb({\n                type: 'http',\n                category: 'xhr',\n                data: xhr.__raven_xhr\n              });\n            }\n          }\n\n          var props = ['onload', 'onerror', 'onprogress'];\n\n          for (var j = 0; j < props.length; j++) {\n            wrapProp(props[j], xhr);\n          }\n\n          if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n            fill(xhr, 'onreadystatechange', function (orig) {\n              return self.wrap(orig, undefined, onreadystatechangeHandler);\n            }\n            /* intentionally don't track this instrumentation */\n            );\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n\n          return origSend.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.xhr && 'fetch' in _window) {\n      fill(_window, 'fetch', function (origFetch) {\n        return function (fn, t) {\n          // preserve arity\n          // Make a copy of the arguments to prevent deoptimization\n          // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n          var args = new Array(arguments.length);\n\n          for (var i = 0; i < args.length; ++i) {\n            args[i] = arguments[i];\n          }\n\n          var fetchInput = args[0];\n          var method = 'GET';\n          var url;\n\n          if (typeof fetchInput === 'string') {\n            url = fetchInput;\n          } else {\n            url = fetchInput.url;\n\n            if (fetchInput.method) {\n              method = fetchInput.method;\n            }\n          }\n\n          if (args[1] && args[1].method) {\n            method = args[1].method;\n          }\n\n          var fetchData = {\n            method: method,\n            url: url,\n            status_code: null\n          };\n          self.captureBreadcrumb({\n            type: 'http',\n            category: 'fetch',\n            data: fetchData\n          });\n          return origFetch.apply(this, args).then(function (response) {\n            fetchData.status_code = response.status;\n            return response;\n          });\n        };\n      }, wrappedBuiltIns);\n    } // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n\n\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    } // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n\n\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushState = !isChromePackagedApp && _window.history && history.pushState;\n\n    if (autoBreadcrumbs.location && hasPushState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n\n      _window.onpopstate = function () {\n        var currentHref = self._location.href;\n\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      fill(history, 'pushState', function (origPushState) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function ()\n        /* state, title, url */\n        {\n          var url = arguments.length > 2 ? arguments[2] : undefined; // url argument is optional\n\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origPushState.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function consoleMethodCallback(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n  _restoreBuiltIns: function _restoreBuiltIns() {\n    // restore any wrapped builtins\n    var builtin;\n\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n      var obj = builtin[0],\n          name = builtin[1],\n          orig = builtin[2];\n      obj[name] = orig;\n    }\n  },\n  _drainPlugins: function _drainPlugins() {\n    var self = this; // FIX ME TODO\n\n    each(this._plugins, function (_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n  _parseDSN: function _parseDSN(str) {\n    var m = dsnPattern.exec(str),\n        dsn = {},\n        i = 7;\n\n    try {\n      while (i--) {\n        dsn[dsnKeys[i]] = m[i] || '';\n      }\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n    }\n\n    return dsn;\n  },\n  _getGlobalServer: function _getGlobalServer(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n\n    return globalServer;\n  },\n  _handleOnErrorStackInfo: function _handleOnErrorStackInfo() {\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo.apply(this, arguments);\n    }\n  },\n  _handleStackInfo: function _handleStackInfo(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(stackInfo.name, stackInfo.message, stackInfo.url, stackInfo.lineno, frames, options);\n  },\n  _prepareFrames: function _prepareFrames(stackInfo, options) {\n    var self = this;\n    var frames = [];\n\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function (i, stack) {\n        var frame = self._normalizeFrame(stack);\n\n        if (frame) {\n          frames.push(frame);\n        }\n      }); // e.g. frames captured via captureMessage throw\n\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n  _normalizeFrame: function _normalizeFrame(frame) {\n    if (!frame.url) return; // normalize the frames data\n\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      'function': frame.func || '?'\n    };\n    normalized.in_app = !( // determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) || // Now we check for fun, if the function name is Raven or TraceKit\n    /(Raven|TraceKit)\\./.test(normalized['function']) || // finally, we do a last ditch effort and check for raven.min.js\n    /raven\\.(min\\.)?js$/.test(normalized.filename));\n    return normalized;\n  },\n  _processException: function _processException(type, message, fileurl, lineno, frames, options) {\n    var stacktrace;\n    if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n    message += '';\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl; // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n\n      frames.reverse();\n      stacktrace = {\n        frames: frames\n      };\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [{\n          filename: fileurl,\n          lineno: lineno,\n          in_app: true\n        }]\n      };\n    }\n\n    if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n    if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n    var data = objectMerge({\n      // sentry.interfaces.Exception\n      exception: {\n        values: [{\n          type: type,\n          value: message,\n          stacktrace: stacktrace\n        }]\n      },\n      culprit: fileurl\n    }, options); // Fire away!\n\n    this._send(data);\n  },\n  _trimPacket: function _trimPacket(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values) this._trimBreadcrumbs(data.breadcrumbs);\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function _trimBreadcrumbs(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n        urlProp,\n        crumb,\n        data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (!crumb.hasOwnProperty('data') || !isObject(crumb.data)) continue;\n      data = crumb.data;\n\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n\n        if (data.hasOwnProperty(urlProp)) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n    }\n  },\n  _getHttpData: function _getHttpData() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': navigator.userAgent\n      };\n    }\n\n    if (this._hasDocument) {\n      if (_document.location && _document.location.href) {\n        httpData.url = _document.location.href;\n      }\n\n      if (_document.referrer) {\n        if (!httpData.headers) httpData.headers = {};\n        httpData.headers.Referer = _document.referrer;\n      }\n    }\n\n    return httpData;\n  },\n  _resetBackoff: function _resetBackoff() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n  _shouldBackoff: function _shouldBackoff() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function _isRepeatData(current) {\n    var last = this._lastData;\n    if (!last || current.message !== last.message || // defined for captureMessage\n    current.culprit !== last.culprit) // defined for captureException/onerror\n      return false; // Stacktrace interface (i.e. from captureMessage)\n\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } // Exception interface (i.e. from captureException/onerror)\n    else if (current.exception || last.exception) {\n        return isSameException(current.exception, last.exception);\n      }\n\n    return true;\n  },\n  _setBackoffState: function _setBackoffState(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status; // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n\n    if (!(status === 400 || status === 401 || status === 429)) return;\n    var retry;\n\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      retry = request.getResponseHeader('Retry-After');\n      retry = parseInt(retry, 10) * 1000; // Retry-After is returned in seconds\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry // If Sentry server returned a Retry-After value, use it\n    ? retry // Otherwise, double the last backoff duration (starts at 1 sec)\n    : this._backoffDuration * 2 || 1000;\n    this._backoffStart = now();\n  },\n  _send: function _send(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n      project: this._globalProject,\n      logger: globalOptions.logger,\n      platform: 'javascript'\n    },\n        httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    } // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n\n\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n    data = objectMerge(baseData, data); // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra); // Send along our own collected metadata with extra\n\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    } // If there are no tags/extra, strip the key from the payload alltogther.\n\n\n    if (isEmptyObject(data.tags)) delete data.tags;\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    } // Include the environment if it's defined in globalOptions\n\n\n    if (globalOptions.environment) data.environment = globalOptions.environment; // Include the release if it's defined in globalOptions\n\n    if (globalOptions.release) data.release = globalOptions.release; // Include server_name if it's defined in globalOptions\n\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    } // Why??????????\n\n\n    if (!data || isEmptyObject(data)) {\n      return;\n    } // Check if the request should be filtered or not\n\n\n    if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n      return;\n    } // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n\n\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n  _getUuid: function _getUuid() {\n    return uuid4();\n  },\n  _sendProcessedPayload: function _sendProcessedPayload(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n    if (!this.isSetup()) return; // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid()); // Try and clean up the packet before sending by truncating long values\n\n    data = this._trimPacket(data); // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n\n      return;\n    } // Store outbound payload after trim\n\n\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n    this.captureBreadcrumb({\n      category: 'sentry',\n      message: exception ? (exception.type ? exception.type + ': ' : '') + exception.value : data.message,\n      event_id: data.event_id,\n      level: data.level || 'error' // presume error unless specified\n\n    });\n    var url = this._globalEndpoint;\n\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n  _makeRequest: function _makeRequest(opts) {\n    var request = new XMLHttpRequest(); // if browser doesn't support CORS (e.g. IE7), we are out of luck\n\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n    if (!hasCORS) return;\n    var url = opts.url;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest(); // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n\n      url = url.replace(/^https?:/, ''); // onreadystatechange not supported by XDomainRequest\n\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n\n      if (opts.onError) {\n        request.onerror = function () {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    } // NOTE: auth is intentionally sent as part of query string (NOT as custom\n    //       HTTP header) so as to avoid preflight CORS requests\n\n\n    request.open('POST', url + '?' + urlencode(opts.auth));\n    request.send(stringify(opts.data));\n  },\n  _logDebug: function _logDebug(level) {\n    if (this._originalConsoleMethods[level] && this.debug) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(this._originalConsoleMethods[level], this._originalConsole, [].slice.call(arguments, 1));\n    }\n  },\n  _mergeContext: function _mergeContext(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n/*------------------------------------------------\n * utils\n *\n * conditionally exported for test via Raven.utils\n =================================================\n */\n\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isString(what) {\n  return objectPrototype.toString.call(what) === '[object String]';\n}\n\nfunction isEmptyObject(what) {\n  for (var _ in what) {\n    return false;\n  } // eslint-disable-line guard-for-in, no-unused-vars\n\n\n  return true;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n\n  each(obj2, function (key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\nfunction truncate(str, max) {\n  return !max || str.length <= max ? str : str.substr(0, max) + \"\\u2026\";\n}\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\n\n\nfunction hasKey(object, key) {\n  return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n      i = 0,\n      len = patterns.length,\n      pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    } // Intentionally skip other cases\n\n  }\n\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function (key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n} // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\n\n\nfunction parseUrl(url) {\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n  if (!match) return {}; // coerce to undefined values to empty string so we don't get 'undefined'\n\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n\n  };\n}\n\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr); // set 4 in byte 7\n\n    arr[3] = arr[3] & 0xFFF | 0x4000; // set 2 most significant bits of byte 9 to '10'\n\n    arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n    var pad = function pad(num) {\n      var v = num.toString(16);\n\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n\n      return v;\n    };\n\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\n\n\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n      MAX_OUTPUT_LEN = 80,\n      out = [],\n      height = 0,\n      len = 0,\n      separator = ' > ',\n      sepLength = separator.length,\n      nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem); // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n\n    if (nextStr === 'html' || height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN) {\n      break;\n    }\n\n    out.push(nextStr);\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\n\n\nfunction htmlElementAsString(elem) {\n  var out = [],\n      className,\n      classes,\n      key,\n      attr,\n      i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n\n  return out.join('');\n}\n/**\n * Returns true if either a OR b is truthy, but not both\n */\n\n\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n/**\n * Returns true if the two input exception interfaces have the same content\n */\n\n\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\n\n\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames; // Exit early if frame count differs\n\n  if (frames1.length !== frames2.length) return false; // Iterate through every frame; bail out if anything differs\n\n  var a, b;\n\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (a.filename !== b.filename || a.lineno !== b.lineno || a.colno !== b.colno || a['function'] !== b['function']) return false;\n  }\n\n  return true;\n}\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\n\n\nfunction fill(obj, name, replacement, track) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\nif (typeof __DEV__ !== 'undefined' && __DEV__) {\n  Raven.utils = {\n    isUndefined: isUndefined,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isEmptyObject: isEmptyObject,\n    isError: isError,\n    each: each,\n    objectMerge: objectMerge,\n    truncate: truncate,\n    hasKey: hasKey,\n    joinRegExp: joinRegExp,\n    urlencode: urlencode,\n    uuid4: uuid4,\n    htmlTreeAsString: htmlTreeAsString,\n    htmlElementAsString: htmlElementAsString,\n    parseUrl: parseUrl,\n    fill: fill\n  };\n}\n\n; // Deprecations\n\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\nmodule.exports = Raven;",{"version":3,"sources":["node_modules/raven-js/src/raven.js"],"names":["TraceKit","require","stringify","RavenConfigError","utils","isError","isObject","wrapConsoleMethod","wrapMethod","dsnKeys","split","dsnPattern","now","Date","_window","window","global","self","_document","document","_navigator","navigator","Raven","_hasJSON","JSON","_hasDocument","isUndefined","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","logger","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","crossOrigin","collectWindowErrors","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","Error","_originalConsole","console","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","location","_lastHref","href","_resetBackoff","method","prototype","VERSION","debug","config","dsn","options","_logDebug","globalOptions","each","key","value","setDSN","push","joinRegExp","length","maxBreadcrumbs","Math","max","min","autoBreadcrumbDefaults","xhr","dom","toString","call","objectMerge","instrumentDefaults","tryCatch","install","isSetup","report","subscribe","_handleOnErrorStackInfo","apply","arguments","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","path","lastIndexOf","substr","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","args","isFunction","undefined","wrap","_before","__raven__","__raven_wrapper__","e","wrapped","i","deep","_ignoreNextOnError","captureException","property","hasKey","__inner__","uninstall","_restoreBuiltIns","ex","captureMessage","trimHeadFrames","stacktrace","stack","computeStackTrace","_handleStackInfo","ex1","msg","test","data","message","name","fingerprint","frames","_prepareFrames","reverse","_send","captureBreadcrumb","obj","crumb","timestamp","breadcrumbCallback","result","isEmptyObject","shift","addPlugin","plugin","pluginArgs","slice","setUserContext","setExtraContext","extra","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","release","setDataCallback","callback","original","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","showReportDialog","eventId","encode","encodeURIComponent","qs","email","globalServer","script","createElement","async","src","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","toLowerCase","_breadcrumbEventHandler","evtName","target","htmlTreeAsString","category","_keypressEventHandler","debounceDuration","tagName","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parseUrl","parsedTo","parsedFrom","protocol","host","relative","wrappedBuiltIns","wrapTimeFn","orig","fn","t","Array","originalCallback","wrapEventTarget","proto","hasOwnProperty","fill","capture","secure","handleEvent","err","before","clickHandler","keypressHandler","type","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","url","isString","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","j","onreadystatechange","origFetch","fetchInput","fetchData","then","response","addEventListener","attachEvent","chrome","isChromePackagedApp","app","runtime","hasPushState","history","pushState","oldOnPopState","onpopstate","currentHref","origPushState","log","consoleMethodCallback","level","_","builtin","installer","concat","str","m","exec","allowSecretKey","port","stackInfo","_processException","lineno","frame","_normalizeFrame","in_app","normalized","filename","line","colno","column","fileurl","exception","values","culprit","_trimPacket","truncate","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProps","urlProp","_getHttpData","httpData","userAgent","headers","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","isSameStacktrace","isSameException","_setBackoffState","retry","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","random","_sendProcessedPayload","_getUuid","uuid4","event_id","allowDuplicates","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","success","onError","failure","error","opts","hasCORS","XDomainRequest","replace","onload","onerror","open","urlencode","send","Function","objectPrototype","Object","what","obj1","obj2","object","patterns","sources","len","pattern","source","RegExp","join","o","pairs","match","query","fragment","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","elem","MAX_TRAVERSE_HEIGHT","MAX_OUTPUT_LEN","out","height","separator","sepLength","nextStr","htmlElementAsString","parentNode","className","classes","attr","id","attrWhitelist","getAttribute","isOnlyOneTruthy","a","b","ex2","stack1","stack2","frames1","frames2","replacement","track","__DEV__","setUser","setReleaseContext","module","exports"],"mappings":"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","file":"/Users/eve/development/force/node_modules/raven-js/src/raven.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["/*global XDomainRequest:false, __DEV__:false*/\n'use strict';\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar RavenConfigError = require('./configError');\nvar utils = require('./utils');\n\nvar isError = utils.isError,\n    isObject = utils.isObject;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n    return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window = typeof window !== 'undefined' ? window\n            : typeof global !== 'undefined' ? global\n            : typeof self !== 'undefined' ? self\n            : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n    this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n    // Raven can run in contexts where there's no document (react-native)\n    this._hasDocument = !isUndefined(_document);\n    this._hasNavigator = !isUndefined(_navigator);\n    this._lastCapturedException = null;\n    this._lastData = null;\n    this._lastEventId = null;\n    this._globalServer = null;\n    this._globalKey = null;\n    this._globalProject = null;\n    this._globalContext = {};\n    this._globalOptions = {\n        logger: 'javascript',\n        ignoreErrors: [],\n        ignoreUrls: [],\n        whitelistUrls: [],\n        includePaths: [],\n        crossOrigin: 'anonymous',\n        collectWindowErrors: true,\n        maxMessageLength: 0,\n\n        // By default, truncates URL values to 250 chars\n        maxUrlLength: 250,\n        stackTraceLimit: 50,\n        autoBreadcrumbs: true,\n        instrument: true,\n        sampleRate: 1\n    };\n    this._ignoreOnError = 0;\n    this._isRavenInstalled = false;\n    this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n    // capture references to window.console *and* all its methods first\n    // before the console plugin has a chance to monkey patch\n    this._originalConsole = _window.console || {};\n    this._originalConsoleMethods = {};\n    this._plugins = [];\n    this._startTime = now();\n    this._wrappedBuiltIns = [];\n    this._breadcrumbs = [];\n    this._lastCapturedEvent = null;\n    this._keypressTimeout;\n    this._location = _window.location;\n    this._lastHref = this._location && this._location.href;\n    this._resetBackoff();\n\n    for (var method in this._originalConsole) {  // eslint-disable-line guard-for-in\n      this._originalConsoleMethods[method] = this._originalConsole[method];\n    }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n    // Hardcode version string so that raven source can be loaded directly via\n    // webpack (using a build step causes webpack #1617). Grunt verifies that\n    // this value matches package.json during build.\n    //   See: https://github.com/getsentry/raven-js/issues/465\n    VERSION: '3.15.0',\n\n    debug: false,\n\n    TraceKit: TraceKit, // alias to TraceKit\n\n    /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Optional set of of global options [optional]\n     * @return {Raven}\n     */\n    config: function(dsn, options) {\n        var self = this;\n\n        if (self._globalServer) {\n                this._logDebug('error', 'Error: Raven has already been configured');\n            return self;\n        }\n        if (!dsn) return self;\n\n        var globalOptions = self._globalOptions;\n\n        // merge in options\n        if (options) {\n            each(options, function(key, value){\n                // tags and extra are special and need to be put into context\n                if (key === 'tags' || key === 'extra' || key === 'user') {\n                    self._globalContext[key] = value;\n                } else {\n                    globalOptions[key] = value;\n                }\n            });\n        }\n\n        self.setDSN(dsn);\n\n        // \"Script error.\" is hard coded into browsers for errors that it can't read.\n        // this is the result of a script being pulled in from an external domain and CORS.\n        globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n        globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n        // join regexp rules into one big rule\n        globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n        globalOptions.ignoreUrls = globalOptions.ignoreUrls.length ? joinRegExp(globalOptions.ignoreUrls) : false;\n        globalOptions.whitelistUrls = globalOptions.whitelistUrls.length ? joinRegExp(globalOptions.whitelistUrls) : false;\n        globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n        globalOptions.maxBreadcrumbs = Math.max(0, Math.min(globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n        var autoBreadcrumbDefaults = {\n            xhr: true,\n            console: true,\n            dom: true,\n            location: true\n        };\n\n        var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n        if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n            autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n        } else if (autoBreadcrumbs !== false) {\n            autoBreadcrumbs = autoBreadcrumbDefaults;\n        }\n        globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n        var instrumentDefaults = {\n            tryCatch: true\n        };\n\n        var instrument = globalOptions.instrument;\n        if ({}.toString.call(instrument) === '[object Object]') {\n            instrument = objectMerge(instrumentDefaults, instrument);\n        } else if (instrument !== false) {\n            instrument = instrumentDefaults;\n        }\n        globalOptions.instrument = instrument;\n\n        TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n        // return for chaining\n        return self;\n    },\n\n    /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n    install: function() {\n        var self = this;\n        if (self.isSetup() && !self._isRavenInstalled) {\n            TraceKit.report.subscribe(function () {\n                self._handleOnErrorStackInfo.apply(self, arguments);\n            });\n            if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n              self._instrumentTryCatch();\n            }\n\n            if (self._globalOptions.autoBreadcrumbs)\n                self._instrumentBreadcrumbs();\n\n            // Install all of the plugins\n            self._drainPlugins();\n\n            self._isRavenInstalled = true;\n        }\n\n        Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n        return this;\n    },\n\n    /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n    setDSN: function(dsn) {\n        var self = this,\n            uri = self._parseDSN(dsn),\n          lastSlash = uri.path.lastIndexOf('/'),\n          path = uri.path.substr(1, lastSlash);\n\n        self._dsn = dsn;\n        self._globalKey = uri.user;\n        self._globalSecret = uri.pass && uri.pass.substr(1);\n        self._globalProject = uri.path.substr(lastSlash + 1);\n\n        self._globalServer = self._getGlobalServer(uri);\n\n        self._globalEndpoint = self._globalServer +\n            '/' + path + 'api/' + self._globalProject + '/store/';\n\n        // Reset backoff state since we may be pointing at a\n        // new project/server\n        this._resetBackoff();\n    },\n\n    /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n    context: function(options, func, args) {\n        if (isFunction(options)) {\n            args = func || [];\n            func = options;\n            options = undefined;\n        }\n\n        return this.wrap(options, func).apply(this, args);\n    },\n\n    /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n    wrap: function(options, func, _before) {\n        var self = this;\n        // 1 argument has been passed, and it's not a function\n        // so just return it\n        if (isUndefined(func) && !isFunction(options)) {\n            return options;\n        }\n\n        // options is optional\n        if (isFunction(options)) {\n            func = options;\n            options = undefined;\n        }\n\n        // At this point, we've passed along 2 arguments, and the second one\n        // is not a function either, so we'll just return the second argument.\n        if (!isFunction(func)) {\n            return func;\n        }\n\n        // We don't wanna wrap it twice!\n        try {\n            if (func.__raven__) {\n                return func;\n            }\n\n            // If this has already been wrapped in the past, return that\n            if (func.__raven_wrapper__ ){\n                return func.__raven_wrapper__ ;\n            }\n        } catch (e) {\n            // Just accessing custom props in some Selenium environments\n            // can cause a \"Permission denied\" exception (see raven-js#495).\n            // Bail on wrapping and return the function as-is (defers to window.onerror).\n            return func;\n        }\n\n        function wrapped() {\n            var args = [], i = arguments.length,\n                deep = !options || options && options.deep !== false;\n\n            if (_before && isFunction(_before)) {\n                _before.apply(this, arguments);\n            }\n\n            // Recursively wrap all of a function's arguments that are\n            // functions themselves.\n            while(i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n            try {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means Raven caught an error invoking your application code. This is\n                //       expected behavior and NOT indicative of a bug with Raven.js.\n                return func.apply(this, args);\n            } catch(e) {\n                self._ignoreNextOnError();\n                self.captureException(e, options);\n                throw e;\n            }\n        }\n\n        // copy over properties of the old function\n        for (var property in func) {\n            if (hasKey(func, property)) {\n                wrapped[property] = func[property];\n            }\n        }\n        wrapped.prototype = func.prototype;\n\n        func.__raven_wrapper__ = wrapped;\n        // Signal that this function has been wrapped already\n        // for both debugging and to prevent it to being wrapped twice\n        wrapped.__raven__ = true;\n        wrapped.__inner__ = func;\n\n        return wrapped;\n    },\n\n    /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n    uninstall: function() {\n        TraceKit.report.uninstall();\n\n        this._restoreBuiltIns();\n\n        Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n        this._isRavenInstalled = false;\n\n        return this;\n    },\n\n    /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n    captureException: function(ex, options) {\n        // If not an Error is passed through, recall as a message instead\n        if (!isError(ex)) {\n            return this.captureMessage(ex, objectMerge({\n                trimHeadFrames: 1,\n                stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n            }, options));\n        }\n\n        // Store the raw exception object for potential debugging and introspection\n        this._lastCapturedException = ex;\n\n        // TraceKit.report will re-raise any exception passed to it,\n        // which means you have to wrap it in try/catch. Instead, we\n        // can wrap it here and only re-raise if TraceKit.report\n        // raises an exception different from the one we asked to\n        // report on.\n        try {\n            var stack = TraceKit.computeStackTrace(ex);\n            this._handleStackInfo(stack, options);\n        } catch(ex1) {\n            if(ex !== ex1) {\n                throw ex1;\n            }\n        }\n\n        return this;\n    },\n\n    /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n    captureMessage: function(msg, options) {\n        // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n        // early call; we'll error on the side of logging anything called before configuration since it's\n        // probably something you should see:\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n            return;\n        }\n\n        options = options || {};\n\n        var data = objectMerge({\n            message: msg + ''  // Make sure it's actually a string\n        }, options);\n\n        if (this._globalOptions.stacktrace || (options && options.stacktrace)) {\n            var ex;\n            // Generate a \"synthetic\" stack trace from this point.\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n            //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n            //       or if it catches a thrown object without a \"stack\" property.\n            try {\n                throw new Error(msg);\n            } catch (ex1) {\n                ex = ex1;\n            }\n\n            // null exception name so `Error` isn't prefixed to msg\n            ex.name = null;\n\n            options = objectMerge({\n                // fingerprint on msg, not stack trace (legacy behavior, could be\n                // revisited)\n                fingerprint: msg,\n                // since we know this is a synthetic trace, the top N-most frames\n                // MUST be from Raven.js, so mark them as in_app later by setting\n                // trimHeadFrames\n                trimHeadFrames: (options.trimHeadFrames || 0) + 1\n            }, options);\n\n            var stack = TraceKit.computeStackTrace(ex);\n            var frames = this._prepareFrames(stack, options);\n            data.stacktrace = {\n                // Sentry expects frames oldest to newest\n                frames: frames.reverse()\n            }\n        }\n\n        // Fire away!\n        this._send(data);\n\n        return this;\n    },\n\n    captureBreadcrumb: function (obj) {\n        var crumb = objectMerge({\n            timestamp: now() / 1000\n        }, obj);\n\n        if (isFunction(this._globalOptions.breadcrumbCallback)) {\n            var result = this._globalOptions.breadcrumbCallback(crumb);\n\n            if (isObject(result) && !isEmptyObject(result)) {\n                crumb = result;\n            } else if (result === false) {\n                return this;\n            }\n        }\n\n        this._breadcrumbs.push(crumb);\n        if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n            this._breadcrumbs.shift();\n        }\n        return this;\n    },\n\n    addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n        var pluginArgs = [].slice.call(arguments, 1);\n\n        this._plugins.push([plugin, pluginArgs]);\n        if (this._isRavenInstalled) {\n            this._drainPlugins();\n        }\n\n        return this;\n    },\n\n    /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n    setUserContext: function(user) {\n        // Intentionally do not merge here since that's an unexpected behavior.\n        this._globalContext.user = user;\n\n        return this;\n    },\n\n    /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n    setExtraContext: function(extra) {\n        this._mergeContext('extra', extra);\n\n        return this;\n    },\n\n    /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n    setTagsContext: function(tags) {\n        this._mergeContext('tags', tags);\n\n        return this;\n    },\n\n    /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n    clearContext: function() {\n        this._globalContext = {};\n\n        return this;\n    },\n\n    /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n    getContext: function() {\n        // lol javascript\n        return JSON.parse(stringify(this._globalContext));\n    },\n\n\n    /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n    setEnvironment: function(environment) {\n        this._globalOptions.environment = environment;\n\n        return this;\n    },\n\n    /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n    setRelease: function(release) {\n        this._globalOptions.release = release;\n\n        return this;\n    },\n\n    /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n    setDataCallback: function(callback) {\n        var original = this._globalOptions.dataCallback;\n        this._globalOptions.dataCallback = isFunction(callback)\n          ? function (data) { return callback(data, original); }\n          : callback;\n\n        return this;\n    },\n\n    /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n    setBreadcrumbCallback: function(callback) {\n        var original = this._globalOptions.breadcrumbCallback;\n        this._globalOptions.breadcrumbCallback = isFunction(callback)\n          ? function (data) { return callback(data, original); }\n          : callback;\n\n        return this;\n    },\n\n    /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n    setShouldSendCallback: function(callback) {\n        var original = this._globalOptions.shouldSendCallback;\n        this._globalOptions.shouldSendCallback = isFunction(callback)\n            ? function (data) { return callback(data, original); }\n            : callback;\n\n        return this;\n    },\n\n    /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n    setTransport: function(transport) {\n        this._globalOptions.transport = transport;\n\n        return this;\n    },\n\n    /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n    lastException: function() {\n        return this._lastCapturedException;\n    },\n\n    /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n    lastEventId: function() {\n        return this._lastEventId;\n    },\n\n    /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n    isSetup: function() {\n        if (!this._hasJSON) return false;  // needs JSON support\n        if (!this._globalServer) {\n            if (!this.ravenNotConfiguredError) {\n              this.ravenNotConfiguredError = true;\n              this._logDebug('error', 'Error: Raven has not been configured.');\n            }\n            return false;\n        }\n        return true;\n    },\n\n    afterLoad: function () {\n        // TODO: remove window dependence?\n\n        // Attempt to initialize Raven on load\n        var RavenConfig = _window.RavenConfig;\n        if (RavenConfig) {\n            this.config(RavenConfig.dsn, RavenConfig.config).install();\n        }\n    },\n\n    showReportDialog: function (options) {\n        if (!_document) // doesn't work without a document (React native)\n            return;\n\n        options = options || {};\n\n        var lastEventId = options.eventId || this.lastEventId();\n        if (!lastEventId) {\n            throw new RavenConfigError('Missing eventId');\n        }\n\n        var dsn = options.dsn || this._dsn;\n        if (!dsn) {\n            throw new RavenConfigError('Missing DSN');\n        }\n\n        var encode = encodeURIComponent;\n        var qs = '';\n        qs += '?eventId=' + encode(lastEventId);\n        qs += '&dsn=' + encode(dsn);\n\n        var user = options.user || this._globalContext.user;\n        if (user) {\n            if (user.name)  qs += '&name=' + encode(user.name);\n            if (user.email) qs += '&email=' + encode(user.email);\n        }\n\n        var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n        var script = _document.createElement('script');\n        script.async = true;\n        script.src = globalServer + '/api/embed/error-page/' + qs;\n        (_document.head || _document.body).appendChild(script);\n    },\n\n    /**** Private functions ****/\n    _ignoreNextOnError: function () {\n        var self = this;\n        this._ignoreOnError += 1;\n        setTimeout(function () {\n            // onerror should trigger before setTimeout\n            self._ignoreOnError -= 1;\n        });\n    },\n\n    _triggerEvent: function(eventType, options) {\n        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n        var evt, key;\n\n        if (!this._hasDocument)\n            return;\n\n        options = options || {};\n\n        eventType = 'raven' + eventType.substr(0,1).toUpperCase() + eventType.substr(1);\n\n        if (_document.createEvent) {\n            evt = _document.createEvent('HTMLEvents');\n            evt.initEvent(eventType, true, true);\n        } else {\n            evt = _document.createEventObject();\n            evt.eventType = eventType;\n        }\n\n        for (key in options) if (hasKey(options, key)) {\n            evt[key] = options[key];\n        }\n\n        if (_document.createEvent) {\n            // IE9 if standards\n            _document.dispatchEvent(evt);\n        } else {\n            // IE8 regardless of Quirks or Standards\n            // IE9 if quirks\n            try {\n                _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n            } catch(e) {\n                // Do nothing\n            }\n        }\n    },\n\n    /**\n     * Wraps addEventListener to capture UI breadcrumbs\n     * @param evtName the event name (e.g. \"click\")\n     * @returns {Function}\n     * @private\n     */\n    _breadcrumbEventHandler: function(evtName) {\n        var self = this;\n        return function (evt) {\n            // reset keypress timeout; e.g. triggering a 'click' after\n            // a 'keypress' will reset the keypress debounce so that a new\n            // set of keypresses can be recorded\n            self._keypressTimeout = null;\n\n            // It's possible this handler might trigger multiple times for the same\n            // event (e.g. event propagation through node ancestors). Ignore if we've\n            // already captured the event.\n            if (self._lastCapturedEvent === evt)\n                return;\n\n            self._lastCapturedEvent = evt;\n\n            // try/catch both:\n            // - accessing evt.target (see getsentry/raven-js#838, #768)\n            // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n            //   can throw an exception in some circumstances.\n            var target;\n            try {\n                target = htmlTreeAsString(evt.target);\n            } catch (e) {\n                target = '<unknown>';\n            }\n\n            self.captureBreadcrumb({\n                category: 'ui.' + evtName, // e.g. ui.click, ui.input\n                message: target\n            });\n        };\n    },\n\n    /**\n     * Wraps addEventListener to capture keypress UI events\n     * @returns {Function}\n     * @private\n     */\n    _keypressEventHandler: function() {\n        var self = this,\n            debounceDuration = 1000; // milliseconds\n\n        // TODO: if somehow user switches keypress target before\n        //       debounce timeout is triggered, we will only capture\n        //       a single breadcrumb from the FIRST target (acceptable?)\n        return function (evt) {\n            var target;\n            try {\n                target = evt.target;\n            } catch (e) {\n                // just accessing event properties can throw an exception in some rare circumstances\n                // see: https://github.com/getsentry/raven-js/issues/838\n                return;\n            }\n            var tagName = target && target.tagName;\n\n            // only consider keypress events on actual input elements\n            // this will disregard keypresses targeting body (e.g. tabbing\n            // through elements, hotkeys, etc)\n            if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n                return;\n\n            // record first keypress in a series, but ignore subsequent\n            // keypresses until debounce clears\n            var timeout = self._keypressTimeout;\n            if (!timeout) {\n                self._breadcrumbEventHandler('input')(evt);\n            }\n            clearTimeout(timeout);\n            self._keypressTimeout = setTimeout(function () {\n                self._keypressTimeout = null;\n            }, debounceDuration);\n        };\n    },\n\n    /**\n     * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n     * @param to the originating URL\n     * @param from the target URL\n     * @private\n     */\n    _captureUrlChange: function(from, to) {\n        var parsedLoc = parseUrl(this._location.href);\n        var parsedTo = parseUrl(to);\n        var parsedFrom = parseUrl(from);\n\n        // because onpopstate only tells you the \"new\" (to) value of location.href, and\n        // not the previous (from) value, we need to track the value of the current URL\n        // state ourselves\n        this._lastHref = to;\n\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n            to = parsedTo.relative;\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n            from = parsedFrom.relative;\n\n        this.captureBreadcrumb({\n            category: 'navigation',\n            data: {\n                to: to,\n                from: from\n            }\n        });\n    },\n\n    /**\n     * Wrap timer functions and event targets to catch errors and provide\n     * better metadata.\n     */\n    _instrumentTryCatch: function() {\n        var self = this;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapTimeFn(orig) {\n            return function (fn, t) { // preserve arity\n                // Make a copy of the arguments to prevent deoptimization\n                // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n                var args = new Array(arguments.length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = arguments[i];\n                }\n                var originalCallback = args[0];\n                if (isFunction(originalCallback)) {\n                    args[0] = self.wrap(originalCallback);\n                }\n\n                // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n                // also supports only two arguments and doesn't care what this is, so we\n                // can just call the original function directly.\n                if (orig.apply) {\n                    return orig.apply(this, args);\n                } else {\n                    return orig(args[0], args[1]);\n                }\n            };\n        }\n\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        function wrapEventTarget(global) {\n            var proto = _window[global] && _window[global].prototype;\n            if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n                fill(proto, 'addEventListener', function(orig) {\n                    return function (evtName, fn, capture, secure) { // preserve arity\n                        try {\n                            if (fn && fn.handleEvent) {\n                                fn.handleEvent = self.wrap(fn.handleEvent);\n                            }\n                        } catch (err) {\n                            // can sometimes get 'Permission denied to access property \"handle Event'\n                        }\n\n                        // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n                        // so that we don't have more than one wrapper function\n                        var before,\n                            clickHandler,\n                            keypressHandler;\n\n                        if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n                            // NOTE: generating multiple handlers per addEventListener invocation, should\n                            //       revisit and verify we can just use one (almost certainly)\n                            clickHandler = self._breadcrumbEventHandler('click');\n                            keypressHandler = self._keypressEventHandler();\n                            before = function (evt) {\n                                // need to intercept every DOM event in `before` argument, in case that\n                                // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                                // see #724\n                                if (!evt) return;\n\n                                var eventType;\n                                try {\n                                    eventType = evt.type\n                                } catch (e) {\n                                    // just accessing event properties can throw an exception in some rare circumstances\n                                    // see: https://github.com/getsentry/raven-js/issues/838\n                                    return;\n                                }\n                                if (eventType === 'click')\n                                    return clickHandler(evt);\n                                else if (eventType === 'keypress')\n                                    return keypressHandler(evt);\n                            };\n                        }\n                        return orig.call(this, evtName, self.wrap(fn, undefined, before), capture, secure);\n                    };\n                }, wrappedBuiltIns);\n                fill(proto, 'removeEventListener', function (orig) {\n                    return function (evt, fn, capture, secure) {\n                        try {\n                            fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__  : fn);\n                        } catch (e) {\n                            // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n                        }\n                        return orig.call(this, evt, fn, capture, secure);\n                    };\n                }, wrappedBuiltIns);\n            }\n        }\n\n        fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n        fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n        if (_window.requestAnimationFrame) {\n            fill(_window, 'requestAnimationFrame', function (orig) {\n                return function (cb) {\n                    return orig(self.wrap(cb));\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // event targets borrowed from bugsnag-js:\n        // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n        var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n        for (var i = 0; i < eventTargets.length; i++) {\n            wrapEventTarget(eventTargets[i]);\n        }\n    },\n\n\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - XMLHttpRequests\n     *  - DOM interactions (click/typing)\n     *  - window.location changes\n     *  - console\n     *\n     * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n     */\n    _instrumentBreadcrumbs: function () {\n        var self = this;\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && isFunction(xhr[prop])) {\n                fill(xhr, prop, function (orig) {\n                    return self.wrap(orig);\n                }); // intentionally don't track filled methods on XHR instances\n            }\n        }\n\n        if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n            var xhrproto = XMLHttpRequest.prototype;\n            fill(xhrproto, 'open', function(origOpen) {\n                return function (method, url) { // preserve arity\n\n                    // if Sentry key appears in URL, don't capture\n                    if (isString(url) && url.indexOf(self._globalKey) === -1) {\n                        this.__raven_xhr = {\n                            method: method,\n                            url: url,\n                            status_code: null\n                        };\n                    }\n\n                    return origOpen.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n\n            fill(xhrproto, 'send', function(origSend) {\n                return function (data) { // preserve arity\n                    var xhr = this;\n\n                    function onreadystatechangeHandler() {\n                        if (xhr.__raven_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n                            try {\n                                // touching statusCode in some platforms throws\n                                // an exception\n                                xhr.__raven_xhr.status_code = xhr.status;\n                            } catch (e) { /* do nothing */ }\n                            self.captureBreadcrumb({\n                                type: 'http',\n                                category: 'xhr',\n                                data: xhr.__raven_xhr\n                            });\n                        }\n                    }\n\n                    var props = ['onload', 'onerror', 'onprogress'];\n                    for (var j = 0; j < props.length; j++) {\n                        wrapProp(props[j], xhr);\n                    }\n\n                    if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n                        fill(xhr, 'onreadystatechange', function (orig) {\n                            return self.wrap(orig, undefined, onreadystatechangeHandler);\n                        } /* intentionally don't track this instrumentation */);\n                    } else {\n                        // if onreadystatechange wasn't actually set by the page on this xhr, we\n                        // are free to set our own and capture the breadcrumb\n                        xhr.onreadystatechange = onreadystatechangeHandler;\n                    }\n\n                    return origSend.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        if (autoBreadcrumbs.xhr && 'fetch' in _window) {\n            fill(_window, 'fetch', function(origFetch) {\n                return function (fn, t) { // preserve arity\n                    // Make a copy of the arguments to prevent deoptimization\n                    // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n                    var args = new Array(arguments.length);\n                    for (var i = 0; i < args.length; ++i) {\n                        args[i] = arguments[i];\n                    }\n\n                    var fetchInput = args[0];\n                    var method = 'GET';\n                    var url;\n\n                    if (typeof fetchInput === 'string') {\n                        url = fetchInput;\n                    } else {\n                        url = fetchInput.url;\n                        if (fetchInput.method) {\n                            method = fetchInput.method;\n                        }\n                    }\n\n                    if (args[1] && args[1].method) {\n                        method = args[1].method;\n                    }\n\n                    var fetchData = {\n                        method: method,\n                        url: url,\n                        status_code: null\n                    };\n\n                    self.captureBreadcrumb({\n                        type: 'http',\n                        category: 'fetch',\n                        data: fetchData\n                    });\n\n                    return origFetch.apply(this, args).then(function (response) {\n                        fetchData.status_code = response.status;\n\n                        return response;\n                    });\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        if (autoBreadcrumbs.dom && this._hasDocument) {\n            if (_document.addEventListener) {\n                _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n                _document.addEventListener('keypress', self._keypressEventHandler(), false);\n            }\n            else {\n                // IE8 Compatibility\n                _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n                _document.attachEvent('onkeypress', self._keypressEventHandler());\n            }\n        }\n\n        // record navigation (URL) changes\n        // NOTE: in Chrome App environment, touching history.pushState, *even inside\n        //       a try/catch block*, will cause Chrome to output an error to console.error\n        // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n        var chrome = _window.chrome;\n        var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n        var hasPushState = !isChromePackagedApp && _window.history && history.pushState;\n        if (autoBreadcrumbs.location && hasPushState) {\n            // TODO: remove onpopstate handler on uninstall()\n            var oldOnPopState = _window.onpopstate;\n            _window.onpopstate = function () {\n                var currentHref = self._location.href;\n                self._captureUrlChange(self._lastHref, currentHref);\n\n                if (oldOnPopState) {\n                    return oldOnPopState.apply(this, arguments);\n                }\n            };\n\n            fill(history, 'pushState', function (origPushState) {\n                // note history.pushState.length is 0; intentionally not declaring\n                // params to preserve 0 arity\n                return function (/* state, title, url */) {\n                    var url = arguments.length > 2 ? arguments[2] : undefined;\n\n                    // url argument is optional\n                    if (url) {\n                        // coerce to string (this is what pushState does)\n                        self._captureUrlChange(self._lastHref, url + '');\n                    }\n\n                    return origPushState.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n            // console\n            var consoleMethodCallback = function (msg, data) {\n                self.captureBreadcrumb({\n                    message: msg,\n                    level: data.level,\n                    category: 'console'\n                });\n            };\n\n            each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n                wrapConsoleMethod(console, level, consoleMethodCallback);\n            });\n        }\n\n    },\n\n    _restoreBuiltIns: function () {\n        // restore any wrapped builtins\n        var builtin;\n        while (this._wrappedBuiltIns.length) {\n            builtin = this._wrappedBuiltIns.shift();\n\n            var obj = builtin[0],\n              name = builtin[1],\n              orig = builtin[2];\n\n            obj[name] = orig;\n        }\n    },\n\n    _drainPlugins: function() {\n        var self = this;\n\n        // FIX ME TODO\n        each(this._plugins, function(_, plugin) {\n            var installer = plugin[0];\n            var args = plugin[1];\n            installer.apply(self, [self].concat(args));\n        });\n    },\n\n    _parseDSN: function(str) {\n        var m = dsnPattern.exec(str),\n            dsn = {},\n            i = 7;\n\n        try {\n            while (i--) dsn[dsnKeys[i]] = m[i] || '';\n        } catch(e) {\n            throw new RavenConfigError('Invalid DSN: ' + str);\n        }\n\n        if (dsn.pass && !this._globalOptions.allowSecretKey) {\n            throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n        }\n\n        return dsn;\n    },\n\n    _getGlobalServer: function(uri) {\n        // assemble the endpoint from the uri pieces\n        var globalServer = '//' + uri.host +\n            (uri.port ? ':' + uri.port : '');\n\n        if (uri.protocol) {\n            globalServer = uri.protocol + ':' + globalServer;\n        }\n        return globalServer;\n    },\n\n    _handleOnErrorStackInfo: function() {\n        // if we are intentionally ignoring errors via onerror, bail out\n        if (!this._ignoreOnError) {\n            this._handleStackInfo.apply(this, arguments);\n        }\n    },\n\n    _handleStackInfo: function(stackInfo, options) {\n        var frames = this._prepareFrames(stackInfo, options);\n\n        this._triggerEvent('handle', {\n            stackInfo: stackInfo,\n            options: options\n        });\n\n        this._processException(\n            stackInfo.name,\n            stackInfo.message,\n            stackInfo.url,\n            stackInfo.lineno,\n            frames,\n            options\n        );\n    },\n\n    _prepareFrames: function(stackInfo, options) {\n        var self = this;\n        var frames = [];\n        if (stackInfo.stack && stackInfo.stack.length) {\n            each(stackInfo.stack, function(i, stack) {\n                var frame = self._normalizeFrame(stack);\n                if (frame) {\n                    frames.push(frame);\n                }\n            });\n\n            // e.g. frames captured via captureMessage throw\n            if (options && options.trimHeadFrames) {\n                for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n                    frames[j].in_app = false;\n                }\n            }\n        }\n        frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n        return frames;\n    },\n\n\n    _normalizeFrame: function(frame) {\n        if (!frame.url) return;\n\n        // normalize the frames data\n        var normalized = {\n            filename:   frame.url,\n            lineno:     frame.line,\n            colno:      frame.column,\n            'function': frame.func || '?'\n        };\n\n        normalized.in_app = !( // determine if an exception came from outside of our app\n            // first we check the global includePaths list.\n            !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n            // Now we check for fun, if the function name is Raven or TraceKit\n            /(Raven|TraceKit)\\./.test(normalized['function']) ||\n            // finally, we do a last ditch effort and check for raven.min.js\n            /raven\\.(min\\.)?js$/.test(normalized.filename)\n        );\n\n        return normalized;\n    },\n\n    _processException: function(type, message, fileurl, lineno, frames, options) {\n        var stacktrace;\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n\n        message += '';\n\n        if (frames && frames.length) {\n            fileurl = frames[0].filename || fileurl;\n            // Sentry expects frames oldest to newest\n            // and JS sends them as newest to oldest\n            frames.reverse();\n            stacktrace = {frames: frames};\n        } else if (fileurl) {\n            stacktrace = {\n                frames: [{\n                    filename: fileurl,\n                    lineno: lineno,\n                    in_app: true\n                }]\n            };\n        }\n\n        if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n        if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n\n        var data = objectMerge({\n            // sentry.interfaces.Exception\n            exception: {\n                values: [{\n                    type: type,\n                    value: message,\n                    stacktrace: stacktrace\n                }]\n            },\n            culprit: fileurl\n        }, options);\n\n        // Fire away!\n        this._send(data);\n    },\n\n    _trimPacket: function(data) {\n        // For now, we only want to truncate the two different messages\n        // but this could/should be expanded to just trim everything\n        var max = this._globalOptions.maxMessageLength;\n        if (data.message) {\n            data.message = truncate(data.message, max);\n        }\n        if (data.exception) {\n            var exception = data.exception.values[0];\n            exception.value = truncate(exception.value, max);\n        }\n\n        var request = data.request;\n        if (request) {\n            if (request.url) {\n                request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n            }\n            if (request.Referer) {\n                request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n            }\n        }\n\n        if (data.breadcrumbs && data.breadcrumbs.values)\n            this._trimBreadcrumbs(data.breadcrumbs);\n\n        return data;\n    },\n\n    /**\n     * Truncate breadcrumb values (right now just URLs)\n     */\n    _trimBreadcrumbs: function (breadcrumbs) {\n        // known breadcrumb properties with urls\n        // TODO: also consider arbitrary prop values that start with (https?)?://\n        var urlProps = ['to', 'from', 'url'],\n            urlProp,\n            crumb,\n            data;\n\n        for (var i = 0; i < breadcrumbs.values.length; ++i) {\n            crumb = breadcrumbs.values[i];\n            if (!crumb.hasOwnProperty('data') || !isObject(crumb.data))\n                continue;\n\n            data = crumb.data;\n            for (var j = 0; j < urlProps.length; ++j) {\n                urlProp = urlProps[j];\n                if (data.hasOwnProperty(urlProp)) {\n                    data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n                }\n            }\n        }\n    },\n\n    _getHttpData: function() {\n        if (!this._hasNavigator && !this._hasDocument) return;\n        var httpData = {};\n\n        if (this._hasNavigator && _navigator.userAgent) {\n            httpData.headers = {\n              'User-Agent': navigator.userAgent\n            };\n        }\n\n        if (this._hasDocument) {\n            if (_document.location && _document.location.href) {\n                httpData.url = _document.location.href;\n            }\n            if (_document.referrer) {\n                if (!httpData.headers) httpData.headers = {};\n                httpData.headers.Referer = _document.referrer;\n            }\n        }\n\n        return httpData;\n    },\n\n    _resetBackoff: function() {\n        this._backoffDuration = 0;\n        this._backoffStart = null;\n    },\n\n    _shouldBackoff: function() {\n        return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n    },\n\n    /**\n     * Returns true if the in-process data payload matches the signature\n     * of the previously-sent data\n     *\n     * NOTE: This has to be done at this level because TraceKit can generate\n     *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n     *       other old browsers). This can take the form of an \"exception\"\n     *       data object with a single frame (derived from the onerror args).\n     */\n    _isRepeatData: function (current) {\n        var last = this._lastData;\n\n        if (!last ||\n            current.message !== last.message || // defined for captureMessage\n            current.culprit !== last.culprit)   // defined for captureException/onerror\n            return false;\n\n        // Stacktrace interface (i.e. from captureMessage)\n        if (current.stacktrace || last.stacktrace) {\n            return isSameStacktrace(current.stacktrace, last.stacktrace);\n        }\n        // Exception interface (i.e. from captureException/onerror)\n        else if (current.exception || last.exception) {\n            return isSameException(current.exception, last.exception);\n        }\n\n        return true;\n    },\n\n    _setBackoffState: function(request) {\n        // If we are already in a backoff state, don't change anything\n        if (this._shouldBackoff()) {\n            return;\n        }\n\n        var status = request.status;\n\n        // 400 - project_id doesn't exist or some other fatal\n        // 401 - invalid/revoked dsn\n        // 429 - too many requests\n        if (!(status === 400 || status === 401 || status === 429))\n            return;\n\n        var retry;\n        try {\n            // If Retry-After is not in Access-Control-Expose-Headers, most\n            // browsers will throw an exception trying to access it\n            retry = request.getResponseHeader('Retry-After');\n            retry = parseInt(retry, 10) * 1000; // Retry-After is returned in seconds\n        } catch (e) {\n            /* eslint no-empty:0 */\n        }\n\n\n        this._backoffDuration = retry\n            // If Sentry server returned a Retry-After value, use it\n            ? retry\n            // Otherwise, double the last backoff duration (starts at 1 sec)\n            : this._backoffDuration * 2 || 1000;\n\n        this._backoffStart = now();\n    },\n\n    _send: function(data) {\n        var globalOptions = this._globalOptions;\n\n        var baseData = {\n            project: this._globalProject,\n            logger: globalOptions.logger,\n            platform: 'javascript'\n        }, httpData = this._getHttpData();\n\n        if (httpData) {\n            baseData.request = httpData;\n        }\n\n        // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n        if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n        data = objectMerge(baseData, data);\n\n        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n        data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n        data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n        // Send along our own collected metadata with extra\n        data.extra['session:duration'] = now() - this._startTime;\n\n        if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n            // intentionally make shallow copy so that additions\n            // to breadcrumbs aren't accidentally sent in this request\n            data.breadcrumbs = {\n                values: [].slice.call(this._breadcrumbs, 0)\n            };\n        }\n\n        // If there are no tags/extra, strip the key from the payload alltogther.\n        if (isEmptyObject(data.tags)) delete data.tags;\n\n        if (this._globalContext.user) {\n            // sentry.interfaces.User\n            data.user = this._globalContext.user;\n        }\n\n        // Include the environment if it's defined in globalOptions\n        if (globalOptions.environment) data.environment = globalOptions.environment;\n\n        // Include the release if it's defined in globalOptions\n        if (globalOptions.release) data.release = globalOptions.release;\n\n        // Include server_name if it's defined in globalOptions\n        if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n        if (isFunction(globalOptions.dataCallback)) {\n            data = globalOptions.dataCallback(data) || data;\n        }\n\n        // Why??????????\n        if (!data || isEmptyObject(data)) {\n            return;\n        }\n\n        // Check if the request should be filtered or not\n        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n            return;\n        }\n\n        // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n        // so drop requests until \"cool-off\" period has elapsed.\n        if (this._shouldBackoff()) {\n            this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n            return;\n        }\n\n        if (typeof globalOptions.sampleRate === 'number') {\n            if (Math.random() < globalOptions.sampleRate) {\n                this._sendProcessedPayload(data);\n            }\n        } else {\n            this._sendProcessedPayload(data);\n        }\n    },\n\n    _getUuid: function () {\n      return uuid4();\n    },\n\n    _sendProcessedPayload: function(data, callback) {\n        var self = this;\n        var globalOptions = this._globalOptions;\n\n        if (!this.isSetup()) return;\n\n        // Send along an event_id if not explicitly passed.\n        // This event_id can be used to reference the error within Sentry itself.\n        // Set lastEventId after we know the error should actually be sent\n        this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n        // Try and clean up the packet before sending by truncating long values\n        data = this._trimPacket(data);\n\n        // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n        // but this would require copying an un-truncated copy of the data packet, which can be\n        // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n        if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n            this._logDebug('warn', 'Raven dropped repeat event: ', data);\n            return;\n        }\n\n        // Store outbound payload after trim\n        this._lastData = data;\n\n        this._logDebug('debug', 'Raven about to send:', data);\n\n        var auth = {\n            sentry_version: '7',\n            sentry_client: 'raven-js/' + this.VERSION,\n            sentry_key: this._globalKey\n        };\n        if (this._globalSecret) {\n            auth.sentry_secret = this._globalSecret;\n        }\n\n        var exception = data.exception && data.exception.values[0];\n        this.captureBreadcrumb({\n            category: 'sentry',\n            message: exception\n                ? (exception.type ? exception.type + ': ' : '') + exception.value\n                : data.message,\n            event_id: data.event_id,\n            level: data.level || 'error' // presume error unless specified\n        });\n\n        var url = this._globalEndpoint;\n        (globalOptions.transport || this._makeRequest).call(this, {\n            url: url,\n            auth: auth,\n            data: data,\n            options: globalOptions,\n            onSuccess: function success() {\n                self._resetBackoff();\n\n                self._triggerEvent('success', {\n                    data: data,\n                    src: url\n                });\n                callback && callback();\n            },\n            onError: function failure(error) {\n                self._logDebug('error', 'Raven transport failed to send: ', error);\n\n                if (error.request) {\n                    self._setBackoffState(error.request);\n                }\n\n                self._triggerEvent('failure', {\n                    data: data,\n                    src: url\n                });\n                error = error || new Error('Raven send failed (no additional details provided)');\n                callback && callback(error);\n            }\n        });\n    },\n\n    _makeRequest: function(opts) {\n        var request = new XMLHttpRequest();\n\n        // if browser doesn't support CORS (e.g. IE7), we are out of luck\n        var hasCORS =\n            'withCredentials' in request ||\n            typeof XDomainRequest !== 'undefined';\n\n        if (!hasCORS) return;\n\n        var url = opts.url;\n\n        if ('withCredentials' in request) {\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                } else if (request.status === 200) {\n                    opts.onSuccess && opts.onSuccess();\n                } else if (opts.onError) {\n                    var err = new Error('Sentry error code: ' + request.status);\n                    err.request = request;\n                    opts.onError(err);\n                }\n            };\n        } else {\n            request = new XDomainRequest();\n            // xdomainrequest cannot go http -> https (or vice versa),\n            // so always use protocol relative\n            url = url.replace(/^https?:/, '');\n\n            // onreadystatechange not supported by XDomainRequest\n            if (opts.onSuccess) {\n                request.onload = opts.onSuccess;\n            }\n            if (opts.onError) {\n                request.onerror = function () {\n                    var err = new Error('Sentry error code: XDomainRequest');\n                    err.request = request;\n                    opts.onError(err);\n                }\n            }\n        }\n\n        // NOTE: auth is intentionally sent as part of query string (NOT as custom\n        //       HTTP header) so as to avoid preflight CORS requests\n        request.open('POST', url + '?' + urlencode(opts.auth));\n        request.send(stringify(opts.data));\n    },\n\n    _logDebug: function(level) {\n        if (this._originalConsoleMethods[level] && this.debug) {\n            // In IE<10 console methods do not have their own 'apply' method\n            Function.prototype.apply.call(\n                this._originalConsoleMethods[level],\n                this._originalConsole,\n                [].slice.call(arguments, 1)\n            );\n        }\n    },\n\n    _mergeContext: function(key, context) {\n        if (isUndefined(context)) {\n            delete this._globalContext[key];\n        } else {\n            this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n        }\n    }\n};\n\n/*------------------------------------------------\n * utils\n *\n * conditionally exported for test via Raven.utils\n =================================================\n */\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n    return what === void 0;\n}\n\nfunction isFunction(what) {\n    return typeof what === 'function';\n}\n\nfunction isString(what) {\n    return objectPrototype.toString.call(what) === '[object String]';\n}\n\n\nfunction isEmptyObject(what) {\n    for (var _ in what) return false;  // eslint-disable-line guard-for-in, no-unused-vars\n    return true;\n}\n\nfunction each(obj, callback) {\n    var i, j;\n\n    if (isUndefined(obj.length)) {\n        for (i in obj) {\n            if (hasKey(obj, i)) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    } else {\n        j = obj.length;\n        if (j) {\n            for (i = 0; i < j; i++) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    }\n}\n\nfunction objectMerge(obj1, obj2) {\n    if (!obj2) {\n        return obj1;\n    }\n    each(obj2, function(key, value){\n        obj1[key] = value;\n    });\n    return obj1;\n}\n\nfunction truncate(str, max) {\n    return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n    return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n    // Combine an array of regular expressions and strings into one large regexp\n    // Be mad.\n    var sources = [],\n        i = 0, len = patterns.length,\n        pattern;\n\n    for (; i < len; i++) {\n        pattern = patterns[i];\n        if (isString(pattern)) {\n            // If it's a string, we need to escape it\n            // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n            sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n        } else if (pattern && pattern.source) {\n            // If it's a regexp already, we want to extract the source\n            sources.push(pattern.source);\n        }\n        // Intentionally skip other cases\n    }\n    return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n    var pairs = [];\n    each(o, function(key, value) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    });\n    return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) return {};\n\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        protocol: match[2],\n        host: match[4],\n        path: match[5],\n        relative: match[5] + query + fragment // everything minus origin\n    };\n}\nfunction uuid4() {\n    var crypto = _window.crypto || _window.msCrypto;\n\n    if (!isUndefined(crypto) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n\n        // set 4 in byte 7\n        arr[3] = arr[3] & 0xFFF | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n        var pad = function(num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = '0' + v;\n            }\n            return v;\n        };\n\n        return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n        pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    } else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0,\n                v = c === 'x' ? r : r&0x3|0x8;\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n    /* eslint no-extra-parens:0*/\n    var MAX_TRAVERSE_HEIGHT = 5,\n        MAX_OUTPUT_LEN = 80,\n        out = [],\n        height = 0,\n        len = 0,\n        separator = ' > ',\n        sepLength = separator.length,\n        nextStr;\n\n    while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n\n        nextStr = htmlElementAsString(elem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\n            break;\n        }\n\n        out.push(nextStr);\n\n        len += nextStr.length;\n        elem = elem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n    var out = [],\n        className,\n        classes,\n        key,\n        attr,\n        i;\n\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push('#' + elem.id);\n    }\n\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push('.' + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push('[' + key + '=\"' + attr + '\"]');\n        }\n    }\n    return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n    return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n    if (isOnlyOneTruthy(ex1, ex2))\n        return false;\n\n    ex1 = ex1.values[0];\n    ex2 = ex2.values[0];\n\n    if (ex1.type !== ex2.type ||\n        ex1.value !== ex2.value)\n        return false;\n\n    return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n    if (isOnlyOneTruthy(stack1, stack2))\n        return false;\n\n    var frames1 = stack1.frames;\n    var frames2 = stack2.frames;\n\n    // Exit early if frame count differs\n    if (frames1.length !== frames2.length)\n        return false;\n\n    // Iterate through every frame; bail out if anything differs\n    var a, b;\n    for (var i = 0; i < frames1.length; i++) {\n        a = frames1[i];\n        b = frames2[i];\n        if (a.filename !== b.filename ||\n            a.lineno !== b.lineno ||\n            a.colno !== b.colno ||\n            a['function'] !== b['function'])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n    var orig = obj[name];\n    obj[name] = replacement(orig);\n    if (track) {\n        track.push([obj, name, orig]);\n    }\n}\n\nif (typeof __DEV__ !== 'undefined' && __DEV__) {\n    Raven.utils = {\n        isUndefined: isUndefined,\n        isFunction: isFunction,\n        isString: isString,\n        isObject: isObject,\n        isEmptyObject: isEmptyObject,\n        isError: isError,\n        each: each,\n        objectMerge: objectMerge,\n        truncate: truncate,\n        hasKey: hasKey,\n        joinRegExp: joinRegExp,\n        urlencode: urlencode,\n        uuid4: uuid4,\n        htmlTreeAsString: htmlTreeAsString,\n        htmlElementAsString: htmlElementAsString,\n        parseUrl: parseUrl,\n        fill: fill\n    };\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n"]}]}