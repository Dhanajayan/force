{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js","mtime":1522346108000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport * as React from 'react';\nimport ChannelMemberQuery from \"../queries/channelMember\";\nimport PropTypes from 'prop-types';\nimport { positronql as _positronql } from \"../../../lib/positronql\";\nimport styled from 'styled-components';\nimport { data as _sd } from 'sharify';\nimport { pluck, contains } from 'underscore'; // FIXME: Rewire\n\nvar sd = _sd;\nvar positronql = _positronql;\nexport var EditButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditButton, _React$Component);\n\n  function EditButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      hasButtonState: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userId, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = sd.CURRENT_USER && sd.CURRENT_USER.id;\n\n              if (userId) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", _this.setState({\n                showEditButton: false,\n                hasButtonState: true\n              }));\n\n            case 3:\n              _context.next = 5;\n              return positronql({\n                query: ChannelMemberQuery(userId)\n              });\n\n            case 5:\n              data = _context.sent;\n\n              if (contains(pluck(data.channels, 'id'), _this.props.channelId)) {\n                _this.setState({\n                  showEditButton: true,\n                  hasButtonState: true\n                });\n              } else {\n                _this.setState({\n                  showEditButton: false,\n                  hasButtonState: true\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n\n    return _this;\n  }\n\n  _createClass(EditButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          hasButtonState = _this$state.hasButtonState,\n          showEditButton = _this$state.showEditButton;\n      var _this$props = this.props,\n          positionTop = _this$props.positionTop,\n          slug = _this$props.slug;\n\n      if (!hasButtonState || !showEditButton) {\n        return false;\n      } else {\n        return React.createElement(StyledEditButton, {\n          target: \"_blank\",\n          href: \"\".concat(sd.POSITRON_URL, \"/articles/\").concat(slug, \"/edit\"),\n          positionTop: positionTop\n        }, React.createElement(\"i\", {\n          className: \"icon-with-black-circle icon-edit\"\n        }));\n      }\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    value: function __reactstandin__regenerateByEval(key, code) {\n      this[key] = eval(code);\n    }\n  }]);\n\n  return EditButton;\n}(React.Component);\n\n_defineProperty(EditButton, \"propTypes\", {\n  channelId: PropTypes.string,\n  slug: PropTypes.string,\n  positionTop: PropTypes.number\n});\n\nvar StyledEditButton =\n/*#__PURE__*/\nstyled.a.withConfig({\n  displayName: \"EditButton__StyledEditButton\",\n  componentId: \"s1oupfmt-0\"\n})([\"top:\", \";position:fixed;right:20px;\"], function (props) {\n  return props.positionTop ? \"\".concat(props.positionTop, \"px\") : \"75px\";\n});\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(sd, \"sd\", \"/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js\");\n  reactHotLoader.register(positronql, \"positronql\", \"/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js\");\n  reactHotLoader.register(EditButton, \"EditButton\", \"/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js\");\n  reactHotLoader.register(StyledEditButton, \"StyledEditButton\", \"/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/article/components/EditButton.js"],"names":["React","ChannelMemberQuery","PropTypes","positronql","_positronql","styled","data","_sd","pluck","contains","sd","EditButton","hasButtonState","userId","CURRENT_USER","id","setState","showEditButton","query","channels","props","channelId","state","positionTop","slug","POSITRON_URL","Component","string","number","StyledEditButton","a"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport ChannelMemberQuery from 'desktop/apps/article/queries/channelMember'\nimport PropTypes from 'prop-types'\nimport { positronql as _positronql } from 'desktop/lib/positronql'\nimport styled from 'styled-components'\nimport { data as _sd } from 'sharify'\nimport { pluck, contains } from 'underscore'\n\n// FIXME: Rewire\nlet sd = _sd\nlet positronql = _positronql\n\nexport class EditButton extends React.Component {\n  static propTypes = {\n    channelId: PropTypes.string,\n    slug: PropTypes.string,\n    positionTop: PropTypes.number,\n  }\n\n  state = {\n    hasButtonState: false,\n  }\n\n  componentDidMount = async () => {\n    const userId = sd.CURRENT_USER && sd.CURRENT_USER.id\n    if (!userId) {\n      return this.setState({ showEditButton: false, hasButtonState: true })\n    }\n    const data = await positronql({ query: ChannelMemberQuery(userId) })\n    if (contains(pluck(data.channels, 'id'), this.props.channelId)) {\n      this.setState({ showEditButton: true, hasButtonState: true })\n    } else {\n      this.setState({ showEditButton: false, hasButtonState: true })\n    }\n  }\n\n  render() {\n    const { hasButtonState, showEditButton } = this.state\n    const { positionTop, slug } = this.props\n\n    if (!hasButtonState || !showEditButton) {\n      return false\n    } else {\n      return (\n        <StyledEditButton\n          target=\"_blank\"\n          href={`${sd.POSITRON_URL}/articles/${slug}/edit`}\n          positionTop={positionTop}\n        >\n          <i className=\"icon-with-black-circle icon-edit\" />\n        </StyledEditButton>\n      )\n    }\n  }\n}\n\nconst StyledEditButton = styled.a`\n  top: ${(props) => (props.positionTop ? `${props.positionTop}px` : `75px`)};\n  position: fixed;\n  right: 20px;\n`\n"]}]}