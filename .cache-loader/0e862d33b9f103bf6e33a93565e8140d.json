{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js","mtime":1537287041000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { formattedLocation } from \"../../helpers\";\nimport { makeDescribeWorkDesktop } from \"../describe_work_desktop\";\nimport { makeDescribeWorkMobile } from \"../describe_work_mobile\";\nimport { isEmpty, pick } from 'underscore';\n\nfunction DescribeWorkContainer(props) {\n  var isMobile = props.isMobile,\n      phone = props.phone,\n      submission = props.submission;\n  var location = formattedLocation(submission.location_city, submission.location_state, submission.location_country);\n  var populatedSubmission = isEmpty(submission) ? {\n    signature: true,\n    authenticity_certificate: true,\n    phone: phone\n  } : _objectSpread({}, submission, {\n    location: location,\n    phone: phone\n  });\n  var relevantInputs = pick(populatedSubmission, 'artist_id', 'authenticity_certificate', 'category', 'depth', 'dimensions_metric', 'edition', 'edition_number', 'edition_size', 'height', 'id', 'location', 'medium', 'minimum_price_dollars', 'phone', 'provenance', 'signature', 'title', 'width', 'year');\n  var DescribeWorkForm = isMobile ? makeDescribeWorkMobile(relevantInputs) : makeDescribeWorkDesktop(relevantInputs);\n  return React.createElement(DescribeWorkForm, null);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isMobile: state.submissionFlow.isMobile,\n    phone: state.submissionFlow.user.phone,\n    submission: state.submissionFlow.submission\n  };\n};\n\nvar _default = connect(mapStateToProps)(DescribeWorkContainer);\n\nexport default _default;\nDescribeWorkContainer.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  phone: PropTypes.string,\n  submission: PropTypes.object\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DescribeWorkContainer, \"DescribeWorkContainer\", \"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_container/index.js"],"names":["PropTypes","React","connect","formattedLocation","makeDescribeWorkDesktop","makeDescribeWorkMobile","isEmpty","pick","DescribeWorkContainer","props","isMobile","phone","submission","location","location_city","location_state","location_country","populatedSubmission","signature","authenticity_certificate","relevantInputs","DescribeWorkForm","mapStateToProps","state","submissionFlow","user","propTypes","bool","isRequired","string","object"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT;AACA,SAASC,uBAAT;AACA,SAASC,sBAAT;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,YAA9B;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA,MAC5BC,QAD4B,GACID,KADJ,CAC5BC,QAD4B;AAAA,MAClBC,KADkB,GACIF,KADJ,CAClBE,KADkB;AAAA,MACXC,UADW,GACIH,KADJ,CACXG,UADW;AAEpC,MAAMC,QAAQ,GAAGV,iBAAiB,CAChCS,UAAU,CAACE,aADqB,EAEhCF,UAAU,CAACG,cAFqB,EAGhCH,UAAU,CAACI,gBAHqB,CAAlC;AAKA,MAAMC,mBAAmB,GAAGX,OAAO,CAACM,UAAD,CAAP,GACxB;AAAEM,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,wBAAwB,EAAE,IAA7C;AAAmDR,IAAAA,KAAK,EAALA;AAAnD,GADwB,qBAEnBC,UAFmB;AAEPC,IAAAA,QAAQ,EAARA,QAFO;AAEGF,IAAAA,KAAK,EAALA;AAFH,IAA5B;AAGA,MAAMS,cAAc,GAAGb,IAAI,CACzBU,mBADyB,EAEzB,WAFyB,EAGzB,0BAHyB,EAIzB,UAJyB,EAKzB,OALyB,EAMzB,mBANyB,EAOzB,SAPyB,EAQzB,gBARyB,EASzB,cATyB,EAUzB,QAVyB,EAWzB,IAXyB,EAYzB,UAZyB,EAazB,QAbyB,EAczB,uBAdyB,EAezB,OAfyB,EAgBzB,YAhByB,EAiBzB,WAjByB,EAkBzB,OAlByB,EAmBzB,OAnByB,EAoBzB,MApByB,CAA3B;AAuBA,MAAMI,gBAAgB,GAAGX,QAAQ,GAC7BL,sBAAsB,CAACe,cAAD,CADO,GAE7BhB,uBAAuB,CAACgB,cAAD,CAF3B;AAIA,SAAO,oBAAC,gBAAD,OAAP;AACD;;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLb,IAAAA,QAAQ,EAAEa,KAAK,CAACC,cAAN,CAAqBd,QAD1B;AAELC,IAAAA,KAAK,EAAEY,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0Bd,KAF5B;AAGLC,IAAAA,UAAU,EAAEW,KAAK,CAACC,cAAN,CAAqBZ;AAH5B,GAAP;AAKD,CAND;;eAQeV,OAAO,CAACoB,eAAD,CAAP,CAAyBd,qBAAzB,C;;AAAf;AAEAA,qBAAqB,CAACkB,SAAtB,GAAkC;AAChChB,EAAAA,QAAQ,EAAEV,SAAS,CAAC2B,IAAV,CAAeC,UADO;AAEhCjB,EAAAA,KAAK,EAAEX,SAAS,CAAC6B,MAFe;AAGhCjB,EAAAA,UAAU,EAAEZ,SAAS,CAAC8B;AAHU,CAAlC;;;;;;;;;;;;0BAlDStB,qB;0BAwCHc,e","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { formattedLocation } from '../../helpers'\nimport { makeDescribeWorkDesktop } from '../describe_work_desktop'\nimport { makeDescribeWorkMobile } from '../describe_work_mobile'\nimport { isEmpty, pick } from 'underscore'\n\nfunction DescribeWorkContainer(props) {\n  const { isMobile, phone, submission } = props\n  const location = formattedLocation(\n    submission.location_city,\n    submission.location_state,\n    submission.location_country\n  )\n  const populatedSubmission = isEmpty(submission)\n    ? { signature: true, authenticity_certificate: true, phone }\n    : { ...submission, location, phone }\n  const relevantInputs = pick(\n    populatedSubmission,\n    'artist_id',\n    'authenticity_certificate',\n    'category',\n    'depth',\n    'dimensions_metric',\n    'edition',\n    'edition_number',\n    'edition_size',\n    'height',\n    'id',\n    'location',\n    'medium',\n    'minimum_price_dollars',\n    'phone',\n    'provenance',\n    'signature',\n    'title',\n    'width',\n    'year'\n  )\n\n  const DescribeWorkForm = isMobile\n    ? makeDescribeWorkMobile(relevantInputs)\n    : makeDescribeWorkDesktop(relevantInputs)\n\n  return <DescribeWorkForm />\n}\n\nconst mapStateToProps = state => {\n  return {\n    isMobile: state.submissionFlow.isMobile,\n    phone: state.submissionFlow.user.phone,\n    submission: state.submissionFlow.submission,\n  }\n}\n\nexport default connect(mapStateToProps)(DescribeWorkContainer)\n\nDescribeWorkContainer.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  phone: PropTypes.string,\n  submission: PropTypes.object,\n}\n"]}]}