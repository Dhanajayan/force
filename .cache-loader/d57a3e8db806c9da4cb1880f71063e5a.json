{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/node_modules/enquire.js/src/Util.js","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/node_modules/enquire.js/src/Util.js","mtime":1489491793000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1526592628000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n  var i = 0,\n      length = collection.length,\n      cont;\n\n  for (i; i < length; i++) {\n    cont = fn(collection[i], i);\n\n    if (cont === false) {\n      break; //allow early exit\n    }\n  }\n}\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\n\n\nfunction isArray(target) {\n  return Object.prototype.toString.apply(target) === '[object Array]';\n}\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\n\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nmodule.exports = {\n  isFunction: isFunction,\n  isArray: isArray,\n  each: each\n};",{"version":3,"sources":["node_modules/@artsy/reaction/node_modules/enquire.js/src/Util.js"],"names":["each","collection","fn","i","length","cont","isArray","target","Object","prototype","toString","apply","isFunction","module","exports"],"mappings":"AAAA;;;;;;AAMA,SAASA,IAAT,CAAcC,UAAd,EAA0BC,EAA1B,EAA8B;AAC1B,MAAIC,IAAS,CAAb;AAAA,MACIC,SAASH,WAAWG,MADxB;AAAA,MAEIC,IAFJ;;AAIA,OAAIF,CAAJ,EAAOA,IAAIC,MAAX,EAAmBD,GAAnB,EAAwB;AACpBE,WAAOH,GAAGD,WAAWE,CAAX,CAAH,EAAkBA,CAAlB,CAAP;;AACA,QAAGE,SAAS,KAAZ,EAAmB;AACf,YADe,CACR;AACV;AACJ;AACJ;AAED;;;;;;;;AAMA,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,SAAOC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,KAA1B,CAAgCJ,MAAhC,MAA4C,gBAAnD;AACH;AAED;;;;;;;;AAMA,SAASK,UAAT,CAAoBL,MAApB,EAA4B;AACxB,SAAO,OAAOA,MAAP,KAAkB,UAAzB;AACH;;AAEDM,OAAOC,OAAP,GAAiB;AACbF,cAAaA,UADA;AAEbN,WAAUA,OAFG;AAGbN,QAAOA;AAHM,CAAjB","file":"/Users/eve/development/force/node_modules/@artsy/reaction/node_modules/enquire.js/src/Util.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n    var i      = 0,\n        length = collection.length,\n        cont;\n\n    for(i; i < length; i++) {\n        cont = fn(collection[i], i);\n        if(cont === false) {\n            break; //allow early exit\n        }\n    }\n}\n\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\nfunction isArray(target) {\n    return Object.prototype.toString.apply(target) === '[object Array]';\n}\n\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\n\nmodule.exports = {\n    isFunction : isFunction,\n    isArray : isArray,\n    each : each\n};\n"]}]}