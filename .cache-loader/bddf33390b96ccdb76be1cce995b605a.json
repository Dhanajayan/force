{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/mailcheck/src/mailcheck.js","dependencies":[{"path":"/Users/eve/development/force/node_modules/mailcheck/src/mailcheck.js","mtime":1436080856000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/*\n * Mailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.1\n */\nvar Mailcheck = {\n  domainThreshold: 2,\n  secondLevelThreshold: 2,\n  topLevelThreshold: 2,\n  defaultDomains: ['msn.com', 'bellsouth.net', 'telus.net', 'comcast.net', 'optusnet.com.au', 'earthlink.net', 'qq.com', 'sky.com', 'icloud.com', 'mac.com', 'sympatico.ca', 'googlemail.com', 'att.net', 'xtra.co.nz', 'web.de', 'cox.net', 'gmail.com', 'ymail.com', 'aim.com', 'rogers.com', 'verizon.net', 'rocketmail.com', 'google.com', 'optonline.net', 'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com', 'charter.net', 'shaw.ca'],\n  defaultSecondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n  defaultTopLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\", \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\", \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\", \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\"],\n  run: function run(opts) {\n    opts.domains = opts.domains || Mailcheck.defaultDomains;\n    opts.secondLevelDomains = opts.secondLevelDomains || Mailcheck.defaultSecondLevelDomains;\n    opts.topLevelDomains = opts.topLevelDomains || Mailcheck.defaultTopLevelDomains;\n    opts.distanceFunction = opts.distanceFunction || Mailcheck.sift3Distance;\n\n    var defaultCallback = function defaultCallback(result) {\n      return result;\n    };\n\n    var suggestedCallback = opts.suggested || defaultCallback;\n    var emptyCallback = opts.empty || defaultCallback;\n    var result = Mailcheck.suggest(Mailcheck.encodeEmail(opts.email), opts.domains, opts.secondLevelDomains, opts.topLevelDomains, opts.distanceFunction);\n    return result ? suggestedCallback(result) : emptyCallback();\n  },\n  suggest: function suggest(email, domains, secondLevelDomains, topLevelDomains, distanceFunction) {\n    email = email.toLowerCase();\n    var emailParts = this.splitEmail(email);\n\n    if (secondLevelDomains && topLevelDomains) {\n      // If the email is a valid 2nd-level + top-level, do not suggest anything.\n      if (secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n        return false;\n      }\n    }\n\n    var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction, this.domainThreshold);\n\n    if (closestDomain) {\n      if (closestDomain == emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return false;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return {\n          address: emailParts.address,\n          domain: closestDomain,\n          full: emailParts.address + \"@\" + closestDomain\n        };\n      }\n    } // The email address does not closely match one of the supplied domains\n\n\n    var closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, secondLevelDomains, distanceFunction, this.secondLevelThreshold);\n    var closestTopLevelDomain = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains, distanceFunction, this.topLevelThreshold);\n\n    if (emailParts.domain) {\n      var closestDomain = emailParts.domain;\n      var rtrn = false;\n\n      if (closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if (closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.topLevelDomain, closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn == true) {\n        return {\n          address: emailParts.address,\n          domain: closestDomain,\n          full: emailParts.address + \"@\" + closestDomain\n        };\n      }\n    }\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n\n\n    return false;\n  },\n  findClosestDomain: function findClosestDomain(domain, domains, distanceFunction, threshold) {\n    threshold = threshold || this.topLevelThreshold;\n    var dist;\n    var minDist = 99;\n    var closestDomain = null;\n\n    if (!domain || !domains) {\n      return false;\n    }\n\n    if (!distanceFunction) {\n      distanceFunction = this.sift3Distance;\n    }\n\n    for (var i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n\n      dist = distanceFunction(domain, domains[i]);\n\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return false;\n    }\n  },\n  sift3Distance: function sift3Distance(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n      if (s2 == null || s2.length === 0) {\n        return 0;\n      } else {\n        return s2.length;\n      }\n    }\n\n    if (s2 == null || s2.length === 0) {\n      return s1.length;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 5;\n\n    while (c + offset1 < s1.length && c + offset2 < s2.length) {\n      if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n        lcs++;\n      } else {\n        offset1 = 0;\n        offset2 = 0;\n\n        for (var i = 0; i < maxOffset; i++) {\n          if (c + i < s1.length && s1.charAt(c + i) == s2.charAt(c)) {\n            offset1 = i;\n            break;\n          }\n\n          if (c + i < s2.length && s1.charAt(c) == s2.charAt(c + i)) {\n            offset2 = i;\n            break;\n          }\n        }\n      }\n\n      c++;\n    }\n\n    return (s1.length + s2.length) / 2 - lcs;\n  },\n  splitEmail: function splitEmail(email) {\n    var parts = email.trim().split('@');\n\n    if (parts.length < 2) {\n      return false;\n    }\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === '') {\n        return false;\n      }\n    }\n\n    var domain = parts.pop();\n    var domainParts = domain.split('.');\n    var sld = '';\n    var tld = '';\n\n    if (domainParts.length == 0) {\n      // The address does not have a top-level domain\n      return false;\n    } else if (domainParts.length == 1) {\n      // The address has only a top-level domain (valid under RFC)\n      tld = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      sld = domainParts[0];\n\n      for (var i = 1; i < domainParts.length; i++) {\n        tld += domainParts[i] + '.';\n      }\n\n      tld = tld.substring(0, tld.length - 1);\n    }\n\n    return {\n      topLevelDomain: tld,\n      secondLevelDomain: sld,\n      domain: domain,\n      address: parts.join('@')\n    };\n  },\n  // Encode the email address to prevent XSS but leave in valid\n  // characters, following this official spec:\n  // http://en.wikipedia.org/wiki/Email_address#Syntax\n  encodeEmail: function encodeEmail(email) {\n    var result = encodeURI(email);\n    result = result.replace('%20', ' ').replace('%25', '%').replace('%5E', '^').replace('%60', '`').replace('%7B', '{').replace('%7C', '|').replace('%7D', '}');\n    return result;\n  }\n}; // Export the mailcheck object if we're in a CommonJS env (e.g. Node).\n// Modeled off of Underscore.js.\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Mailcheck;\n} // Support AMD style definitions\n// Based on jQuery (see http://stackoverflow.com/a/17954882/1322410)\n\n\nif (typeof define === \"function\" && define.amd) {\n  define(\"mailcheck\", [], function () {\n    return Mailcheck;\n  });\n}\n\nif (typeof window !== 'undefined' && window.jQuery) {\n  (function ($) {\n    $.fn.mailcheck = function (opts) {\n      var self = this;\n\n      if (opts.suggested) {\n        var oldSuggested = opts.suggested;\n\n        opts.suggested = function (result) {\n          oldSuggested(self, result);\n        };\n      }\n\n      if (opts.empty) {\n        var oldEmpty = opts.empty;\n\n        opts.empty = function () {\n          oldEmpty.call(null, self);\n        };\n      }\n\n      opts.email = this.val();\n      Mailcheck.run(opts);\n    };\n  })(jQuery);\n}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Mailcheck, \"Mailcheck\", \"/Users/eve/development/force/node_modules/mailcheck/src/mailcheck.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["node_modules/mailcheck/src/mailcheck.js"],"names":["Mailcheck","domainThreshold","secondLevelThreshold","topLevelThreshold","defaultDomains","defaultSecondLevelDomains","defaultTopLevelDomains","run","opts","domains","secondLevelDomains","topLevelDomains","distanceFunction","sift3Distance","defaultCallback","result","suggestedCallback","suggested","emptyCallback","empty","suggest","encodeEmail","email","toLowerCase","emailParts","splitEmail","indexOf","secondLevelDomain","topLevelDomain","closestDomain","findClosestDomain","domain","address","full","closestSecondLevelDomain","closestTopLevelDomain","rtrn","replace","threshold","dist","minDist","i","length","s1","s2","c","offset1","offset2","lcs","maxOffset","charAt","parts","trim","split","pop","domainParts","sld","tld","substring","join","encodeURI","module","exports","define","amd","window","jQuery","$","fn","mailcheck","self","oldSuggested","oldEmpty","call","val"],"mappings":";;;;;;AAAA;;;;;;;;;AAUA,IAAIA,YAAY;AACdC,mBAAiB,CADH;AAEdC,wBAAsB,CAFR;AAGdC,qBAAmB,CAHL;AAKdC,kBAAgB,CAAC,SAAD,EAAY,eAAZ,EACd,WADc,EACD,aADC,EACc,iBADd,EAEd,eAFc,EAEG,QAFH,EAEa,SAFb,EAEwB,YAFxB,EAGd,SAHc,EAGH,cAHG,EAGa,gBAHb,EAId,SAJc,EAIH,YAJG,EAIW,QAJX,EAKd,SALc,EAKH,WALG,EAKU,WALV,EAMd,SANc,EAMH,YANG,EAMW,aANX,EAOd,gBAPc,EAOI,YAPJ,EAOkB,eAPlB,EAQd,eARc,EAQG,SARH,EAQc,QARd,EAQwB,gBARxB,EASd,aATc,EASC,SATD,CALF;AAgBdC,6BAA2B,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,SAArC,EAAgD,KAAhD,CAhBb;AAkBdC,0BAAwB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,IAA5B,EAAkC,OAAlC,EAA2C,OAA3C,EAAoD,IAApD,EACtB,IADsB,EAChB,IADgB,EACV,IADU,EACJ,KADI,EACG,KADH,EACU,KADV,EACiB,KADjB,EACwB,IADxB,EAC8B,IAD9B,EACoC,IADpC,EAC0C,IAD1C,EACgD,IADhD,EAEtB,IAFsB,EAEhB,OAFgB,EAEP,IAFO,EAED,IAFC,EAEK,IAFL,EAEW,IAFX,EAEiB,IAFjB,EAEuB,IAFvB,EAE6B,IAF7B,EAEmC,IAFnC,EAEyC,IAFzC,EAE+C,IAF/C,EAGtB,IAHsB,EAGhB,KAHgB,EAGT,QAHS,EAGC,MAHD,EAGS,KAHT,EAGgB,KAHhB,EAGuB,OAHvB,EAGgC,IAHhC,EAGsC,IAHtC,CAlBV;AAuBdC,OAAK,aAASC,IAAT,EAAe;AAClBA,SAAKC,OAAL,GAAeD,KAAKC,OAAL,IAAgBT,UAAUI,cAAzC;AACAI,SAAKE,kBAAL,GAA0BF,KAAKE,kBAAL,IAA2BV,UAAUK,yBAA/D;AACAG,SAAKG,eAAL,GAAuBH,KAAKG,eAAL,IAAwBX,UAAUM,sBAAzD;AACAE,SAAKI,gBAAL,GAAwBJ,KAAKI,gBAAL,IAAyBZ,UAAUa,aAA3D;;AAEA,QAAIC,kBAAkB,SAAlBA,eAAkB,CAASC,MAAT,EAAgB;AAAE,aAAOA,MAAP;AAAe,KAAvD;;AACA,QAAIC,oBAAoBR,KAAKS,SAAL,IAAkBH,eAA1C;AACA,QAAII,gBAAgBV,KAAKW,KAAL,IAAcL,eAAlC;AAEA,QAAIC,SAASf,UAAUoB,OAAV,CAAkBpB,UAAUqB,WAAV,CAAsBb,KAAKc,KAA3B,CAAlB,EAAqDd,KAAKC,OAA1D,EAAmED,KAAKE,kBAAxE,EAA4FF,KAAKG,eAAjG,EAAkHH,KAAKI,gBAAvH,CAAb;AAEA,WAAOG,SAASC,kBAAkBD,MAAlB,CAAT,GAAqCG,eAA5C;AACD,GApCa;AAsCdE,WAAS,iBAASE,KAAT,EAAgBb,OAAhB,EAAyBC,kBAAzB,EAA6CC,eAA7C,EAA8DC,gBAA9D,EAAgF;AACvFU,YAAQA,MAAMC,WAAN,EAAR;AAEA,QAAIC,aAAa,KAAKC,UAAL,CAAgBH,KAAhB,CAAjB;;AAEA,QAAIZ,sBAAsBC,eAA1B,EAA2C;AACvC;AACA,UAAID,mBAAmBgB,OAAnB,CAA2BF,WAAWG,iBAAtC,MAA6D,CAAC,CAA9D,IAAmEhB,gBAAgBe,OAAhB,CAAwBF,WAAWI,cAAnC,MAAuD,CAAC,CAA/H,EAAkI;AAC9H,eAAO,KAAP;AACH;AACJ;;AAED,QAAIC,gBAAgB,KAAKC,iBAAL,CAAuBN,WAAWO,MAAlC,EAA0CtB,OAA1C,EAAmDG,gBAAnD,EAAqE,KAAKX,eAA1E,CAApB;;AAEA,QAAI4B,aAAJ,EAAmB;AACjB,UAAIA,iBAAiBL,WAAWO,MAAhC,EAAwC;AACtC;AACA,eAAO,KAAP;AACD,OAHD,MAGO;AACL;AACA,eAAO;AAAEC,mBAASR,WAAWQ,OAAtB;AAA+BD,kBAAQF,aAAvC;AAAsDI,gBAAMT,WAAWQ,OAAX,GAAqB,GAArB,GAA2BH;AAAvF,SAAP;AACD;AACF,KAtBsF,CAwBvF;;;AACA,QAAIK,2BAA2B,KAAKJ,iBAAL,CAAuBN,WAAWG,iBAAlC,EAAqDjB,kBAArD,EAAyEE,gBAAzE,EAA2F,KAAKV,oBAAhG,CAA/B;AACA,QAAIiC,wBAA2B,KAAKL,iBAAL,CAAuBN,WAAWI,cAAlC,EAAkDjB,eAAlD,EAAmEC,gBAAnE,EAAqF,KAAKT,iBAA1F,CAA/B;;AAEA,QAAIqB,WAAWO,MAAf,EAAuB;AACrB,UAAIF,gBAAgBL,WAAWO,MAA/B;AACA,UAAIK,OAAO,KAAX;;AAEA,UAAGF,4BAA4BA,4BAA4BV,WAAWG,iBAAtE,EAAyF;AACvF;AACAE,wBAAgBA,cAAcQ,OAAd,CAAsBb,WAAWG,iBAAjC,EAAoDO,wBAApD,CAAhB;AACAE,eAAO,IAAP;AACD;;AAED,UAAGD,yBAAyBA,yBAAyBX,WAAWI,cAAhE,EAAgF;AAC9E;AACAC,wBAAgBA,cAAcQ,OAAd,CAAsBb,WAAWI,cAAjC,EAAiDO,qBAAjD,CAAhB;AACAC,eAAO,IAAP;AACD;;AAED,UAAIA,QAAQ,IAAZ,EAAkB;AAChB,eAAO;AAAEJ,mBAASR,WAAWQ,OAAtB;AAA+BD,kBAAQF,aAAvC;AAAsDI,gBAAMT,WAAWQ,OAAX,GAAqB,GAArB,GAA2BH;AAAvF,SAAP;AACD;AACF;AAED;;;;;;AAIA,WAAO,KAAP;AACD,GA5Fa;AA8FdC,qBAAmB,2BAASC,MAAT,EAAiBtB,OAAjB,EAA0BG,gBAA1B,EAA4C0B,SAA5C,EAAuD;AACxEA,gBAAYA,aAAa,KAAKnC,iBAA9B;AACA,QAAIoC,IAAJ;AACA,QAAIC,UAAU,EAAd;AACA,QAAIX,gBAAgB,IAApB;;AAEA,QAAI,CAACE,MAAD,IAAW,CAACtB,OAAhB,EAAyB;AACvB,aAAO,KAAP;AACD;;AACD,QAAG,CAACG,gBAAJ,EAAsB;AACpBA,yBAAmB,KAAKC,aAAxB;AACD;;AAED,SAAK,IAAI4B,IAAI,CAAb,EAAgBA,IAAIhC,QAAQiC,MAA5B,EAAoCD,GAApC,EAAyC;AACvC,UAAIV,WAAWtB,QAAQgC,CAAR,CAAf,EAA2B;AACzB,eAAOV,MAAP;AACD;;AACDQ,aAAO3B,iBAAiBmB,MAAjB,EAAyBtB,QAAQgC,CAAR,CAAzB,CAAP;;AACA,UAAIF,OAAOC,OAAX,EAAoB;AAClBA,kBAAUD,IAAV;AACAV,wBAAgBpB,QAAQgC,CAAR,CAAhB;AACD;AACF;;AAED,QAAID,WAAWF,SAAX,IAAwBT,kBAAkB,IAA9C,EAAoD;AAClD,aAAOA,aAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GA3Ha;AA6HdhB,iBAAe,uBAAS8B,EAAT,EAAaC,EAAb,EAAiB;AAC9B;AACA,QAAID,MAAM,IAAN,IAAcA,GAAGD,MAAH,KAAc,CAAhC,EAAmC;AACjC,UAAIE,MAAM,IAAN,IAAcA,GAAGF,MAAH,KAAc,CAAhC,EAAmC;AACjC,eAAO,CAAP;AACD,OAFD,MAEO;AACL,eAAOE,GAAGF,MAAV;AACD;AACF;;AAED,QAAIE,MAAM,IAAN,IAAcA,GAAGF,MAAH,KAAc,CAAhC,EAAmC;AACjC,aAAOC,GAAGD,MAAV;AACD;;AAED,QAAIG,IAAI,CAAR;AACA,QAAIC,UAAU,CAAd;AACA,QAAIC,UAAU,CAAd;AACA,QAAIC,MAAM,CAAV;AACA,QAAIC,YAAY,CAAhB;;AAEA,WAAQJ,IAAIC,OAAJ,GAAcH,GAAGD,MAAlB,IAA8BG,IAAIE,OAAJ,GAAcH,GAAGF,MAAtD,EAA+D;AAC7D,UAAIC,GAAGO,MAAH,CAAUL,IAAIC,OAAd,KAA0BF,GAAGM,MAAH,CAAUL,IAAIE,OAAd,CAA9B,EAAsD;AACpDC;AACD,OAFD,MAEO;AACLF,kBAAU,CAAV;AACAC,kBAAU,CAAV;;AACA,aAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIQ,SAApB,EAA+BR,GAA/B,EAAoC;AAClC,cAAKI,IAAIJ,CAAJ,GAAQE,GAAGD,MAAZ,IAAwBC,GAAGO,MAAH,CAAUL,IAAIJ,CAAd,KAAoBG,GAAGM,MAAH,CAAUL,CAAV,CAAhD,EAA+D;AAC7DC,sBAAUL,CAAV;AACA;AACD;;AACD,cAAKI,IAAIJ,CAAJ,GAAQG,GAAGF,MAAZ,IAAwBC,GAAGO,MAAH,CAAUL,CAAV,KAAgBD,GAAGM,MAAH,CAAUL,IAAIJ,CAAd,CAA5C,EAA+D;AAC7DM,sBAAUN,CAAV;AACA;AACD;AACF;AACF;;AACDI;AACD;;AACD,WAAO,CAACF,GAAGD,MAAH,GAAYE,GAAGF,MAAhB,IAAyB,CAAzB,GAA6BM,GAApC;AACD,GArKa;AAuKdvB,cAAY,oBAASH,KAAT,EAAgB;AAC1B,QAAI6B,QAAQ7B,MAAM8B,IAAN,GAAaC,KAAb,CAAmB,GAAnB,CAAZ;;AAEA,QAAIF,MAAMT,MAAN,GAAe,CAAnB,EAAsB;AACpB,aAAO,KAAP;AACD;;AAED,SAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIU,MAAMT,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,UAAIU,MAAMV,CAAN,MAAa,EAAjB,EAAqB;AACnB,eAAO,KAAP;AACD;AACF;;AAED,QAAIV,SAASoB,MAAMG,GAAN,EAAb;AACA,QAAIC,cAAcxB,OAAOsB,KAAP,CAAa,GAAb,CAAlB;AACA,QAAIG,MAAM,EAAV;AACA,QAAIC,MAAM,EAAV;;AAEA,QAAIF,YAAYb,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAIa,YAAYb,MAAZ,IAAsB,CAA1B,EAA6B;AAClC;AACAe,YAAMF,YAAY,CAAZ,CAAN;AACD,KAHM,MAGA;AACL;AACAC,YAAMD,YAAY,CAAZ,CAAN;;AACA,WAAK,IAAId,IAAI,CAAb,EAAgBA,IAAIc,YAAYb,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3CgB,eAAOF,YAAYd,CAAZ,IAAiB,GAAxB;AACD;;AACDgB,YAAMA,IAAIC,SAAJ,CAAc,CAAd,EAAiBD,IAAIf,MAAJ,GAAa,CAA9B,CAAN;AACD;;AAED,WAAO;AACLd,sBAAgB6B,GADX;AAEL9B,yBAAmB6B,GAFd;AAGLzB,cAAQA,MAHH;AAILC,eAASmB,MAAMQ,IAAN,CAAW,GAAX;AAJJ,KAAP;AAMD,GA9Ma;AAgNd;AACA;AACA;AACAtC,eAAa,qBAASC,KAAT,EAAgB;AAC3B,QAAIP,SAAS6C,UAAUtC,KAAV,CAAb;AACAP,aAASA,OAAOsB,OAAP,CAAe,KAAf,EAAsB,GAAtB,EAA2BA,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,EAA+CA,OAA/C,CAAuD,KAAvD,EAA8D,GAA9D,EACOA,OADP,CACe,KADf,EACsB,GADtB,EAC2BA,OAD3B,CACmC,KADnC,EAC0C,GAD1C,EAC+CA,OAD/C,CACuD,KADvD,EAC8D,GAD9D,EAEOA,OAFP,CAEe,KAFf,EAEsB,GAFtB,CAAT;AAGA,WAAOtB,MAAP;AACD;AAzNa,CAAhB,C,CA4NA;AACA;;AACA,IAAI,OAAO8C,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAA5C,EAAqD;AACjDD,SAAOC,OAAP,GAAiB9D,SAAjB;AACH,C,CAED;AACA;;;AACA,IAAI,OAAO+D,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAA3C,EAAgD;AAC9CD,SAAO,WAAP,EAAoB,EAApB,EAAwB,YAAW;AACjC,WAAO/D,SAAP;AACD,GAFD;AAGD;;AAED,IAAI,OAAOiE,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,MAA5C,EAAoD;AAClD,GAAC,UAASC,CAAT,EAAW;AACVA,MAAEC,EAAF,CAAKC,SAAL,GAAiB,UAAS7D,IAAT,EAAe;AAC9B,UAAI8D,OAAO,IAAX;;AACA,UAAI9D,KAAKS,SAAT,EAAoB;AAClB,YAAIsD,eAAe/D,KAAKS,SAAxB;;AACAT,aAAKS,SAAL,GAAiB,UAASF,MAAT,EAAiB;AAChCwD,uBAAaD,IAAb,EAAmBvD,MAAnB;AACD,SAFD;AAGD;;AAED,UAAIP,KAAKW,KAAT,EAAgB;AACd,YAAIqD,WAAWhE,KAAKW,KAApB;;AACAX,aAAKW,KAAL,GAAa,YAAW;AACtBqD,mBAASC,IAAT,CAAc,IAAd,EAAoBH,IAApB;AACD,SAFD;AAGD;;AAED9D,WAAKc,KAAL,GAAa,KAAKoD,GAAL,EAAb;AACA1E,gBAAUO,GAAV,CAAcC,IAAd;AACD,KAlBD;AAmBD,GApBD,EAoBG0D,MApBH;AAqBD;;;;;;;;;;;;;0BAhQGlE,S","file":"/Users/eve/development/force/node_modules/mailcheck/src/mailcheck.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["/*\n * Mailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.1\n */\n\nvar Mailcheck = {\n  domainThreshold: 2,\n  secondLevelThreshold: 2,\n  topLevelThreshold: 2,\n\n  defaultDomains: ['msn.com', 'bellsouth.net',\n    'telus.net', 'comcast.net', 'optusnet.com.au',\n    'earthlink.net', 'qq.com', 'sky.com', 'icloud.com',\n    'mac.com', 'sympatico.ca', 'googlemail.com',\n    'att.net', 'xtra.co.nz', 'web.de',\n    'cox.net', 'gmail.com', 'ymail.com',\n    'aim.com', 'rogers.com', 'verizon.net',\n    'rocketmail.com', 'google.com', 'optonline.net',\n    'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com',\n    'charter.net', 'shaw.ca'],\n\n  defaultSecondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n\n  defaultTopLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\",\n    \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\",\n    \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\",\n    \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\"],\n\n  run: function(opts) {\n    opts.domains = opts.domains || Mailcheck.defaultDomains;\n    opts.secondLevelDomains = opts.secondLevelDomains || Mailcheck.defaultSecondLevelDomains;\n    opts.topLevelDomains = opts.topLevelDomains || Mailcheck.defaultTopLevelDomains;\n    opts.distanceFunction = opts.distanceFunction || Mailcheck.sift3Distance;\n\n    var defaultCallback = function(result){ return result };\n    var suggestedCallback = opts.suggested || defaultCallback;\n    var emptyCallback = opts.empty || defaultCallback;\n\n    var result = Mailcheck.suggest(Mailcheck.encodeEmail(opts.email), opts.domains, opts.secondLevelDomains, opts.topLevelDomains, opts.distanceFunction);\n\n    return result ? suggestedCallback(result) : emptyCallback()\n  },\n\n  suggest: function(email, domains, secondLevelDomains, topLevelDomains, distanceFunction) {\n    email = email.toLowerCase();\n\n    var emailParts = this.splitEmail(email);\n\n    if (secondLevelDomains && topLevelDomains) {\n        // If the email is a valid 2nd-level + top-level, do not suggest anything.\n        if (secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n            return false;\n        }\n    }\n\n    var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction, this.domainThreshold);\n\n    if (closestDomain) {\n      if (closestDomain == emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return false;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    // The email address does not closely match one of the supplied domains\n    var closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, secondLevelDomains, distanceFunction, this.secondLevelThreshold);\n    var closestTopLevelDomain    = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains, distanceFunction, this.topLevelThreshold);\n\n    if (emailParts.domain) {\n      var closestDomain = emailParts.domain;\n      var rtrn = false;\n\n      if(closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if(closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.topLevelDomain, closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn == true) {\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return false;\n  },\n\n  findClosestDomain: function(domain, domains, distanceFunction, threshold) {\n    threshold = threshold || this.topLevelThreshold;\n    var dist;\n    var minDist = 99;\n    var closestDomain = null;\n\n    if (!domain || !domains) {\n      return false;\n    }\n    if(!distanceFunction) {\n      distanceFunction = this.sift3Distance;\n    }\n\n    for (var i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n      dist = distanceFunction(domain, domains[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return false;\n    }\n  },\n\n  sift3Distance: function(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n      if (s2 == null || s2.length === 0) {\n        return 0;\n      } else {\n        return s2.length;\n      }\n    }\n\n    if (s2 == null || s2.length === 0) {\n      return s1.length;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 5;\n\n    while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {\n      if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n        lcs++;\n      } else {\n        offset1 = 0;\n        offset2 = 0;\n        for (var i = 0; i < maxOffset; i++) {\n          if ((c + i < s1.length) && (s1.charAt(c + i) == s2.charAt(c))) {\n            offset1 = i;\n            break;\n          }\n          if ((c + i < s2.length) && (s1.charAt(c) == s2.charAt(c + i))) {\n            offset2 = i;\n            break;\n          }\n        }\n      }\n      c++;\n    }\n    return (s1.length + s2.length) /2 - lcs;\n  },\n\n  splitEmail: function(email) {\n    var parts = email.trim().split('@');\n\n    if (parts.length < 2) {\n      return false;\n    }\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === '') {\n        return false;\n      }\n    }\n\n    var domain = parts.pop();\n    var domainParts = domain.split('.');\n    var sld = '';\n    var tld = '';\n\n    if (domainParts.length == 0) {\n      // The address does not have a top-level domain\n      return false;\n    } else if (domainParts.length == 1) {\n      // The address has only a top-level domain (valid under RFC)\n      tld = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      sld = domainParts[0];\n      for (var i = 1; i < domainParts.length; i++) {\n        tld += domainParts[i] + '.';\n      }\n      tld = tld.substring(0, tld.length - 1);\n    }\n\n    return {\n      topLevelDomain: tld,\n      secondLevelDomain: sld,\n      domain: domain,\n      address: parts.join('@')\n    }\n  },\n\n  // Encode the email address to prevent XSS but leave in valid\n  // characters, following this official spec:\n  // http://en.wikipedia.org/wiki/Email_address#Syntax\n  encodeEmail: function(email) {\n    var result = encodeURI(email);\n    result = result.replace('%20', ' ').replace('%25', '%').replace('%5E', '^')\n                   .replace('%60', '`').replace('%7B', '{').replace('%7C', '|')\n                   .replace('%7D', '}');\n    return result;\n  }\n};\n\n// Export the mailcheck object if we're in a CommonJS env (e.g. Node).\n// Modeled off of Underscore.js.\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Mailcheck;\n}\n\n// Support AMD style definitions\n// Based on jQuery (see http://stackoverflow.com/a/17954882/1322410)\nif (typeof define === \"function\" && define.amd) {\n  define(\"mailcheck\", [], function() {\n    return Mailcheck;\n  });\n}\n\nif (typeof window !== 'undefined' && window.jQuery) {\n  (function($){\n    $.fn.mailcheck = function(opts) {\n      var self = this;\n      if (opts.suggested) {\n        var oldSuggested = opts.suggested;\n        opts.suggested = function(result) {\n          oldSuggested(self, result);\n        };\n      }\n\n      if (opts.empty) {\n        var oldEmpty = opts.empty;\n        opts.empty = function() {\n          oldEmpty.call(null, self);\n        };\n      }\n\n      opts.email = this.val();\n      Mailcheck.run(opts);\n    }\n  })(jQuery);\n}\n"]}]}