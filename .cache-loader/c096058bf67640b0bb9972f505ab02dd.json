{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/analytics/account_login.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/analytics/account_login.js","mtime":1531409003000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["var _extends = require(\"@babel/runtime/helpers/extends\");\n\n//\n// Generic events around attempting to log in\n//\n// Viewed login form\nvar trackViewLogin = function trackViewLogin() {\n  analytics.track('Viewed login form');\n};\n\nvar trackLogin = function trackLogin(options) {\n  analytics.track('Successfully logged in', options);\n  analytics.identify(options.user_id, _.pick(options, 'email'), {\n    integrations: {\n      All: false,\n      Marketo: true\n    }\n  });\n};\n\nanalyticsHooks.on('mediator:open:auth', function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.mode === 'login') trackViewLogin(options);\n});\n$('#auth-footer [href*=log_in]').click(trackViewLogin); // Clicked login via the header\n\n$('.mlh-login').click(function () {\n  analytics.track('Clicked login via the header');\n}); // Login: The password you entered is incorrect.\n\nanalyticsHooks.on('mediator:auth:error', function (message) {\n  if (message === 'invalid email or password') {\n    analytics.track('Login: The password you entered is incorrect.');\n  }\n}); // Track social auth login\n\nif (Cookies.get('analytics-login')) {\n  var data = JSON.parse(Cookies.get('analytics-login'));\n  Cookies.expire('analytics-login');\n\n  if (sd.CURRENT_USER) {\n    trackLogin(_extends({}, data, {\n      user_id: sd.CURRENT_USER.id\n    }));\n  }\n}",{"version":3,"sources":["src/desktop/analytics/account_login.js"],"names":["trackViewLogin","analytics","track","trackLogin","options","identify","user_id","_","pick","integrations","All","Marketo","analyticsHooks","on","mode","$","click","message","Cookies","get","data","JSON","parse","expire","sd","CURRENT_USER","id"],"mappings":";;AAAA;AACA;AACA;AAEA;AACA,IAAIA,iBAAiB,SAAjBA,cAAiB,GAAW;AAC9BC,YAAUC,KAAV,CAAgB,mBAAhB;AACD,CAFD;;AAIA,IAAMC,aAAa,SAAbA,UAAa,UAAW;AAC5BF,YAAUC,KAAV,CAAgB,wBAAhB,EAA0CE,OAA1C;AAEAH,YAAUI,QAAV,CAAmBD,QAAQE,OAA3B,EAAoCC,EAAEC,IAAF,CAAOJ,OAAP,EAAgB,OAAhB,CAApC,EAA8D;AAC5DK,kBAAc;AACZC,WAAK,KADO;AAEZC,eAAS;AAFG;AAD8C,GAA9D;AAMD,CATD;;AAWAC,eAAeC,EAAf,CAAkB,oBAAlB,EAAwC,YAAkB;AAAA,MAAjBT,OAAiB,uEAAP,EAAO;AACxD,MAAIA,QAAQU,IAAR,KAAiB,OAArB,EAA8Bd,eAAeI,OAAf;AAC/B,CAFD;AAIAW,EAAE,6BAAF,EAAiCC,KAAjC,CAAuChB,cAAvC,E,CAEA;;AACAe,EAAE,YAAF,EAAgBC,KAAhB,CAAsB,YAAW;AAC/Bf,YAAUC,KAAV,CAAgB,8BAAhB;AACD,CAFD,E,CAIA;;AACAU,eAAeC,EAAf,CAAkB,qBAAlB,EAAyC,UAASI,OAAT,EAAkB;AACzD,MAAIA,YAAY,2BAAhB,EAA6C;AAC3ChB,cAAUC,KAAV,CAAgB,+CAAhB;AACD;AACF,CAJD,E,CAMA;;AACA,IAAIgB,QAAQC,GAAR,CAAY,iBAAZ,CAAJ,EAAoC;AAClC,MAAIC,OAAOC,KAAKC,KAAL,CAAWJ,QAAQC,GAAR,CAAY,iBAAZ,CAAX,CAAX;AACAD,UAAQK,MAAR,CAAe,iBAAf;;AAEA,MAAIC,GAAGC,YAAP,EAAqB;AACnBtB,4BACKiB,IADL;AAEEd,eAASkB,GAAGC,YAAH,CAAgBC;AAF3B;AAID;AACF","file":"/Users/eve/development/force/src/desktop/analytics/account_login.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["//\n// Generic events around attempting to log in\n//\n\n// Viewed login form\nvar trackViewLogin = function() {\n  analytics.track('Viewed login form')\n}\n\nconst trackLogin = options => {\n  analytics.track('Successfully logged in', options)\n\n  analytics.identify(options.user_id, _.pick(options, 'email'), {\n    integrations: {\n      All: false,\n      Marketo: true,\n    },\n  })\n}\n\nanalyticsHooks.on('mediator:open:auth', (options = {}) => {\n  if (options.mode === 'login') trackViewLogin(options)\n})\n\n$('#auth-footer [href*=log_in]').click(trackViewLogin)\n\n// Clicked login via the header\n$('.mlh-login').click(function() {\n  analytics.track('Clicked login via the header')\n})\n\n// Login: The password you entered is incorrect.\nanalyticsHooks.on('mediator:auth:error', function(message) {\n  if (message === 'invalid email or password') {\n    analytics.track('Login: The password you entered is incorrect.')\n  }\n})\n\n// Track social auth login\nif (Cookies.get('analytics-login')) {\n  var data = JSON.parse(Cookies.get('analytics-login'))\n  Cookies.expire('analytics-login')\n\n  if (sd.CURRENT_USER) {\n    trackLogin({\n      ...data,\n      user_id: sd.CURRENT_USER.id,\n    })\n  }\n}\n"]}]}