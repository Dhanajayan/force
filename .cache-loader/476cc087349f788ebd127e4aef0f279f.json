{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/reducers/artworkBrowser.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/reducers/artworkBrowser.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport * as actions from \"../actions/artworkBrowser\";\nimport get from 'lodash.get';\nimport u from 'updeep';\nimport { contains } from 'underscore';\nimport { data as sd } from 'sharify';\nexport var initialState = {\n  aggregatedArtists: [],\n  aggregatedMediums: [],\n  allFetched: false,\n  showFollowedArtistsRail: false,\n  filterParams: {\n    aggregations: ['ARTIST', 'FOLLOWED_ARTISTS', 'MEDIUM', 'TOTAL'],\n    artist_ids: [],\n    estimate_range: '',\n    gene_ids: [],\n    include_artworks_by_followed_artists: false,\n    page: 1,\n    sale_id: get(sd, 'AUCTION.id', ''),\n    size: 20,\n    ranges: {\n      estimate_range: {\n        min: 0,\n        max: 50000\n      }\n    },\n    sort: 'position'\n  },\n  followedArtistRailMax: 50,\n  followedArtistRailPage: 1,\n  followedArtistRailSize: 4,\n  initialMediumMap: [],\n  isClosed: get(sd, 'AUCTION.is_closed', false),\n  isFetchingArtworks: false,\n  isLastFollowedArtistsPage: false,\n  isListView: false,\n  maxEstimateRangeDisplay: 50000,\n  minEstimateRangeDisplay: 0,\n  numArtistsYouFollow: 0,\n  requestID: get(sd, 'REQUEST_ID', undefined),\n  saleArtworks: [],\n  saleArtworksByFollowedArtists: [],\n  saleArtworksByFollowedArtistsTotal: 0,\n  sortMap: {\n    'position': 'Lot Number Asc',\n    '-position': 'Lot Number Desc',\n    '-bidder_positions_count': 'Most Bids',\n    'bidder_positions_count': 'Least Bids',\n    '-searchable_estimate': 'Most Expensive',\n    'searchable_estimate': 'Least Expensive'\n  },\n  symbol: get(sd, 'AUCTION.symbol', '$'),\n  total: 0,\n  user: get(sd, 'CURRENT_USER', undefined)\n};\nexport default function auctionArtworkFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.GET_ARTWORKS_FAILURE:\n      {\n        return u({\n          isFetchingArtworks: false\n        }, state);\n      }\n\n    case actions.GET_ARTWORKS_REQUEST:\n      {\n        return u({\n          isFetchingArtworks: true\n        }, state);\n      }\n\n    case actions.GET_ARTWORKS_SUCCESS:\n      {\n        return u({\n          isFetchingArtworks: false\n        }, state);\n      }\n\n    case actions.TOGGLE_LIST_VIEW:\n      {\n        return u({\n          isListView: action.payload.isListView\n        }, state);\n      }\n\n    case actions.UPDATE_AGGREGATED_ARTISTS:\n      {\n        return u({\n          aggregatedArtists: action.payload.aggregatedArtists\n        }, state);\n      }\n\n    case actions.UPDATE_AGGREGATED_MEDIUMS:\n      {\n        return u({\n          aggregatedMediums: action.payload.aggregatedMediums\n        }, state);\n      }\n\n    case actions.UPDATE_ALL_FETCHED:\n      {\n        if (state.saleArtworks.length === state.total) {\n          return u({\n            allFetched: true\n          }, state);\n        } else {\n          return u({\n            allFetched: false\n          }, state);\n        }\n      }\n\n    case actions.UPDATE_ARTIST_ID:\n      {\n        var artistId = action.payload.artistId;\n\n        if (artistId === 'artists-all') {\n          return u({\n            filterParams: {\n              artist_ids: [],\n              include_artworks_by_followed_artists: false\n            }\n          }, state);\n        } else if (artistId === 'artists-you-follow') {\n          var newState = !state.filterParams.include_artworks_by_followed_artists;\n          return u({\n            filterParams: {\n              artist_ids: [],\n              include_artworks_by_followed_artists: newState\n            }\n          }, state);\n        } else if (contains(state.filterParams.artist_ids, artistId)) {\n          return u({\n            filterParams: {\n              artist_ids: u.reject(function (aa) {\n                return aa === artistId;\n              }),\n              include_artworks_by_followed_artists: false\n            }\n          }, state);\n        } else {\n          return u({\n            filterParams: {\n              artist_ids: state.filterParams.artist_ids.concat(artistId),\n              include_artworks_by_followed_artists: false\n            }\n          }, state);\n        }\n      }\n\n    case actions.SHOW_FOLLOWED_ARTISTS_RAIL:\n      {\n        return u({\n          showFollowedArtistsRail: true\n        }, state);\n      }\n\n    case actions.UPDATE_ESTIMATE_DISPLAY:\n      {\n        return u({\n          minEstimateRangeDisplay: action.payload.min,\n          maxEstimateRangeDisplay: action.payload.max\n        }, state);\n      }\n\n    case actions.UPDATE_ESTIMATE_RANGE:\n      {\n        var maxRange;\n\n        if (action.payload.max === state.filterParams.ranges.estimate_range.max) {\n          maxRange = '*';\n        } else {\n          maxRange = action.payload.max * 100;\n        }\n\n        return u({\n          filterParams: {\n            estimate_range: \"\".concat(action.payload.min * 100, \"-\").concat(maxRange)\n          }\n        }, state);\n      }\n\n    case actions.UPDATE_INITIAL_MEDIUM_MAP:\n      {\n        if (state.initialMediumMap.length === 0) {\n          return u({\n            initialMediumMap: action.payload.initialMediumMap\n          }, state);\n        } else {\n          return state;\n        }\n      }\n\n    case actions.UPDATE_MEDIUM_ID:\n      {\n        var mediumId = action.payload.mediumId;\n\n        if (mediumId === 'mediums-all') {\n          return u({\n            filterParams: {\n              gene_ids: []\n            }\n          }, state);\n        } else if (contains(state.filterParams.gene_ids, mediumId)) {\n          return u({\n            filterParams: {\n              gene_ids: u.reject(function (mm) {\n                return mm === mediumId;\n              })\n            }\n          }, state);\n        } else {\n          return u({\n            filterParams: {\n              gene_ids: state.filterParams.gene_ids.concat(mediumId)\n            }\n          }, state);\n        }\n      }\n\n    case actions.UPDATE_NUM_ARTISTS_YOU_FOLLOW:\n      {\n        return u({\n          numArtistsYouFollow: action.payload.numArtistsYouFollow\n        }, state);\n      }\n\n    case actions.UPDATE_PAGE:\n      {\n        var reset = action.payload.reset;\n\n        if (reset === true) {\n          return u({\n            filterParams: {\n              page: 1\n            }\n          }, state);\n        } else {\n          var currentPage = state.filterParams.page;\n          return u({\n            filterParams: {\n              page: currentPage + 1\n            }\n          }, state);\n        }\n      }\n\n    case actions.UPDATE_SALE_ARTWORKS:\n      {\n        if (state.filterParams.page > 1) {\n          return u({\n            saleArtworks: state.saleArtworks.concat(action.payload.saleArtworks)\n          }, state);\n        } else {\n          return u({\n            saleArtworks: action.payload.saleArtworks\n          }, state);\n        }\n      }\n\n    case actions.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS:\n      {\n        return u({\n          saleArtworksByFollowedArtists: action.payload.saleArtworks\n        }, state);\n      }\n\n    case actions.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL:\n      {\n        return u({\n          saleArtworksByFollowedArtistsTotal: action.payload.total\n        }, state);\n      }\n\n    case actions.UPDATE_SORT:\n      {\n        return u({\n          filterParams: {\n            sort: action.payload.sort\n          }\n        }, state);\n      }\n\n    case actions.UPDATE_TOTAL:\n      {\n        return u({\n          total: action.payload.total\n        }, state);\n      }\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/eve/development/force/src/desktop/apps/auction/reducers/artworkBrowser.js\");\n  reactHotLoader.register(auctionArtworkFilter, \"auctionArtworkFilter\", \"/Users/eve/development/force/src/desktop/apps/auction/reducers/artworkBrowser.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/reducers/artworkBrowser.js"],"names":["actions","get","u","contains","data","sd","initialState","aggregatedArtists","aggregatedMediums","allFetched","showFollowedArtistsRail","filterParams","aggregations","artist_ids","estimate_range","gene_ids","include_artworks_by_followed_artists","page","sale_id","size","ranges","min","max","sort","followedArtistRailMax","followedArtistRailPage","followedArtistRailSize","initialMediumMap","isClosed","isFetchingArtworks","isLastFollowedArtistsPage","isListView","maxEstimateRangeDisplay","minEstimateRangeDisplay","numArtistsYouFollow","requestID","undefined","saleArtworks","saleArtworksByFollowedArtists","saleArtworksByFollowedArtistsTotal","sortMap","symbol","total","user","auctionArtworkFilter","state","action","type","GET_ARTWORKS_FAILURE","GET_ARTWORKS_REQUEST","GET_ARTWORKS_SUCCESS","TOGGLE_LIST_VIEW","payload","UPDATE_AGGREGATED_ARTISTS","UPDATE_AGGREGATED_MEDIUMS","UPDATE_ALL_FETCHED","length","UPDATE_ARTIST_ID","artistId","newState","reject","aa","concat","SHOW_FOLLOWED_ARTISTS_RAIL","UPDATE_ESTIMATE_DISPLAY","UPDATE_ESTIMATE_RANGE","maxRange","UPDATE_INITIAL_MEDIUM_MAP","UPDATE_MEDIUM_ID","mediumId","mm","UPDATE_NUM_ARTISTS_YOU_FOLLOW","UPDATE_PAGE","reset","currentPage","UPDATE_SALE_ARTWORKS","UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS","UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL","UPDATE_SORT","UPDATE_TOTAL"],"mappings":"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","sourcesContent":["import * as actions from 'desktop/apps/auction/actions/artworkBrowser'\nimport get from 'lodash.get'\nimport u from 'updeep'\nimport { contains } from 'underscore'\nimport { data as sd } from 'sharify'\n\nexport const initialState = {\n  aggregatedArtists: [],\n  aggregatedMediums: [],\n  allFetched: false,\n  showFollowedArtistsRail: false,\n  filterParams: {\n    aggregations: ['ARTIST', 'FOLLOWED_ARTISTS', 'MEDIUM', 'TOTAL'],\n    artist_ids: [],\n    estimate_range: '',\n    gene_ids: [],\n    include_artworks_by_followed_artists: false,\n    page: 1,\n    sale_id: get(sd, 'AUCTION.id', ''),\n    size: 20,\n    ranges: {\n      estimate_range: {\n        min: 0,\n        max: 50000\n      }\n    },\n    sort: 'position'\n  },\n  followedArtistRailMax: 50,\n  followedArtistRailPage: 1,\n  followedArtistRailSize: 4,\n  initialMediumMap: [],\n  isClosed: get(sd, 'AUCTION.is_closed', false),\n  isFetchingArtworks: false,\n  isLastFollowedArtistsPage: false,\n  isListView: false,\n  maxEstimateRangeDisplay: 50000,\n  minEstimateRangeDisplay: 0,\n  numArtistsYouFollow: 0,\n  requestID: get(sd, 'REQUEST_ID', undefined),\n  saleArtworks: [],\n  saleArtworksByFollowedArtists: [],\n  saleArtworksByFollowedArtistsTotal: 0,\n  sortMap: {\n    'position': 'Lot Number Asc',\n    '-position': 'Lot Number Desc',\n    '-bidder_positions_count': 'Most Bids',\n    'bidder_positions_count': 'Least Bids',\n    '-searchable_estimate': 'Most Expensive',\n    'searchable_estimate': 'Least Expensive'\n  },\n  symbol: get(sd, 'AUCTION.symbol', '$'),\n  total: 0,\n  user: get(sd, 'CURRENT_USER', undefined)\n}\n\nexport default function auctionArtworkFilter (state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_ARTWORKS_FAILURE: {\n      return u({\n        isFetchingArtworks: false\n      }, state)\n    }\n    case actions.GET_ARTWORKS_REQUEST: {\n      return u({\n        isFetchingArtworks: true\n      }, state)\n    }\n    case actions.GET_ARTWORKS_SUCCESS: {\n      return u({\n        isFetchingArtworks: false\n      }, state)\n    }\n    case actions.TOGGLE_LIST_VIEW: {\n      return u({\n        isListView: action.payload.isListView\n      }, state)\n    }\n    case actions.UPDATE_AGGREGATED_ARTISTS: {\n      return u({\n        aggregatedArtists: action.payload.aggregatedArtists\n      }, state)\n    }\n    case actions.UPDATE_AGGREGATED_MEDIUMS: {\n      return u({\n        aggregatedMediums: action.payload.aggregatedMediums\n      }, state)\n    }\n    case actions.UPDATE_ALL_FETCHED: {\n      if (state.saleArtworks.length === state.total) {\n        return u({\n          allFetched: true\n        }, state)\n      } else {\n        return u({\n          allFetched: false\n        }, state)\n      }\n    }\n    case actions.UPDATE_ARTIST_ID: {\n      const artistId = action.payload.artistId\n      if (artistId === 'artists-all') {\n        return u({\n          filterParams: {\n            artist_ids: [],\n            include_artworks_by_followed_artists: false\n          }\n        }, state)\n      } else if (artistId === 'artists-you-follow') {\n        const newState = !state.filterParams.include_artworks_by_followed_artists\n        return u({\n          filterParams: {\n            artist_ids: [],\n            include_artworks_by_followed_artists: newState\n          }\n        }, state)\n      } else if (contains(state.filterParams.artist_ids, artistId)) {\n        return u({\n          filterParams: {\n            artist_ids: u.reject((aa) => aa === artistId),\n            include_artworks_by_followed_artists: false\n          }\n        }, state)\n      } else {\n        return u({\n          filterParams: {\n            artist_ids: state.filterParams.artist_ids.concat(artistId),\n            include_artworks_by_followed_artists: false\n          }\n        }, state)\n      }\n    }\n    case actions.SHOW_FOLLOWED_ARTISTS_RAIL: {\n      return u({\n        showFollowedArtistsRail: true\n      }, state)\n    }\n    case actions.UPDATE_ESTIMATE_DISPLAY: {\n      return u({\n        minEstimateRangeDisplay: action.payload.min,\n        maxEstimateRangeDisplay: action.payload.max\n      }, state)\n    }\n    case actions.UPDATE_ESTIMATE_RANGE: {\n      let maxRange\n      if (action.payload.max === state.filterParams.ranges.estimate_range.max) {\n        maxRange = '*'\n      } else {\n        maxRange = action.payload.max * 100\n      }\n      return u({\n        filterParams: {\n          estimate_range: `${action.payload.min * 100}-${maxRange}`\n        }\n      }, state)\n    }\n    case actions.UPDATE_INITIAL_MEDIUM_MAP: {\n      if (state.initialMediumMap.length === 0) {\n        return u({\n          initialMediumMap: action.payload.initialMediumMap\n        }, state)\n      } else {\n        return state\n      }\n    }\n    case actions.UPDATE_MEDIUM_ID: {\n      const mediumId = action.payload.mediumId\n      if (mediumId === 'mediums-all') {\n        return u({\n          filterParams: {\n            gene_ids: []\n          }\n        }, state)\n      } else if (contains(state.filterParams.gene_ids, mediumId)) {\n        return u({\n          filterParams: {\n            gene_ids: u.reject((mm) => mm === mediumId)\n          }\n        }, state)\n      } else {\n        return u({\n          filterParams: {\n            gene_ids: state.filterParams.gene_ids.concat(mediumId)\n          }\n        }, state)\n      }\n    }\n    case actions.UPDATE_NUM_ARTISTS_YOU_FOLLOW: {\n      return u({\n        numArtistsYouFollow: action.payload.numArtistsYouFollow\n      }, state)\n    }\n    case actions.UPDATE_PAGE: {\n      const reset = action.payload.reset\n      if (reset === true) {\n        return u({\n          filterParams: {\n            page: 1\n          }\n        }, state)\n      } else {\n        const currentPage = state.filterParams.page\n        return u({\n          filterParams: {\n            page: currentPage + 1\n          }\n        }, state)\n      }\n    }\n    case actions.UPDATE_SALE_ARTWORKS: {\n      if (state.filterParams.page > 1) {\n        return u({\n          saleArtworks: state.saleArtworks.concat(action.payload.saleArtworks)\n        }, state)\n      } else {\n        return u({\n          saleArtworks: action.payload.saleArtworks\n        }, state)\n      }\n    }\n    case actions.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS: {\n      return u({\n        saleArtworksByFollowedArtists: action.payload.saleArtworks\n      }, state)\n    }\n    case actions.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL: {\n      return u({\n        saleArtworksByFollowedArtistsTotal: action.payload.total\n      }, state)\n    }\n    case actions.UPDATE_SORT: {\n      return u({\n        filterParams: {\n          sort: action.payload.sort\n        }\n      }, state)\n    }\n    case actions.UPDATE_TOTAL: {\n      return u({\n        total: action.payload.total\n      }, state)\n    }\n    default: return state\n  }\n}\n"]}]}