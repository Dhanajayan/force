{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js","mtime":1521064654000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from \"@artsy/reaction/dist/Components/Icon\";\nexport var Reveal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reveal, _Component);\n\n  function Reveal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reveal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reveal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isExpanded: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleExpandClick\", function () {\n      if (_this.props.isEnabled) {\n        _this.toggle();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Reveal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var isExpanded = this.props.isExpanded;\n      this.setState({\n        isExpanded: isExpanded\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var isExpanded = !this.state.isExpanded;\n      this.setState({\n        isExpanded: isExpanded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          coverHeight = _this$props.coverHeight,\n          isEnabled = _this$props.isEnabled;\n      var isExpanded = this.state.isExpanded;\n      var maskContent = !isExpanded && isEnabled;\n      return React.createElement(OuterContainer, null, React.createElement(InnerContainer, {\n        isEnabled: maskContent,\n        isExpanded: isExpanded,\n        coverHeight: coverHeight\n      }, this.props.children), maskContent && React.createElement(Revealer, null, React.createElement(Button, {\n        onClick: this.handleExpandClick\n      }, React.createElement(Icon, {\n        name: \"chevron-down\",\n        color: \"black\",\n        fontSize: \"24px\",\n        style: {\n          fontWeight: 'bold'\n        }\n      }))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    value: function __reactstandin__regenerateByEval(key, code) {\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Reveal;\n}(Component);\n\n_defineProperty(Reveal, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  isEnabled: PropTypes.bool,\n  isExpanded: PropTypes.bool,\n  coverHeight: PropTypes.number\n});\n\n_defineProperty(Reveal, \"defaultProps\", {\n  isEnabled: false,\n  isExpanded: false,\n  coverHeight: 450\n});\n\nvar BottomBorder =\n/*#__PURE__*/\ncss([\"content:'';border-bottom:1px solid #e5e5e5;bottom:50%;width:120%;right:-20px;position:absolute;\"]);\nvar OuterContainer =\n/*#__PURE__*/\nstyled.div.withConfig({\n  displayName: \"Reveal__OuterContainer\",\n  componentId: \"g02hv4-0\"\n})([\"position:relative;\"]);\nvar InnerContainer =\n/*#__PURE__*/\nstyled.div.withConfig({\n  displayName: \"Reveal__InnerContainer\",\n  componentId: \"g02hv4-1\"\n})([\"\", \";\"], function (props) {\n  if (props.isEnabled) {\n    return \"\\n        overflow: hidden;\\n        height: \".concat(props.coverHeight, \"px;\\n      \");\n  } else if (props.isExpanded) {\n    return \"\\n        &:after {\\n          padding-top: 19px;\\n          \".concat(BottomBorder, \"\\n          bottom: inherit;\\n        }\\n      \");\n  }\n});\nvar Revealer =\n/*#__PURE__*/\nstyled.div.withConfig({\n  displayName: \"Reveal__Revealer\",\n  componentId: \"g02hv4-2\"\n})([\"width:100%;height:48px;position:absolute;bottom:-25px;&:before{\", \";}\"], BottomBorder);\nvar Button =\n/*#__PURE__*/\nstyled.div.withConfig({\n  displayName: \"Reveal__Button\",\n  componentId: \"g02hv4-3\"\n})([\"cursor:pointer;background-color:white;border:1px solid #e5e5e5;border-radius:45px;height:45px;left:50%;padding:12px 5px;position:absolute;top:50%;transform:translate(-50%,-50%);width:45px;z-index:1;> span{font-size:26px;}\"]);\nOuterContainer.displayName = 'OuterContainer';\nInnerContainer.displayName = 'InnerContainer';\nRevealer.displayName = 'Revealer';\nButton.displayName = 'Button';\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Reveal, \"Reveal\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  reactHotLoader.register(BottomBorder, \"BottomBorder\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  reactHotLoader.register(OuterContainer, \"OuterContainer\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  reactHotLoader.register(InnerContainer, \"InnerContainer\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  reactHotLoader.register(Revealer, \"Revealer\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  reactHotLoader.register(Button, \"Button\", \"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js"],"names":["PropTypes","React","Component","styled","css","Icon","Reveal","isExpanded","props","isEnabled","toggle","setState","state","coverHeight","maskContent","children","handleExpandClick","fontWeight","node","isRequired","bool","number","BottomBorder","OuterContainer","div","InnerContainer","Revealer","Button","displayName"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport styled, { css } from 'styled-components'\nimport Icon from 'reaction/Components/Icon'\n\nexport class Reveal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isEnabled: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    coverHeight: PropTypes.number,\n  }\n\n  static defaultProps = {\n    isEnabled: false,\n    isExpanded: false,\n    coverHeight: 450,\n  }\n\n  state = {\n    isExpanded: false,\n  }\n\n  componentWillMount() {\n    const { isExpanded } = this.props\n\n    this.setState({\n      isExpanded,\n    })\n  }\n\n  toggle() {\n    const isExpanded = !this.state.isExpanded\n\n    this.setState({\n      isExpanded,\n    })\n  }\n\n  handleExpandClick = () => {\n    if (this.props.isEnabled) {\n      this.toggle()\n    }\n  }\n\n  render() {\n    const { coverHeight, isEnabled } = this.props\n    const { isExpanded } = this.state\n    const maskContent = !isExpanded && isEnabled\n\n    return (\n      <OuterContainer>\n        <InnerContainer\n          isEnabled={maskContent}\n          isExpanded={isExpanded}\n          coverHeight={coverHeight}\n        >\n          {this.props.children}\n        </InnerContainer>\n\n        {maskContent && (\n          <Revealer>\n            <Button onClick={this.handleExpandClick}>\n              <Icon\n                name=\"chevron-down\"\n                color=\"black\"\n                fontSize=\"24px\"\n                style={{\n                  fontWeight: 'bold',\n                }}\n              />\n            </Button>\n          </Revealer>\n        )}\n      </OuterContainer>\n    )\n  }\n}\n\nconst BottomBorder = css`\n  content: '';\n  border-bottom: 1px solid #e5e5e5;\n  bottom: 50%;\n  width: 120%;\n  right: -20px;\n  position: absolute;\n`\n\nconst OuterContainer = styled.div`\n  position: relative;\n`\n\nconst InnerContainer = styled.div`\n  ${(props) => {\n    if (props.isEnabled) {\n      return `\n        overflow: hidden;\n        height: ${props.coverHeight}px;\n      `\n    } else if (props.isExpanded) {\n      return `\n        &:after {\n          padding-top: 19px;\n          ${BottomBorder}\n          bottom: inherit;\n        }\n      `\n    }\n  }};\n`\n\nconst Revealer = styled.div`\n  width: 100%;\n  height: 48px;\n  position: absolute;\n  bottom: -25px;\n\n  &:before {\n    ${BottomBorder};\n  }\n`\n\nconst Button = styled.div`\n  cursor: pointer;\n  background-color: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 45px;\n  height: 45px;\n  left: 50%;\n  padding: 12px 5px;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 45px;\n  z-index: 1;\n\n  > span {\n    font-size: 26px;\n  }\n`\n\nOuterContainer.displayName = 'OuterContainer'\nInnerContainer.displayName = 'InnerContainer'\nRevealer.displayName = 'Revealer'\nButton.displayName = 'Button'\n"]}]}