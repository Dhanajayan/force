{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/components/react/utils/configureStore.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/components/react/utils/configureStore.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = configureStore;\n\nvar _analyticsMiddleware = _interopRequireDefault(require(\"../../../apps/auction/utils/analyticsMiddleware\"));\n\nvar _reduxLogger = _interopRequireDefault(require(\"redux-logger\"));\n\nvar _reduxThunk = _interopRequireDefault(require(\"redux-thunk\"));\n\nvar _underscore = require(\"underscore\");\n\nvar _redux = require(\"redux\");\n\nvar _sharify = require(\"sharify\");\n\nfunction configureStore(rootReducer) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var middleware = [_reduxThunk.default, _analyticsMiddleware.default];\n  var enableLogger = (0, _underscore.contains)(['development', 'staging'], _sharify.data.NODE_ENV) && typeof window !== 'undefined';\n\n  if (enableLogger) {\n    middleware.push((0, _reduxLogger.default)({\n      collapsed: true\n    }));\n  }\n\n  var store = (0, _redux.createStore)(rootReducer, initialState, _redux.applyMiddleware.apply(void 0, middleware));\n  return store;\n}",{"version":3,"sources":["src/desktop/components/react/utils/configureStore.js"],"names":["configureStore","rootReducer","initialState","middleware","enableLogger","NODE_ENV","window","push","collapsed","store"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEe,SAASA,cAAT,CAAwBC,WAAxB,EAAwD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACrE,MAAMC,aAAa,mDAAnB;AAEA,MAAMC,eACJ,0BAAS,CAAC,aAAD,EAAgB,SAAhB,CAAT,EAAqC,cAAGC,QAAxC,KACA,OAAOC,MAAP,KAAkB,WAFpB;;AAIA,MAAIF,YAAJ,EAAkB;AAChBD,eAAWI,IAAX,CACE,0BAAa;AACXC,iBAAW;AADA,KAAb,CADF;AAKD;;AAED,MAAMC,QAAQ,wBACZR,WADY,EAEZC,YAFY,EAGZ,qCAAmBC,UAAnB,CAHY,CAAd;AAMA,SAAOM,KAAP;AACD","file":"/Users/eve/development/force/src/desktop/components/react/utils/configureStore.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import analyticsMiddleware from 'desktop/apps/auction/utils/analyticsMiddleware'\nimport createLogger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport { contains } from 'underscore'\nimport { createStore, applyMiddleware } from 'redux'\nimport { data as sd } from 'sharify'\n\nexport default function configureStore(rootReducer, initialState = {}) {\n  const middleware = [thunkMiddleware, analyticsMiddleware]\n\n  const enableLogger =\n    contains(['development', 'staging'], sd.NODE_ENV) &&\n    typeof window !== 'undefined'\n\n  if (enableLogger) {\n    middleware.push(\n      createLogger({\n        collapsed: true,\n      })\n    )\n  }\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n  )\n\n  return store\n}\n"]}]}