{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/queries/me.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/queries/me.js","mtime":1535573774000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nexport default function MeQuery(sale_id) {\n  var live = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return \"\\n  query AuctionsMeQuery {\\n    me {\\n      id\\n      has_credit_cards\\n      bidders(sale_id: \\\"\".concat(sale_id, \"\\\") {\\n        qualified_for_bidding\\n      }\\n\\n      lot_standings(sale_id: \\\"\").concat(sale_id, \"\\\", live: \").concat(live, \") {\\n        active_bid {\\n          id\\n        }\\n        is_leading_bidder\\n        sale_artwork {\\n          id\\n          lot_label\\n          reserve_status\\n          counts {\\n            bidder_positions\\n          }\\n          sale_id\\n          highest_bid {\\n            display\\n          }\\n          sale {\\n            live_start_at\\n            end_at\\n            is_live_open\\n            is_closed\\n          }\\n          artwork {\\n            href\\n            title\\n            date\\n            image {\\n              url(version: \\\"square\\\")\\n            }\\n            artist {\\n              name\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\");\n}\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MeQuery, \"MeQuery\", \"/Users/eve/development/force/src/desktop/apps/auction/queries/me.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/queries/me.js"],"names":["MeQuery","sale_id","live"],"mappings":";;;;;;AAAA,eAAe,SAASA,OAAT,CAAiBC,OAAjB,EAAuC;AAAA,MAAbC,IAAa,uEAAN,IAAM;AACpD,qHAKwBD,OALxB,6FAS8BA,OAT9B,uBASiDC,IATjD;AA8CD;;;;;;;;;;;;0BA/CuBF,O","sourcesContent":["export default function MeQuery(sale_id, live = true) {\n  return `\n  query AuctionsMeQuery {\n    me {\n      id\n      has_credit_cards\n      bidders(sale_id: \"${sale_id}\") {\n        qualified_for_bidding\n      }\n\n      lot_standings(sale_id: \"${sale_id}\", live: ${live}) {\n        active_bid {\n          id\n        }\n        is_leading_bidder\n        sale_artwork {\n          id\n          lot_label\n          reserve_status\n          counts {\n            bidder_positions\n          }\n          sale_id\n          highest_bid {\n            display\n          }\n          sale {\n            live_start_at\n            end_at\n            is_live_open\n            is_closed\n          }\n          artwork {\n            href\n            title\n            date\n            image {\n              url(version: \"square\")\n            }\n            artist {\n              name\n            }\n          }\n        }\n      }\n    }\n  }`\n}\n"]}]}