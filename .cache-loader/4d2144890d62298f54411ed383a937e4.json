{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport { connect } from 'react-redux';\n\nfunction LoadingSpinner(_ref) {\n  var fullscreen = _ref.fullscreen,\n      isFetchingArtworks = _ref.isFetchingArtworks;\n  var b = block('auction-LoadingSpinner');\n  return React.createElement(\"div\", {\n    className: b({\n      fullscreen: fullscreen\n    })\n  }, isFetchingArtworks && React.createElement(\"div\", {\n    className: \"loading-spinner\"\n  }));\n}\n\nLoadingSpinner.propTypes = {\n  fullscreen: PropTypes.bool,\n  isFetchingArtworks: PropTypes.bool.isRequired\n};\nLoadingSpinner.defaultProps = {\n  fullscreen: false\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetchingArtworks: state.artworkBrowser.isFetchingArtworks\n  };\n};\n\nvar _default = connect(mapStateToProps)(LoadingSpinner);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(LoadingSpinner, \"LoadingSpinner\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/main/LoadingSpinner.js"],"names":["PropTypes","React","block","connect","LoadingSpinner","fullscreen","isFetchingArtworks","b","propTypes","bool","isRequired","defaultProps","mapStateToProps","state","artworkBrowser"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,OAA6D;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;AAC3D,MAAMC,CAAC,GAAGL,KAAK,CAAC,wBAAD,CAAf;AAEA,SACE;AAAK,IAAA,SAAS,EAAEK,CAAC,CAAC;AAAEF,MAAAA,UAAU,EAAVA;AAAF,KAAD;AAAjB,KACIC,kBAAkB,IAClB;AAAK,IAAA,SAAS,EAAC;AAAf,IAFJ,CADF;AAMD;;AAEDF,cAAc,CAACI,SAAf,GAA2B;AACzBH,EAAAA,UAAU,EAAEL,SAAS,CAACS,IADG;AAEzBH,EAAAA,kBAAkB,EAAEN,SAAS,CAACS,IAAV,CAAeC;AAFV,CAA3B;AAKAN,cAAc,CAACO,YAAf,GAA8B;AAC5BN,EAAAA,UAAU,EAAE;AADgB,CAA9B;;AAIA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCP,IAAAA,kBAAkB,EAAEO,KAAK,CAACC,cAAN,CAAqBR;AADP,GAAZ;AAAA,CAAxB;;eAIeH,OAAO,CACpBS,eADoB,CAAP,CAEbR,cAFa,C;;AAAf;;;;;;;;;;;;0BAxBSA,c;0BAoBHQ,e","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { connect } from 'react-redux'\n\nfunction LoadingSpinner ({ fullscreen, isFetchingArtworks }) {\n  const b = block('auction-LoadingSpinner')\n\n  return (\n    <div className={b({ fullscreen })}>\n      { isFetchingArtworks &&\n        <div className='loading-spinner' /> }\n    </div>\n  )\n}\n\nLoadingSpinner.propTypes = {\n  fullscreen: PropTypes.bool,\n  isFetchingArtworks: PropTypes.bool.isRequired\n}\n\nLoadingSpinner.defaultProps = {\n  fullscreen: false\n}\n\nconst mapStateToProps = (state) => ({\n  isFetchingArtworks: state.artworkBrowser.isFetchingArtworks\n})\n\nexport default connect(\n  mapStateToProps\n)(LoadingSpinner)\n"]}]}