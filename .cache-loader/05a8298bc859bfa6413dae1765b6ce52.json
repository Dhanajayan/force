{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/actions/artworkBrowser.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/actions/artworkBrowser.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArtworksFailure = getArtworksFailure;\nexports.getArtworksRequest = getArtworksRequest;\nexports.getArtworksSuccess = getArtworksSuccess;\nexports.fetchArtworks = fetchArtworks;\nexports.fetchArtworksByFollowedArtists = fetchArtworksByFollowedArtists;\nexports.fetchMoreArtworks = fetchMoreArtworks;\nexports.infiniteScroll = infiniteScroll;\nexports.resetArtworks = resetArtworks;\nexports.toggleListView = toggleListView;\nexports.updateAggregatedArtists = updateAggregatedArtists;\nexports.updateAggregatedMediums = updateAggregatedMediums;\nexports.updateAllFetched = updateAllFetched;\nexports.updateArtistId = updateArtistId;\nexports.updateArtistParams = updateArtistParams;\nexports.showFollowedArtistsRail = showFollowedArtistsRail;\nexports.updateEstimateDisplay = updateEstimateDisplay;\nexports.updateEstimateRange = updateEstimateRange;\nexports.updateEstimateRangeParams = updateEstimateRangeParams;\nexports.updateInitialMediumMap = updateInitialMediumMap;\nexports.updateMediumId = updateMediumId;\nexports.updateMediumParams = updateMediumParams;\nexports.updateNumArtistsYouFollow = updateNumArtistsYouFollow;\nexports.updatePage = updatePage;\nexports.updateSaleArtworks = updateSaleArtworks;\nexports.updateSaleArtworksByFollowedArtists = updateSaleArtworksByFollowedArtists;\nexports.updateSaleArtworksByFollowedArtistsTotal = updateSaleArtworksByFollowedArtistsTotal;\nexports.updateSort = updateSort;\nexports.updateSortParam = updateSortParam;\nexports.updateTotal = updateTotal;\nexports.UPDATE_TOTAL = exports.UPDATE_SORT = exports.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL = exports.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS = exports.UPDATE_SALE_ARTWORKS = exports.UPDATE_PAGE = exports.UPDATE_NUM_ARTISTS_YOU_FOLLOW = exports.UPDATE_MEDIUM_ID = exports.UPDATE_INITIAL_MEDIUM_MAP = exports.UPDATE_ESTIMATE_RANGE = exports.UPDATE_ESTIMATE_DISPLAY = exports.UPDATE_ARTIST_ID = exports.UPDATE_ALL_FETCHED = exports.UPDATE_AGGREGATED_MEDIUMS = exports.UPDATE_AGGREGATED_ARTISTS = exports.TOGGLE_LIST_VIEW = exports.SHOW_FOLLOWED_ARTISTS_RAIL = exports.GET_ARTWORKS_SUCCESS = exports.GET_ARTWORKS_REQUEST = exports.GET_ARTWORKS_FAILURE = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _analytics_hooks = _interopRequireDefault(require(\"../../../lib/analytics_hooks.coffee\"));\n\nvar _metaphysics2 = _interopRequireDefault(require(\"../../../../lib/metaphysics.coffee\"));\n\nvar _filter = require(\"../queries/filter\");\n\nvar _worksByFollowedArtists = require(\"../queries/worksByFollowedArtists\");\n\n// FIXME: Rewire\nvar metaphysics = _metaphysics2.default; // Action types\n\nvar GET_ARTWORKS_FAILURE = 'GET_ARTWORKS_FAILURE';\nexports.GET_ARTWORKS_FAILURE = GET_ARTWORKS_FAILURE;\nvar GET_ARTWORKS_REQUEST = 'GET_ARTWORKS_REQUEST';\nexports.GET_ARTWORKS_REQUEST = GET_ARTWORKS_REQUEST;\nvar GET_ARTWORKS_SUCCESS = 'GET_ARTWORKS_SUCCESS';\nexports.GET_ARTWORKS_SUCCESS = GET_ARTWORKS_SUCCESS;\nvar SHOW_FOLLOWED_ARTISTS_RAIL = 'SHOW_FOLLOWED_ARTISTS_RAIL';\nexports.SHOW_FOLLOWED_ARTISTS_RAIL = SHOW_FOLLOWED_ARTISTS_RAIL;\nvar TOGGLE_LIST_VIEW = 'TOGGLE_LIST_VIEW';\nexports.TOGGLE_LIST_VIEW = TOGGLE_LIST_VIEW;\nvar UPDATE_AGGREGATED_ARTISTS = 'UPDATE_AGGREGATED_ARTISTS';\nexports.UPDATE_AGGREGATED_ARTISTS = UPDATE_AGGREGATED_ARTISTS;\nvar UPDATE_AGGREGATED_MEDIUMS = 'UPDATE_AGGREGATED_MEDIUMS';\nexports.UPDATE_AGGREGATED_MEDIUMS = UPDATE_AGGREGATED_MEDIUMS;\nvar UPDATE_ALL_FETCHED = 'UPDATE_ALL_FETCHED';\nexports.UPDATE_ALL_FETCHED = UPDATE_ALL_FETCHED;\nvar UPDATE_ARTIST_ID = 'UPDATE_ARTIST_ID';\nexports.UPDATE_ARTIST_ID = UPDATE_ARTIST_ID;\nvar UPDATE_ESTIMATE_DISPLAY = 'UPDATE_ESTIMATE_DISPLAY';\nexports.UPDATE_ESTIMATE_DISPLAY = UPDATE_ESTIMATE_DISPLAY;\nvar UPDATE_ESTIMATE_RANGE = 'UPDATE_ESTIMATE_RANGE';\nexports.UPDATE_ESTIMATE_RANGE = UPDATE_ESTIMATE_RANGE;\nvar UPDATE_INITIAL_MEDIUM_MAP = 'UPDATE_INITIAL_MEDIUM_MAP';\nexports.UPDATE_INITIAL_MEDIUM_MAP = UPDATE_INITIAL_MEDIUM_MAP;\nvar UPDATE_MEDIUM_ID = 'UPDATE_MEDIUM_ID';\nexports.UPDATE_MEDIUM_ID = UPDATE_MEDIUM_ID;\nvar UPDATE_NUM_ARTISTS_YOU_FOLLOW = 'UPDATE_NUM_ARTISTS_YOU_FOLLOW';\nexports.UPDATE_NUM_ARTISTS_YOU_FOLLOW = UPDATE_NUM_ARTISTS_YOU_FOLLOW;\nvar UPDATE_PAGE = 'UPDATE_PAGE';\nexports.UPDATE_PAGE = UPDATE_PAGE;\nvar UPDATE_SALE_ARTWORKS = 'UPDATE_SALE_ARTWORKS';\nexports.UPDATE_SALE_ARTWORKS = UPDATE_SALE_ARTWORKS;\nvar UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS = 'UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS';\nexports.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS = UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS;\nvar UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL = 'UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL';\nexports.UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL = UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL;\nvar UPDATE_SORT = 'UPDATE_SORT';\nexports.UPDATE_SORT = UPDATE_SORT;\nvar UPDATE_TOTAL = 'UPDATE_TOTAL'; // Action creators\n\nexports.UPDATE_TOTAL = UPDATE_TOTAL;\n\nfunction getArtworksFailure() {\n  return {\n    type: GET_ARTWORKS_FAILURE\n  };\n}\n\nfunction getArtworksRequest() {\n  return {\n    type: GET_ARTWORKS_REQUEST\n  };\n}\n\nfunction getArtworksSuccess() {\n  return {\n    type: GET_ARTWORKS_SUCCESS\n  };\n}\n\nfunction fetchArtworks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(dispatch, getState) {\n        var _getState, _getState$artworkBrow, filterParams, requestID, user, _ref2, filter_sale_artworks, aggregations, artistAggregation, mediumAggregation;\n\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _getState = getState(), _getState$artworkBrow = _getState.artworkBrowser, filterParams = _getState$artworkBrow.filterParams, requestID = _getState$artworkBrow.requestID, user = _getState$artworkBrow.user;\n                _context.prev = 1;\n                dispatch(getArtworksRequest());\n                _context.next = 5;\n                return metaphysics({\n                  query: _filter.filterQuery,\n                  variables: filterParams,\n                  req: {\n                    user: user,\n                    id: requestID\n                  }\n                });\n\n              case 5:\n                _ref2 = _context.sent;\n                filter_sale_artworks = _ref2.filter_sale_artworks;\n\n                if (filter_sale_artworks.hits && filter_sale_artworks.hits.length) {\n                  _analytics_hooks.default.trigger('auction:artworks:loaded', {\n                    data: filter_sale_artworks.hits.map(function (sale_artwork) {\n                      return sale_artwork.artwork._id;\n                    })\n                  });\n                }\n\n                aggregations = filter_sale_artworks.aggregations;\n                artistAggregation = aggregations.filter(function (agg) {\n                  return agg.slice === 'ARTIST';\n                });\n                mediumAggregation = aggregations.filter(function (agg) {\n                  return agg.slice === 'MEDIUM';\n                });\n                dispatch(updateAggregatedArtists(artistAggregation[0].counts));\n                dispatch(updateAggregatedMediums(mediumAggregation[0].counts));\n                dispatch(updateInitialMediumMap(mediumAggregation[0].counts));\n                dispatch(updateTotal(filter_sale_artworks.counts.total));\n                dispatch(updateNumArtistsYouFollow(filter_sale_artworks.counts.followed_artists));\n                dispatch(updateSaleArtworks(filter_sale_artworks.hits));\n                dispatch(updateAllFetched());\n                dispatch(getArtworksSuccess());\n                _context.next = 25;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch(getArtworksFailure());\n                console.error('error!', _context.t0);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 21]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction fetchArtworksByFollowedArtists() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(dispatch, getState) {\n        var _getState2, _getState2$artworkBro, followedArtistRailMax, followedArtistRailPage, filterParams, requestID, user, inputVars, _ref4, filter_sale_artworks;\n\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _getState2 = getState(), _getState2$artworkBro = _getState2.artworkBrowser, followedArtistRailMax = _getState2$artworkBro.followedArtistRailMax, followedArtistRailPage = _getState2$artworkBro.followedArtistRailPage, filterParams = _getState2$artworkBro.filterParams, requestID = _getState2$artworkBro.requestID, user = _getState2$artworkBro.user;\n                inputVars = {\n                  sale_id: filterParams.sale_id,\n                  page: followedArtistRailPage,\n                  size: followedArtistRailMax\n                };\n                _context2.prev = 2;\n                _context2.next = 5;\n                return metaphysics({\n                  query: _worksByFollowedArtists.worksByFollowedArtists,\n                  variables: inputVars,\n                  req: {\n                    user: user,\n                    id: requestID\n                  }\n                });\n\n              case 5:\n                _ref4 = _context2.sent;\n                filter_sale_artworks = _ref4.filter_sale_artworks;\n\n                if (filter_sale_artworks.hits.length > 0) {\n                  dispatch(updateSaleArtworksByFollowedArtists(filter_sale_artworks.hits));\n                  dispatch(updateSaleArtworksByFollowedArtistsTotal(filter_sale_artworks.counts.total));\n                  dispatch(showFollowedArtistsRail());\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error('error!', _context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction fetchMoreArtworks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3(dispatch, getState) {\n        var _getState3, _getState3$artworkBro, filterParams, user, _ref6, filter_sale_artworks;\n\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _getState3 = getState(), _getState3$artworkBro = _getState3.artworkBrowser, filterParams = _getState3$artworkBro.filterParams, user = _getState3$artworkBro.user;\n                _context3.prev = 1;\n                dispatch(getArtworksRequest());\n                _context3.next = 5;\n                return metaphysics({\n                  query: _filter.filterQuery,\n                  variables: filterParams,\n                  req: {\n                    user: user\n                  }\n                });\n\n              case 5:\n                _ref6 = _context3.sent;\n                filter_sale_artworks = _ref6.filter_sale_artworks;\n                dispatch(updateSaleArtworks(filter_sale_artworks.hits));\n                dispatch(updateAllFetched());\n                dispatch(getArtworksSuccess());\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](1);\n                dispatch(getArtworksFailure());\n                console.error('error!', _context3.t0);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 12]]);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction infiniteScroll() {\n  return function (dispatch, getState) {\n    var _getState4 = getState(),\n        _getState4$artworkBro = _getState4.artworkBrowser,\n        allFetched = _getState4$artworkBro.allFetched,\n        isFetchingArtworks = _getState4$artworkBro.isFetchingArtworks;\n\n    if (!isFetchingArtworks && !allFetched) {\n      dispatch(updatePage(false));\n      dispatch(fetchMoreArtworks());\n    }\n  };\n}\n\nfunction resetArtworks() {\n  return function (dispatch, getState) {\n    var _getState5 = getState(),\n        isFetchingArtworks = _getState5.artworkBrowser.isFetchingArtworks;\n\n    if (!isFetchingArtworks) {\n      dispatch(updatePage(true));\n      dispatch(fetchArtworks());\n    }\n  };\n}\n\nfunction toggleListView(isListView) {\n  return {\n    type: TOGGLE_LIST_VIEW,\n    payload: {\n      isListView: isListView\n    }\n  };\n}\n\nfunction updateAggregatedArtists(aggregatedArtists) {\n  return {\n    type: UPDATE_AGGREGATED_ARTISTS,\n    payload: {\n      aggregatedArtists: aggregatedArtists\n    }\n  };\n}\n\nfunction updateAggregatedMediums(aggregatedMediums) {\n  return {\n    type: UPDATE_AGGREGATED_MEDIUMS,\n    payload: {\n      aggregatedMediums: aggregatedMediums\n    }\n  };\n}\n\nfunction updateAllFetched() {\n  return {\n    type: UPDATE_ALL_FETCHED\n  };\n}\n\nfunction updateArtistId(artistId) {\n  return {\n    type: UPDATE_ARTIST_ID,\n    payload: {\n      artistId: artistId\n    }\n  };\n}\n\nfunction updateArtistParams(artistId) {\n  return function (dispatch) {\n    dispatch(updateArtistId(artistId));\n    dispatch(resetArtworks());\n  };\n}\n\nfunction showFollowedArtistsRail() {\n  return {\n    type: SHOW_FOLLOWED_ARTISTS_RAIL\n  };\n}\n\nfunction updateEstimateDisplay(min, max) {\n  return {\n    type: UPDATE_ESTIMATE_DISPLAY,\n    payload: {\n      min: min,\n      max: max\n    }\n  };\n}\n\nfunction updateEstimateRange(min, max) {\n  return function (dispatch) {\n    dispatch(updateEstimateRangeParams(min, max));\n    dispatch(resetArtworks());\n  };\n}\n\nfunction updateEstimateRangeParams(min, max) {\n  return {\n    type: UPDATE_ESTIMATE_RANGE,\n    payload: {\n      min: min,\n      max: max\n    }\n  };\n}\n\nfunction updateInitialMediumMap(initialMediumMap) {\n  return {\n    type: UPDATE_INITIAL_MEDIUM_MAP,\n    payload: {\n      initialMediumMap: initialMediumMap\n    }\n  };\n}\n\nfunction updateMediumId(mediumId) {\n  return {\n    type: UPDATE_MEDIUM_ID,\n    payload: {\n      mediumId: mediumId\n    }\n  };\n}\n\nfunction updateMediumParams(mediumId) {\n  return function (dispatch) {\n    dispatch(updateMediumId(mediumId));\n    dispatch(resetArtworks());\n  };\n}\n\nfunction updateNumArtistsYouFollow(numArtistsYouFollow) {\n  return {\n    type: UPDATE_NUM_ARTISTS_YOU_FOLLOW,\n    payload: {\n      numArtistsYouFollow: numArtistsYouFollow\n    }\n  };\n}\n\nfunction updatePage(reset) {\n  return {\n    type: UPDATE_PAGE,\n    payload: {\n      reset: reset\n    }\n  };\n}\n\nfunction updateSaleArtworks(saleArtworks) {\n  return {\n    type: UPDATE_SALE_ARTWORKS,\n    payload: {\n      saleArtworks: saleArtworks\n    }\n  };\n}\n\nfunction updateSaleArtworksByFollowedArtists(saleArtworks) {\n  return {\n    type: UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS,\n    payload: {\n      saleArtworks: saleArtworks\n    }\n  };\n}\n\nfunction updateSaleArtworksByFollowedArtistsTotal(total) {\n  return {\n    type: UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL,\n    payload: {\n      total: total\n    }\n  };\n}\n\nfunction updateSort(sort) {\n  return function (dispatch) {\n    dispatch(updateSortParam(sort));\n    dispatch(resetArtworks());\n  };\n}\n\nfunction updateSortParam(sort) {\n  return {\n    type: UPDATE_SORT,\n    payload: {\n      sort: sort\n    }\n  };\n}\n\nfunction updateTotal(total) {\n  return {\n    type: UPDATE_TOTAL,\n    payload: {\n      total: total\n    }\n  };\n}",{"version":3,"sources":["src/desktop/apps/auction/actions/artworkBrowser.js"],"names":["metaphysics","GET_ARTWORKS_FAILURE","GET_ARTWORKS_REQUEST","GET_ARTWORKS_SUCCESS","SHOW_FOLLOWED_ARTISTS_RAIL","TOGGLE_LIST_VIEW","UPDATE_AGGREGATED_ARTISTS","UPDATE_AGGREGATED_MEDIUMS","UPDATE_ALL_FETCHED","UPDATE_ARTIST_ID","UPDATE_ESTIMATE_DISPLAY","UPDATE_ESTIMATE_RANGE","UPDATE_INITIAL_MEDIUM_MAP","UPDATE_MEDIUM_ID","UPDATE_NUM_ARTISTS_YOU_FOLLOW","UPDATE_PAGE","UPDATE_SALE_ARTWORKS","UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS","UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL","UPDATE_SORT","UPDATE_TOTAL","getArtworksFailure","type","getArtworksRequest","getArtworksSuccess","fetchArtworks","dispatch","getState","artworkBrowser","filterParams","requestID","user","query","variables","req","id","filter_sale_artworks","hits","length","trigger","data","map","sale_artwork","artwork","_id","aggregations","artistAggregation","filter","agg","slice","mediumAggregation","updateAggregatedArtists","counts","updateAggregatedMediums","updateInitialMediumMap","updateTotal","total","updateNumArtistsYouFollow","followed_artists","updateSaleArtworks","updateAllFetched","console","error","fetchArtworksByFollowedArtists","followedArtistRailMax","followedArtistRailPage","inputVars","sale_id","page","size","updateSaleArtworksByFollowedArtists","updateSaleArtworksByFollowedArtistsTotal","showFollowedArtistsRail","fetchMoreArtworks","infiniteScroll","allFetched","isFetchingArtworks","updatePage","resetArtworks","toggleListView","isListView","payload","aggregatedArtists","aggregatedMediums","updateArtistId","artistId","updateArtistParams","updateEstimateDisplay","min","max","updateEstimateRange","updateEstimateRangeParams","initialMediumMap","updateMediumId","mediumId","updateMediumParams","numArtistsYouFollow","reset","saleArtworks","updateSort","sort","updateSortParam"],"mappings":"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","file":"/Users/eve/development/force/src/desktop/apps/auction/actions/artworkBrowser.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import analyticsHooks from 'desktop/lib/analytics_hooks.coffee'\nimport _metaphysics from 'lib/metaphysics.coffee'\nimport { filterQuery } from 'desktop/apps/auction/queries/filter'\nimport { worksByFollowedArtists } from 'desktop/apps/auction/queries/worksByFollowedArtists'\n\n// FIXME: Rewire\nlet metaphysics = _metaphysics\n\n// Action types\nexport const GET_ARTWORKS_FAILURE = 'GET_ARTWORKS_FAILURE'\nexport const GET_ARTWORKS_REQUEST = 'GET_ARTWORKS_REQUEST'\nexport const GET_ARTWORKS_SUCCESS = 'GET_ARTWORKS_SUCCESS'\nexport const SHOW_FOLLOWED_ARTISTS_RAIL = 'SHOW_FOLLOWED_ARTISTS_RAIL'\nexport const TOGGLE_LIST_VIEW = 'TOGGLE_LIST_VIEW'\nexport const UPDATE_AGGREGATED_ARTISTS = 'UPDATE_AGGREGATED_ARTISTS'\nexport const UPDATE_AGGREGATED_MEDIUMS = 'UPDATE_AGGREGATED_MEDIUMS'\nexport const UPDATE_ALL_FETCHED = 'UPDATE_ALL_FETCHED'\nexport const UPDATE_ARTIST_ID = 'UPDATE_ARTIST_ID'\nexport const UPDATE_ESTIMATE_DISPLAY = 'UPDATE_ESTIMATE_DISPLAY'\nexport const UPDATE_ESTIMATE_RANGE = 'UPDATE_ESTIMATE_RANGE'\nexport const UPDATE_INITIAL_MEDIUM_MAP = 'UPDATE_INITIAL_MEDIUM_MAP'\nexport const UPDATE_MEDIUM_ID = 'UPDATE_MEDIUM_ID'\nexport const UPDATE_NUM_ARTISTS_YOU_FOLLOW = 'UPDATE_NUM_ARTISTS_YOU_FOLLOW'\nexport const UPDATE_PAGE = 'UPDATE_PAGE'\nexport const UPDATE_SALE_ARTWORKS = 'UPDATE_SALE_ARTWORKS'\nexport const UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS = 'UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS'\nexport const UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL = 'UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL'\nexport const UPDATE_SORT = 'UPDATE_SORT'\nexport const UPDATE_TOTAL = 'UPDATE_TOTAL'\n\n// Action creators\nexport function getArtworksFailure () {\n  return {\n    type: GET_ARTWORKS_FAILURE\n  }\n}\n\nexport function getArtworksRequest () {\n  return {\n    type: GET_ARTWORKS_REQUEST\n  }\n}\n\nexport function getArtworksSuccess () {\n  return {\n    type: GET_ARTWORKS_SUCCESS\n  }\n}\n\nexport function fetchArtworks () {\n  return async (dispatch, getState) => {\n    const {\n      artworkBrowser: {\n        filterParams,\n        requestID,\n        user\n      }\n    } = getState()\n\n    try {\n      dispatch(getArtworksRequest())\n\n      const { filter_sale_artworks } = await metaphysics({\n        query: filterQuery,\n        variables: filterParams,\n        req: {\n          user,\n          id: requestID\n        }\n      })\n\n      if (filter_sale_artworks.hits && filter_sale_artworks.hits.length) {\n        analyticsHooks.trigger(\n          'auction:artworks:loaded',\n          { data: filter_sale_artworks.hits.map((sale_artwork) => sale_artwork.artwork._id) }\n        )\n      }\n\n      const aggregations = filter_sale_artworks.aggregations\n      const artistAggregation = aggregations.filter((agg) => agg.slice === 'ARTIST')\n      const mediumAggregation = aggregations.filter((agg) => agg.slice === 'MEDIUM')\n\n      dispatch(updateAggregatedArtists(artistAggregation[0].counts))\n      dispatch(updateAggregatedMediums(mediumAggregation[0].counts))\n      dispatch(updateInitialMediumMap(mediumAggregation[0].counts))\n      dispatch(updateTotal(filter_sale_artworks.counts.total))\n      dispatch(updateNumArtistsYouFollow(filter_sale_artworks.counts.followed_artists))\n      dispatch(updateSaleArtworks(filter_sale_artworks.hits))\n      dispatch(updateAllFetched())\n      dispatch(getArtworksSuccess())\n    } catch (error) {\n      dispatch(getArtworksFailure())\n      console.error('error!', error)\n    }\n  }\n}\n\nexport function fetchArtworksByFollowedArtists () {\n  return async (dispatch, getState) => {\n    const {\n      artworkBrowser: {\n        followedArtistRailMax,\n        followedArtistRailPage,\n        filterParams,\n        requestID,\n        user\n      }\n    } = getState()\n\n    const inputVars = {\n      sale_id: filterParams.sale_id,\n      page: followedArtistRailPage,\n      size: followedArtistRailMax\n    }\n\n    try {\n      const { filter_sale_artworks } = await metaphysics({\n        query: worksByFollowedArtists,\n        variables: inputVars,\n        req: {\n          user,\n          id: requestID\n        }\n      })\n      if (filter_sale_artworks.hits.length > 0) {\n        dispatch(updateSaleArtworksByFollowedArtists(filter_sale_artworks.hits))\n        dispatch(updateSaleArtworksByFollowedArtistsTotal(filter_sale_artworks.counts.total))\n        dispatch(showFollowedArtistsRail())\n      }\n    } catch (error) {\n      console.error('error!', error)\n    }\n  }\n}\n\nexport function fetchMoreArtworks () {\n  return async (dispatch, getState) => {\n    const {\n      artworkBrowser: {\n        filterParams,\n        user\n      }\n    } = getState()\n\n    try {\n      dispatch(getArtworksRequest())\n      const { filter_sale_artworks } = await metaphysics({\n        query: filterQuery,\n        variables: filterParams,\n        req: {\n          user\n        }\n      })\n      dispatch(updateSaleArtworks(filter_sale_artworks.hits))\n      dispatch(updateAllFetched())\n      dispatch(getArtworksSuccess())\n    } catch (error) {\n      dispatch(getArtworksFailure())\n      console.error('error!', error)\n    }\n  }\n}\n\nexport function infiniteScroll () {\n  return (dispatch, getState) => {\n    const {\n      artworkBrowser: {\n        allFetched,\n        isFetchingArtworks\n      }\n    } = getState()\n    if (!isFetchingArtworks && !allFetched) {\n      dispatch(updatePage(false))\n      dispatch(fetchMoreArtworks())\n    }\n  }\n}\n\nexport function resetArtworks () {\n  return (dispatch, getState) => {\n    const {\n      artworkBrowser: {\n        isFetchingArtworks\n      }\n    } = getState()\n    if (!isFetchingArtworks) {\n      dispatch(updatePage(true))\n      dispatch(fetchArtworks())\n    }\n  }\n}\n\nexport function toggleListView (isListView) {\n  return {\n    type: TOGGLE_LIST_VIEW,\n    payload: {\n      isListView\n    }\n  }\n}\n\nexport function updateAggregatedArtists (aggregatedArtists) {\n  return {\n    type: UPDATE_AGGREGATED_ARTISTS,\n    payload: {\n      aggregatedArtists\n    }\n  }\n}\n\nexport function updateAggregatedMediums (aggregatedMediums) {\n  return {\n    type: UPDATE_AGGREGATED_MEDIUMS,\n    payload: {\n      aggregatedMediums\n    }\n  }\n}\n\nexport function updateAllFetched () {\n  return {\n    type: UPDATE_ALL_FETCHED\n  }\n}\n\nexport function updateArtistId (artistId) {\n  return {\n    type: UPDATE_ARTIST_ID,\n    payload: {\n      artistId\n    }\n  }\n}\n\nexport function updateArtistParams (artistId) {\n  return (dispatch) => {\n    dispatch(updateArtistId(artistId))\n    dispatch(resetArtworks())\n  }\n}\n\nexport function showFollowedArtistsRail () {\n  return {\n    type: SHOW_FOLLOWED_ARTISTS_RAIL\n  }\n}\n\nexport function updateEstimateDisplay (min, max) {\n  return {\n    type: UPDATE_ESTIMATE_DISPLAY,\n    payload: {\n      min,\n      max\n    }\n  }\n}\n\nexport function updateEstimateRange (min, max) {\n  return (dispatch) => {\n    dispatch(updateEstimateRangeParams(min, max))\n    dispatch(resetArtworks())\n  }\n}\n\nexport function updateEstimateRangeParams (min, max) {\n  return {\n    type: UPDATE_ESTIMATE_RANGE,\n    payload: {\n      min,\n      max\n    }\n  }\n}\n\nexport function updateInitialMediumMap (initialMediumMap) {\n  return {\n    type: UPDATE_INITIAL_MEDIUM_MAP,\n    payload: {\n      initialMediumMap\n    }\n  }\n}\n\nexport function updateMediumId (mediumId) {\n  return {\n    type: UPDATE_MEDIUM_ID,\n    payload: {\n      mediumId\n    }\n  }\n}\n\nexport function updateMediumParams (mediumId) {\n  return (dispatch) => {\n    dispatch(updateMediumId(mediumId))\n    dispatch(resetArtworks())\n  }\n}\n\nexport function updateNumArtistsYouFollow (numArtistsYouFollow) {\n  return {\n    type: UPDATE_NUM_ARTISTS_YOU_FOLLOW,\n    payload: {\n      numArtistsYouFollow\n    }\n  }\n}\n\nexport function updatePage (reset) {\n  return {\n    type: UPDATE_PAGE,\n    payload: {\n      reset\n    }\n  }\n}\n\nexport function updateSaleArtworks (saleArtworks) {\n  return {\n    type: UPDATE_SALE_ARTWORKS,\n    payload: {\n      saleArtworks\n    }\n  }\n}\n\nexport function updateSaleArtworksByFollowedArtists (saleArtworks) {\n  return {\n    type: UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS,\n    payload: {\n      saleArtworks\n    }\n  }\n}\n\nexport function updateSaleArtworksByFollowedArtistsTotal (total) {\n  return {\n    type: UPDATE_SALE_ARTWORKS_BY_FOLLOWED_ARTISTS_TOTAL,\n    payload: {\n      total\n    }\n  }\n}\n\nexport function updateSort (sort) {\n  return (dispatch) => {\n    dispatch(updateSortParam(sort))\n    dispatch(resetArtworks())\n  }\n}\n\nexport function updateSortParam (sort) {\n  return {\n    type: UPDATE_SORT,\n    payload: {\n      sort\n    }\n  }\n}\n\nexport function updateTotal (total) {\n  return {\n    type: UPDATE_TOTAL,\n    payload: {\n      total\n    }\n  }\n}\n"]}]}