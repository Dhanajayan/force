{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mount;\nObject.defineProperty(exports, \"CurrentAuctions\", {\n  enumerable: true,\n  get: function get() {\n    return _current_auctions.default;\n  }\n});\n\nvar _current_auctions = _interopRequireDefault(require(\"./current_auctions\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _underscore = require(\"underscore\");\n\nfunction mount(data) {\n  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#react-mount-current-auctions';\n  var auctionContextId = data.auctionContextId,\n      sales = data.sales;\n  var shouldMount = !(0, _underscore.isEmpty)(sales) && (0, _underscore.isString)(selector);\n  (0, _invariant.default)(shouldMount, \"Error mounting <CurrentAuctions />: sales (\".concat(sales.map(function (s) {\n    return s.id;\n  }), \") or \") + \"selector (\".concat(selector, \") is invalid.\"));\n\n  if (shouldMount) {\n    var mountPoint = document.querySelector(selector);\n\n    _reactDom.default.render(_react.default.createElement(_current_auctions.default, {\n      auctionContextId: auctionContextId,\n      sales: sales\n    }), mountPoint);\n  }\n}",{"version":3,"sources":["src/desktop/components/react/current_auctions/index.js"],"names":["mount","data","selector","auctionContextId","sales","shouldMount","map","s","id","mountPoint","document","querySelector","render"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAIe,SAASA,KAAT,CACbC,IADa,EAGb;AAAA,MADAC,QACA,uEADW,+BACX;AAAA,MACQC,gBADR,GACoCF,IADpC,CACQE,gBADR;AAAA,MAC0BC,KAD1B,GACoCH,IADpC,CAC0BG,KAD1B;AAEA,MAAMC,cAAc,CAAC,yBAAQD,KAAR,CAAD,IAAmB,0BAASF,QAAT,CAAvC;AAEA,0BACEG,WADF,EAEE,qDAA8CD,MAAME,GAAN,CAC5C,UAACC,CAAD;AAAA,WAAOA,EAAEC,EAAT;AAAA,GAD4C,CAA9C,iCAEwBN,QAFxB,kBAFF;;AAOA,MAAIG,WAAJ,EAAiB;AACf,QAAMI,aAAaC,SAASC,aAAT,CAAuBT,QAAvB,CAAnB;;AAEA,sBAASU,MAAT,CACE;AAAiB,wBAAkBT,gBAAnC;AAAqD,aAAOC;AAA5D,MADF,EAEEK,UAFF;AAID;AACF","file":"/Users/eve/development/force/src/desktop/components/react/current_auctions/index.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import CurrentAuctions from './current_auctions'\nimport invariant from 'invariant'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { isEmpty, isString } from 'underscore'\n\nexport { CurrentAuctions }\n\nexport default function mount(\n  data,\n  selector = '#react-mount-current-auctions'\n) {\n  const { auctionContextId, sales } = data\n  const shouldMount = !isEmpty(sales) && isString(selector)\n\n  invariant(\n    shouldMount,\n    `Error mounting <CurrentAuctions />: sales (${sales.map(\n      (s) => s.id\n    )}) or ` + `selector (${selector}) is invalid.`\n  )\n\n  if (shouldMount) {\n    const mountPoint = document.querySelector(selector)\n\n    ReactDOM.render(\n      <CurrentAuctions auctionContextId={auctionContextId} sales={sales} />,\n      mountPoint\n    )\n  }\n}\n"]}]}