{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/queries/filter.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/queries/filter.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterQuery = void 0;\nvar filterQuery = \"\\n  query filterSaleArtworks(\\n    $aggregations: [SaleArtworkAggregation],\\n    $page: Int,\\n    $size: Int,\\n    $estimate_range: String,\\n    $gene_ids: [String],\\n    $artist_ids: [String],\\n    $sale_id: ID,\\n    $sort: String,\\n    $include_artworks_by_followed_artists: Boolean\\n  ){\\n    filter_sale_artworks(\\n      aggregations: $aggregations,\\n      page: $page,\\n      size: $size,\\n      estimate_range: $estimate_range,\\n      gene_ids: $gene_ids,\\n      artist_ids: $artist_ids,\\n      sale_id: $sale_id,\\n      sort: $sort,\\n      include_artworks_by_followed_artists: $include_artworks_by_followed_artists\\n    ){\\n      aggregations {\\n        slice\\n        counts {\\n          id\\n          name\\n          count\\n        }\\n      }\\n      counts {\\n        total\\n        followed_artists\\n      }\\n      hits {\\n        id\\n        lot_label\\n        counts {\\n          bidder_positions\\n        }\\n        current_bid {\\n          display\\n        }\\n        artwork {\\n          __id\\n          _id\\n          id\\n          date\\n          href\\n          title\\n          is_sold\\n          image {\\n            url\\n          }\\n          sale_message\\n          images {\\n            aspect_ratio,\\n            id\\n            image_url: url(version: \\\"large\\\")\\n            image_large: url(version: \\\"large\\\")\\n            image_medium: url(version: \\\"medium\\\")\\n            image_versions: versions\\n            placeholder: resized(width: 30, height: 30, version: \\\"tall\\\") {\\n              image_url: url\\n            }\\n          }\\n\\n          artist {\\n            name\\n          }\\n          artists {\\n            id\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\";\nexports.filterQuery = filterQuery;",{"version":3,"sources":["src/desktop/apps/auction/queries/filter.js"],"names":["filterQuery"],"mappings":";;;;;;AAAO,IAAMA,ssDAAN","file":"/Users/eve/development/force/src/desktop/apps/auction/queries/filter.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["export const filterQuery = `\n  query filterSaleArtworks(\n    $aggregations: [SaleArtworkAggregation],\n    $page: Int,\n    $size: Int,\n    $estimate_range: String,\n    $gene_ids: [String],\n    $artist_ids: [String],\n    $sale_id: ID,\n    $sort: String,\n    $include_artworks_by_followed_artists: Boolean\n  ){\n    filter_sale_artworks(\n      aggregations: $aggregations,\n      page: $page,\n      size: $size,\n      estimate_range: $estimate_range,\n      gene_ids: $gene_ids,\n      artist_ids: $artist_ids,\n      sale_id: $sale_id,\n      sort: $sort,\n      include_artworks_by_followed_artists: $include_artworks_by_followed_artists\n    ){\n      aggregations {\n        slice\n        counts {\n          id\n          name\n          count\n        }\n      }\n      counts {\n        total\n        followed_artists\n      }\n      hits {\n        id\n        lot_label\n        counts {\n          bidder_positions\n        }\n        current_bid {\n          display\n        }\n        artwork {\n          __id\n          _id\n          id\n          date\n          href\n          title\n          is_sold\n          image {\n            url\n          }\n          sale_message\n          images {\n            aspect_ratio,\n            id\n            image_url: url(version: \"large\")\n            image_large: url(version: \"large\")\n            image_medium: url(version: \"medium\")\n            image_versions: versions\n            placeholder: resized(width: 30, height: 30, version: \"tall\") {\n              image_url: url\n            }\n          }\n\n          artist {\n            name\n          }\n          artists {\n            id\n            name\n          }\n        }\n      }\n    }\n  }`\n"]}]}