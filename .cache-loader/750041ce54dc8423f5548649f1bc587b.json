{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/lib/components/record_artwork_view/index.js","dependencies":[{"path":"/Users/eve/development/force/src/lib/components/record_artwork_view/index.js","mtime":1524156693000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport _metaphysics from \"../../../lib/metaphysics.coffee\";\nimport query from \"./mutation\"; // FIXME: Rewire\n\nvar metaphysics = _metaphysics;\nexport var recordArtworkView = function recordArtworkView(artwork_id, user) {\n  if (user === null) {\n    return;\n  }\n\n  var send = {\n    query: query,\n    variables: {\n      artwork_id: artwork_id\n    },\n    req: {\n      user: user\n    } // We don't need to do anything on success.\n\n  };\n  metaphysics(send).catch(console.error.bind(console));\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(metaphysics, \"metaphysics\", \"/Users/eve/development/force/src/lib/components/record_artwork_view/index.js\");\n  reactHotLoader.register(recordArtworkView, \"recordArtworkView\", \"/Users/eve/development/force/src/lib/components/record_artwork_view/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/lib/components/record_artwork_view/index.js"],"names":["_metaphysics","query","metaphysics","recordArtworkView","artwork_id","user","send","variables","req","catch","console","error","bind"],"mappings":";;;;;;AAAA,OAAOA,YAAP;AACA,OAAOC,KAAP,mB,CAEA;;AACA,IAAIC,WAAW,GAAGF,YAAlB;AAEA,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAaC,IAAb,EAAsB;AACrD,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB;AACD;;AACD,MAAMC,IAAI,GAAG;AACXL,IAAAA,KAAK,EAALA,KADW;AAEXM,IAAAA,SAAS,EAAE;AAAEH,MAAAA,UAAU,EAAVA;AAAF,KAFA;AAGXI,IAAAA,GAAG,EAAE;AAAEH,MAAAA,IAAI,EAAJA;AAAF,KAHM,CAKb;;AALa,GAAb;AAMAH,EAAAA,WAAW,CAACI,IAAD,CAAX,CAAkBG,KAAlB,CAAwBC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAAxB;AACD,CAXM;;;;;;;;;;;;0BAFHR,W;0BAESC,iB","sourcesContent":["import _metaphysics from '../../../lib/metaphysics.coffee'\nimport query from './mutation'\n\n// FIXME: Rewire\nlet metaphysics = _metaphysics\n\nexport const recordArtworkView = (artwork_id, user) => {\n  if (user === null) {\n    return\n  }\n  const send = {\n    query,\n    variables: { artwork_id },\n    req: { user },\n  }\n  // We don't need to do anything on success.\n  metaphysics(send).catch(console.error.bind(console))\n}\n"]}]}