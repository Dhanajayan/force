{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js","mtime":1521064654000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reveal = void 0;\n\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime/core-js/object/get-prototype-of\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\n\nvar _Icon = _interopRequireDefault(require(\"@artsy/reaction/dist/Components/Icon\"));\n\nvar Reveal =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2.default)(Reveal, _Component);\n\n  function Reveal() {\n    var _ref;\n\n    var _temp, _this;\n\n    (0, _classCallCheck2.default)(this, Reveal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Reveal.__proto__ || (0, _getPrototypeOf.default)(Reveal)).call.apply(_ref, [this].concat(args))), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        isExpanded: false\n      }\n    }), Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"handleExpandClick\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        if (_this.props.isEnabled) {\n          _this.toggle();\n        }\n      }\n    }), _temp));\n  }\n\n  (0, _createClass2.default)(Reveal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var isExpanded = this.props.isExpanded;\n      this.setState({\n        isExpanded: isExpanded\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var isExpanded = !this.state.isExpanded;\n      this.setState({\n        isExpanded: isExpanded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          coverHeight = _props.coverHeight,\n          isEnabled = _props.isEnabled;\n      var isExpanded = this.state.isExpanded;\n      var maskContent = !isExpanded && isEnabled;\n      return _react.default.createElement(OuterContainer, null, _react.default.createElement(InnerContainer, {\n        isEnabled: maskContent,\n        isExpanded: isExpanded,\n        coverHeight: coverHeight\n      }, this.props.children), maskContent && _react.default.createElement(Revealer, null, _react.default.createElement(Button, {\n        onClick: this.handleExpandClick\n      }, _react.default.createElement(_Icon.default, {\n        name: \"chevron-down\",\n        color: \"black\",\n        fontSize: \"24px\",\n        style: {\n          fontWeight: 'bold'\n        }\n      }))));\n    }\n  }]);\n  return Reveal;\n}(_react.Component);\n\nexports.Reveal = Reveal;\nObject.defineProperty(Reveal, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    children: _propTypes.default.node.isRequired,\n    isEnabled: _propTypes.default.bool,\n    isExpanded: _propTypes.default.bool,\n    coverHeight: _propTypes.default.number\n  }\n});\nObject.defineProperty(Reveal, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    isEnabled: false,\n    isExpanded: false,\n    coverHeight: 450\n  }\n});\nvar BottomBorder =\n/*#__PURE__*/\n(0, _styledComponents.css)([\"content:'';border-bottom:1px solid #e5e5e5;bottom:50%;width:120%;right:-20px;position:absolute;\"]);\n\nvar OuterContainer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Reveal__OuterContainer\",\n  componentId: \"g02hv4-0\"\n})([\"position:relative;\"]);\n\nvar InnerContainer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Reveal__InnerContainer\",\n  componentId: \"g02hv4-1\"\n})([\"\", \";\"], function (props) {\n  if (props.isEnabled) {\n    return \"\\n        overflow: hidden;\\n        height: \".concat(props.coverHeight, \"px;\\n      \");\n  } else if (props.isExpanded) {\n    return \"\\n        &:after {\\n          padding-top: 19px;\\n          \".concat(BottomBorder, \"\\n          bottom: inherit;\\n        }\\n      \");\n  }\n});\n\nvar Revealer =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Reveal__Revealer\",\n  componentId: \"g02hv4-2\"\n})([\"width:100%;height:48px;position:absolute;bottom:-25px;&:before{\", \";}\"], BottomBorder);\n\nvar Button =\n/*#__PURE__*/\n_styledComponents.default.div.withConfig({\n  displayName: \"Reveal__Button\",\n  componentId: \"g02hv4-3\"\n})([\"cursor:pointer;background-color:white;border:1px solid #e5e5e5;border-radius:45px;height:45px;left:50%;padding:12px 5px;position:absolute;top:50%;transform:translate(-50%,-50%);width:45px;z-index:1;> span{font-size:26px;}\"]);\n\nOuterContainer.displayName = 'OuterContainer';\nInnerContainer.displayName = 'InnerContainer';\nRevealer.displayName = 'Revealer';\nButton.displayName = 'Button';",{"version":3,"sources":["src/desktop/components/react/masonry_grid/Reveal.js"],"names":["Reveal","isExpanded","props","isEnabled","toggle","setState","state","coverHeight","maskContent","children","handleExpandClick","fontWeight","node","isRequired","bool","number","BottomBorder","OuterContainer","div","InnerContainer","Revealer","Button","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEaA,M;;;;;;;;;;;;;;;;;;;;aAcH;AACNC,oBAAY;AADN;;;;;aAoBY,iBAAM;AACxB,YAAI,MAAKC,KAAL,CAAWC,SAAf,EAA0B;AACxB,gBAAKC,MAAL;AACD;AACF;;;;;;yCApBoB;AAAA,UACXH,UADW,GACI,KAAKC,KADT,CACXD,UADW;AAGnB,WAAKI,QAAL,CAAc;AACZJ;AADY,OAAd;AAGD;;;6BAEQ;AACP,UAAMA,aAAa,CAAC,KAAKK,KAAL,CAAWL,UAA/B;AAEA,WAAKI,QAAL,CAAc;AACZJ;AADY,OAAd;AAGD;;;6BAQQ;AAAA,mBAC4B,KAAKC,KADjC;AAAA,UACCK,WADD,UACCA,WADD;AAAA,UACcJ,SADd,UACcA,SADd;AAAA,UAECF,UAFD,GAEgB,KAAKK,KAFrB,CAECL,UAFD;AAGP,UAAMO,cAAc,CAACP,UAAD,IAAeE,SAAnC;AAEA,aACE,6BAAC,cAAD,QACE,6BAAC,cAAD;AACE,mBAAWK,WADb;AAEE,oBAAYP,UAFd;AAGE,qBAAaM;AAHf,SAKG,KAAKL,KAAL,CAAWO,QALd,CADF,EASGD,eACC,6BAAC,QAAD,QACE,6BAAC,MAAD;AAAQ,iBAAS,KAAKE;AAAtB,SACE;AACE,cAAK,cADP;AAEE,eAAM,OAFR;AAGE,kBAAS,MAHX;AAIE,eAAO;AACLC,sBAAY;AADP;AAJT,QADF,CADF,CAVJ,CADF;AA0BD;;;;;;sBAvEUX,M;;;;SACQ;AACjBS,cAAU,mBAAUG,IAAV,CAAeC,UADR;AAEjBV,eAAW,mBAAUW,IAFJ;AAGjBb,gBAAY,mBAAUa,IAHL;AAIjBP,iBAAa,mBAAUQ;AAJN;;sBADRf,M;;;;SAQW;AACpBG,eAAW,KADS;AAEpBF,gBAAY,KAFQ;AAGpBM,iBAAa;AAHO;;AAkExB,IAAMS;AAAA;AAAA,+HAAN;;AASA,IAAMC;AAAA;AAAiB,0BAAOC,GAAxB;AAAA;AAAA;AAAA,0BAAN;;AAIA,IAAMC;AAAA;AAAiB,0BAAOD,GAAxB;AAAA;AAAA;AAAA,cACF,UAAChB,KAAD,EAAW;AACX,MAAIA,MAAMC,SAAV,EAAqB;AACnB,kEAEYD,MAAMK,WAFlB;AAID,GALD,MAKO,IAAIL,MAAMD,UAAV,EAAsB;AAC3B,kFAGMe,YAHN;AAOD;AACF,CAhBG,CAAN;;AAmBA,IAAMI;AAAA;AAAW,0BAAOF,GAAlB;AAAA;AAAA;AAAA,8EAOAF,YAPA,CAAN;;AAWA,IAAMK;AAAA;AAAS,0BAAOH,GAAhB;AAAA;AAAA;AAAA,qOAAN;;AAmBAD,eAAeK,WAAf,GAA6B,gBAA7B;AACAH,eAAeG,WAAf,GAA6B,gBAA7B;AACAF,SAASE,WAAT,GAAuB,UAAvB;AACAD,OAAOC,WAAP,GAAqB,QAArB","file":"/Users/eve/development/force/src/desktop/components/react/masonry_grid/Reveal.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport styled, { css } from 'styled-components'\nimport Icon from 'reaction/Components/Icon'\n\nexport class Reveal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isEnabled: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    coverHeight: PropTypes.number,\n  }\n\n  static defaultProps = {\n    isEnabled: false,\n    isExpanded: false,\n    coverHeight: 450,\n  }\n\n  state = {\n    isExpanded: false,\n  }\n\n  componentWillMount() {\n    const { isExpanded } = this.props\n\n    this.setState({\n      isExpanded,\n    })\n  }\n\n  toggle() {\n    const isExpanded = !this.state.isExpanded\n\n    this.setState({\n      isExpanded,\n    })\n  }\n\n  handleExpandClick = () => {\n    if (this.props.isEnabled) {\n      this.toggle()\n    }\n  }\n\n  render() {\n    const { coverHeight, isEnabled } = this.props\n    const { isExpanded } = this.state\n    const maskContent = !isExpanded && isEnabled\n\n    return (\n      <OuterContainer>\n        <InnerContainer\n          isEnabled={maskContent}\n          isExpanded={isExpanded}\n          coverHeight={coverHeight}\n        >\n          {this.props.children}\n        </InnerContainer>\n\n        {maskContent && (\n          <Revealer>\n            <Button onClick={this.handleExpandClick}>\n              <Icon\n                name=\"chevron-down\"\n                color=\"black\"\n                fontSize=\"24px\"\n                style={{\n                  fontWeight: 'bold',\n                }}\n              />\n            </Button>\n          </Revealer>\n        )}\n      </OuterContainer>\n    )\n  }\n}\n\nconst BottomBorder = css`\n  content: '';\n  border-bottom: 1px solid #e5e5e5;\n  bottom: 50%;\n  width: 120%;\n  right: -20px;\n  position: absolute;\n`\n\nconst OuterContainer = styled.div`\n  position: relative;\n`\n\nconst InnerContainer = styled.div`\n  ${(props) => {\n    if (props.isEnabled) {\n      return `\n        overflow: hidden;\n        height: ${props.coverHeight}px;\n      `\n    } else if (props.isExpanded) {\n      return `\n        &:after {\n          padding-top: 19px;\n          ${BottomBorder}\n          bottom: inherit;\n        }\n      `\n    }\n  }};\n`\n\nconst Revealer = styled.div`\n  width: 100%;\n  height: 48px;\n  position: absolute;\n  bottom: -25px;\n\n  &:before {\n    ${BottomBorder};\n  }\n`\n\nconst Button = styled.div`\n  cursor: pointer;\n  background-color: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 45px;\n  height: 45px;\n  left: 50%;\n  padding: 12px 5px;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 45px;\n  z-index: 1;\n\n  > span {\n    font-size: 26px;\n  }\n`\n\nOuterContainer.displayName = 'OuterContainer'\nInnerContainer.displayName = 'InnerContainer'\nRevealer.displayName = 'Revealer'\nButton.displayName = 'Button'\n"]}]}