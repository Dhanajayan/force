{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport _ from 'underscore';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport { connect } from 'react-redux';\nimport { updateSort } from \"../../../actions/artworkBrowser\";\n\nfunction FilterSort(props) {\n  var filterParams = props.filterParams,\n      sortMap = props.sortMap,\n      updateSortAction = props.updateSortAction;\n  var selectedSort = filterParams.sort;\n  var itemHeight = 37;\n  var itemIndex = Object.keys(sortMap).indexOf(selectedSort);\n  var optionsOffset = itemIndex * itemHeight;\n  var b = block('auction-FilterSort');\n  return React.createElement(\"div\", {\n    className: b()\n  }, React.createElement(\"span\", {\n    className: b.builder()('label').mix('bordered-pulldown-label')()\n  }, \"Sort by:\"), React.createElement(\"div\", {\n    className: \"bordered-pulldown\"\n  }, React.createElement(\"a\", {\n    className: \"bordered-pulldown-toggle\",\n    href: \"#\"\n  }, React.createElement(\"span\", {\n    className: \"bordered-pulldown-text\"\n  }, sortMap[selectedSort]), React.createElement(\"div\", {\n    className: \"bordered-pulldown-toggle-caret\"\n  }, React.createElement(\"span\", {\n    className: \"caret\"\n  }))), React.createElement(\"div\", {\n    className: \"bordered-pulldown-options\",\n    style: {\n      top: -optionsOffset\n    }\n  }, _.map(sortMap, function (sortName, sort) {\n    var selected = sort === selectedSort;\n    return React.createElement(\"a\", {\n      href: \"#\",\n      className: selected ? 'borderd-pulldown-active' : '',\n      key: sort,\n      onClick: function onClick(event) {\n        event.preventDefault();\n        updateSortAction(sort);\n      }\n    }, sortName);\n  }))));\n}\n\nFilterSort.propTypes = {\n  filterParams: PropTypes.object.isRequired,\n  sortMap: PropTypes.object.isRequired,\n  updateSortAction: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    sortMap: state.artworkBrowser.sortMap,\n    filterParams: state.artworkBrowser.filterParams\n  };\n};\n\nvar mapDispatchToProps = {\n  updateSortAction: updateSort\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(FilterSort);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FilterSort, \"FilterSort\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/header/FilterSort.js"],"names":["_","PropTypes","React","block","connect","updateSort","FilterSort","props","filterParams","sortMap","updateSortAction","selectedSort","sort","itemHeight","itemIndex","Object","keys","indexOf","optionsOffset","b","builder","mix","top","map","sortName","selected","event","preventDefault","propTypes","object","isRequired","func","mapStateToProps","state","artworkBrowser","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA,MAExBC,YAFwB,GAKtBD,KALsB,CAExBC,YAFwB;AAAA,MAGxBC,OAHwB,GAKtBF,KALsB,CAGxBE,OAHwB;AAAA,MAIxBC,gBAJwB,GAKtBH,KALsB,CAIxBG,gBAJwB;AAO1B,MAAMC,YAAY,GAAGH,YAAY,CAACI,IAAlC;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqBQ,OAArB,CAA6BN,YAA7B,CAAlB;AACA,MAAMO,aAAa,GAAIJ,SAAD,GAAcD,UAApC;AAEA,MAAMM,CAAC,GAAGhB,KAAK,CAAC,oBAAD,CAAf;AAEA,SACE;AAAK,IAAA,SAAS,EAAEgB,CAAC;AAAjB,KACE;AAAM,IAAA,SAAS,EAAEA,CAAC,CAACC,OAAF,GAAY,OAAZ,EAAqBC,GAArB,CAAyB,yBAAzB;AAAjB,gBADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAwC,IAAA,IAAI,EAAC;AAA7C,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2CZ,OAAO,CAACE,YAAD,CAAlD,CADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,IADF,CAFF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAA2C,IAAA,KAAK,EAAE;AAAEW,MAAAA,GAAG,EAAE,CAACJ;AAAR;AAAlD,KAEIlB,CAAC,CAACuB,GAAF,CAAMd,OAAN,EAAe,UAACe,QAAD,EAAWZ,IAAX,EAAoB;AACjC,QAAMa,QAAQ,GAAGb,IAAI,KAAKD,YAA1B;AACA,WAAO;AACL,MAAA,IAAI,EAAC,GADA;AAEL,MAAA,SAAS,EAAEc,QAAQ,GAAG,yBAAH,GAA+B,EAF7C;AAGL,MAAA,GAAG,EAAEb,IAHA;AAIL,MAAA,OAAO,EAAE,iBAACc,KAAD,EAAW;AAClBA,QAAAA,KAAK,CAACC,cAAN;AACAjB,QAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACD;AAPI,OAQLY,QARK,CAAP;AASD,GAXD,CAFJ,CAPF,CAFF,CADF;AA6BD;;AAEDlB,UAAU,CAACsB,SAAX,GAAuB;AACrBpB,EAAAA,YAAY,EAAEP,SAAS,CAAC4B,MAAV,CAAiBC,UADV;AAErBrB,EAAAA,OAAO,EAAER,SAAS,CAAC4B,MAAV,CAAiBC,UAFL;AAGrBpB,EAAAA,gBAAgB,EAAET,SAAS,CAAC8B,IAAV,CAAeD;AAHZ,CAAvB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLxB,IAAAA,OAAO,EAAEwB,KAAK,CAACC,cAAN,CAAqBzB,OADzB;AAELD,IAAAA,YAAY,EAAEyB,KAAK,CAACC,cAAN,CAAqB1B;AAF9B,GAAP;AAID,CALD;;AAOA,IAAM2B,kBAAkB,GAAG;AACzBzB,EAAAA,gBAAgB,EAAEL;AADO,CAA3B;;eAIeD,OAAO,CACpB4B,eADoB,EAEpBG,kBAFoB,CAAP,CAGb7B,UAHa,C;;AAAf;;;;;;;;;;;;0BA9DSA,U;0BAmDH0B,e;0BAOAG,kB","sourcesContent":["import _ from 'underscore'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { connect } from 'react-redux'\nimport { updateSort } from 'desktop/apps/auction/actions/artworkBrowser'\n\nfunction FilterSort (props) {\n  const {\n    filterParams,\n    sortMap,\n    updateSortAction\n  } = props\n\n  const selectedSort = filterParams.sort\n  const itemHeight = 37\n  const itemIndex = Object.keys(sortMap).indexOf(selectedSort)\n  const optionsOffset = (itemIndex) * itemHeight\n\n  const b = block('auction-FilterSort')\n\n  return (\n    <div className={b()}>\n      <span className={b.builder()('label').mix('bordered-pulldown-label')()}>Sort by:</span>\n      <div className='bordered-pulldown'>\n        <a className='bordered-pulldown-toggle' href='#'>\n          <span className='bordered-pulldown-text'>{ sortMap[selectedSort] }</span>\n          <div className='bordered-pulldown-toggle-caret'>\n            <span className='caret' />\n          </div>\n        </a>\n        <div className='bordered-pulldown-options' style={{ top: -optionsOffset }}>\n          {\n            _.map(sortMap, (sortName, sort) => {\n              const selected = sort === selectedSort\n              return <a\n                href='#'\n                className={selected ? 'borderd-pulldown-active' : ''}\n                key={sort}\n                onClick={(event) => {\n                  event.preventDefault()\n                  updateSortAction(sort)\n                }}\n              >{sortName}</a>\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nFilterSort.propTypes = {\n  filterParams: PropTypes.object.isRequired,\n  sortMap: PropTypes.object.isRequired,\n  updateSortAction: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sortMap: state.artworkBrowser.sortMap,\n    filterParams: state.artworkBrowser.filterParams\n  }\n}\n\nconst mapDispatchToProps = {\n  updateSortAction: updateSort\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterSort)\n"]}]}