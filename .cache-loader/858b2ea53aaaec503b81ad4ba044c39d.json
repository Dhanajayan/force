{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport { Range } from 'rc-slider';\nimport { connect } from 'react-redux';\nimport { formatMoney } from 'accounting';\nimport { updateEstimateRange, updateEstimateDisplay } from \"../../../actions/artworkBrowser\";\n\nfunction RangeSlider(props) {\n  var formattedMaxDisplay = props.formattedMaxDisplay,\n      formattedMinDisplay = props.formattedMinDisplay,\n      isAbsoluteMax = props.isAbsoluteMax,\n      isAuction = props.isAuction,\n      maxEstimate = props.maxEstimate,\n      maxEstimateRangeDisplay = props.maxEstimateRangeDisplay,\n      minEstimate = props.minEstimate,\n      minEstimateRangeDisplay = props.minEstimateRangeDisplay,\n      updateEstimateDisplayAction = props.updateEstimateDisplayAction,\n      updateEstimateRangeAction = props.updateEstimateRangeAction;\n  var b = block('auction-RangeSlider');\n  return React.createElement(\"div\", {\n    className: b()\n  }, React.createElement(\"div\", {\n    className: b('metadata')\n  }, React.createElement(\"div\", {\n    className: b('title')\n  }, \"Price\"), React.createElement(\"div\", {\n    className: b('caption')\n  }, \"\".concat(formattedMinDisplay, \" - \").concat(formattedMaxDisplay).concat(isAbsoluteMax ? '+' : ''))), React.createElement(Range, {\n    allowCross: false,\n    min: minEstimate,\n    max: maxEstimate,\n    step: 50,\n    defaultValue: [minEstimateRangeDisplay, maxEstimateRangeDisplay],\n    onChange: function onChange(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          min = _ref2[0],\n          max = _ref2[1];\n\n      return updateEstimateDisplayAction(min, max);\n    },\n    onAfterChange: function onAfterChange(_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          min = _ref4[0],\n          max = _ref4[1];\n\n      return updateEstimateRangeAction(min, max);\n    }\n  }), isAuction && React.createElement(\"div\", {\n    className: b('info')\n  }, \"Based on the estimate for the lot\"));\n}\n\nRangeSlider.propTypes = {\n  formattedMaxDisplay: PropTypes.string.isRequired,\n  formattedMinDisplay: PropTypes.string.isRequired,\n  isAbsoluteMax: PropTypes.bool.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  maxEstimate: PropTypes.number.isRequired,\n  minEstimate: PropTypes.number.isRequired,\n  minEstimateRangeDisplay: PropTypes.number.isRequired,\n  maxEstimateRangeDisplay: PropTypes.number.isRequired,\n  updateEstimateDisplayAction: PropTypes.func.isRequired,\n  updateEstimateRangeAction: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auction = state.app.auction,\n      _state$artworkBrowser = state.artworkBrowser,\n      filterParams = _state$artworkBrowser.filterParams,\n      maxEstimateRangeDisplay = _state$artworkBrowser.maxEstimateRangeDisplay,\n      minEstimateRangeDisplay = _state$artworkBrowser.minEstimateRangeDisplay,\n      symbol = _state$artworkBrowser.symbol;\n  var minEstimate = filterParams.ranges.estimate_range.min;\n  var formattedMinDisplay = formatMoney(minEstimateRangeDisplay, {\n    symbol: symbol,\n    precision: 0\n  });\n  var maxEstimate = filterParams.ranges.estimate_range.max;\n  var isAbsoluteMax = maxEstimate === maxEstimateRangeDisplay;\n  var formattedMaxDisplay = formatMoney(maxEstimateRangeDisplay, {\n    symbol: '',\n    precision: 0\n  });\n  return {\n    formattedMaxDisplay: formattedMaxDisplay,\n    formattedMinDisplay: formattedMinDisplay,\n    isAbsoluteMax: isAbsoluteMax,\n    isAuction: auction.isAuction(),\n    maxEstimate: maxEstimate,\n    maxEstimateRangeDisplay: maxEstimateRangeDisplay,\n    minEstimate: minEstimate,\n    minEstimateRangeDisplay: minEstimateRangeDisplay\n  };\n};\n\nvar mapDispatchToProps = {\n  updateEstimateRangeAction: updateEstimateRange,\n  updateEstimateDisplayAction: updateEstimateDisplay\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(RangeSlider);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(RangeSlider, \"RangeSlider\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/RangeSlider.js"],"names":["PropTypes","React","block","Range","connect","formatMoney","updateEstimateRange","updateEstimateDisplay","RangeSlider","props","formattedMaxDisplay","formattedMinDisplay","isAbsoluteMax","isAuction","maxEstimate","maxEstimateRangeDisplay","minEstimate","minEstimateRangeDisplay","updateEstimateDisplayAction","updateEstimateRangeAction","b","min","max","propTypes","string","isRequired","bool","number","func","mapStateToProps","state","auction","app","artworkBrowser","filterParams","symbol","ranges","estimate_range","precision","mapDispatchToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Range } from 'rc-slider'\nimport { connect } from 'react-redux'\nimport { formatMoney } from 'accounting'\nimport { updateEstimateRange, updateEstimateDisplay } from 'desktop/apps/auction/actions/artworkBrowser'\n\nfunction RangeSlider (props) {\n  const {\n    formattedMaxDisplay,\n    formattedMinDisplay,\n    isAbsoluteMax,\n    isAuction,\n    maxEstimate,\n    maxEstimateRangeDisplay,\n    minEstimate,\n    minEstimateRangeDisplay,\n    updateEstimateDisplayAction,\n    updateEstimateRangeAction\n  } = props\n\n  const b = block('auction-RangeSlider')\n\n  return (\n    <div className={b()}>\n      <div className={b('metadata')}>\n        <div className={b('title')}>\n          Price\n        </div>\n\n        <div className={b('caption')}>\n          {\n            `${formattedMinDisplay} - ${formattedMaxDisplay}${isAbsoluteMax ? '+' : ''}`\n          }\n      </div>\n      </div>\n      <Range\n        allowCross={false}\n        min={minEstimate}\n        max={maxEstimate}\n        step={50}\n        defaultValue={[minEstimateRangeDisplay, maxEstimateRangeDisplay]}\n        onChange={([min, max]) => updateEstimateDisplayAction(min, max)}\n        onAfterChange={([min, max]) => updateEstimateRangeAction(min, max)}\n      />\n      {isAuction &&\n        <div className={b('info')}>\n          Based on the estimate for the lot\n        </div>\n      }\n    </div>\n  )\n}\n\nRangeSlider.propTypes = {\n  formattedMaxDisplay: PropTypes.string.isRequired,\n  formattedMinDisplay: PropTypes.string.isRequired,\n  isAbsoluteMax: PropTypes.bool.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  maxEstimate: PropTypes.number.isRequired,\n  minEstimate: PropTypes.number.isRequired,\n  minEstimateRangeDisplay: PropTypes.number.isRequired,\n  maxEstimateRangeDisplay: PropTypes.number.isRequired,\n  updateEstimateDisplayAction: PropTypes.func.isRequired,\n  updateEstimateRangeAction: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    app: {\n      auction\n    },\n    artworkBrowser: {\n      filterParams,\n      maxEstimateRangeDisplay,\n      minEstimateRangeDisplay,\n      symbol\n    }\n  } = state\n\n  const minEstimate = filterParams.ranges.estimate_range.min\n  const formattedMinDisplay = formatMoney(minEstimateRangeDisplay, { symbol, precision: 0 })\n  const maxEstimate = filterParams.ranges.estimate_range.max\n  const isAbsoluteMax = maxEstimate === maxEstimateRangeDisplay\n  const formattedMaxDisplay = formatMoney(maxEstimateRangeDisplay, { symbol: '', precision: 0 })\n\n  return {\n    formattedMaxDisplay,\n    formattedMinDisplay,\n    isAbsoluteMax,\n    isAuction: auction.isAuction(),\n    maxEstimate,\n    maxEstimateRangeDisplay,\n    minEstimate,\n    minEstimateRangeDisplay\n  }\n}\n\nconst mapDispatchToProps = {\n  updateEstimateRangeAction: updateEstimateRange,\n  updateEstimateDisplayAction: updateEstimateDisplay\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RangeSlider)\n"]}]}