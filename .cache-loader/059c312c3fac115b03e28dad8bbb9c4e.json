{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auth2/client/index.tsx","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auth2/client/index.tsx","mtime":1529504563000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AuthStatic } from \"../components/AuthStatic\";\nimport { MobileAuthStatic } from \"../components/MobileAuthStatic\";\nimport { ModalContainer } from \"../components/ModalContainer\";\nimport { setCookies } from \"../helpers\";\nimport { data as sd } from 'sharify';\nexport var init = function init() {\n  // Rehydrate data from Server\n  var bootstrapData = window.__BOOTSTRAP__;\n  var el = document.getElementById('react-root');\n  var Component = sd.IS_MOBILE ? MobileAuthStatic : AuthStatic;\n\n  if (el) {\n    setCookies(bootstrapData.options); // Start app\n\n    ReactDOM.hydrate(React.createElement(Component, bootstrapData), el);\n  }\n};\nexport var initModalManager = function initModalManager() {\n  var el = document.getElementById('react-modal-container');\n\n  if (el) {\n    ReactDOM.render(React.createElement(ModalContainer, null), el);\n  }\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(init, \"init\", \"/Users/eve/development/force/src/desktop/apps/auth2/client/index.tsx\");\n  reactHotLoader.register(initModalManager, \"initModalManager\", \"/Users/eve/development/force/src/desktop/apps/auth2/client/index.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auth2/client/index.tsx"],"names":["React","ReactDOM","AuthStatic","MobileAuthStatic","ModalContainer","setCookies","data","sd","init","bootstrapData","window","__BOOTSTRAP__","el","document","getElementById","Component","IS_MOBILE","options","hydrate","initModalManager","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT;AACA,SAASC,gBAAT;AACA,SAASC,cAAT;AACA,SAASC,UAAT;AACA,SAASC,IAAI,IAAIC,EAAjB,QAA2B,SAA3B;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB;AACA,MAAMC,aAAa,GAAIC,MAAD,CAAgBC,aAAtC;AACA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAX;AACA,MAAMC,SAAS,GAAGR,EAAE,CAACS,SAAH,GAAeb,gBAAf,GAAkCD,UAApD;;AAEA,MAAIU,EAAJ,EAAQ;AACNP,IAAAA,UAAU,CAACI,aAAa,CAACQ,OAAf,CAAV,CADM,CAGN;;AACAhB,IAAAA,QAAQ,CAACiB,OAAT,CAAiB,oBAAC,SAAD,EAAeT,aAAf,CAAjB,EAAmDG,EAAnD;AACD;AACF,CAZM;AAcP,OAAO,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,MAAMP,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAAX;;AAEA,MAAIF,EAAJ,EAAQ;AACNX,IAAAA,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,cAAD,OAAhB,EAAoCR,EAApC;AACD;AACF,CANM;;;;;;;;;;;;0BAdMJ,I;0BAcAW,gB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AuthStatic } from '../components/AuthStatic'\nimport { MobileAuthStatic } from '../components/MobileAuthStatic'\nimport { ModalContainer } from '../components/ModalContainer'\nimport { setCookies } from '../helpers'\nimport { data as sd } from 'sharify'\n\nexport const init = () => {\n  // Rehydrate data from Server\n  const bootstrapData = (window as any).__BOOTSTRAP__\n  const el = document.getElementById('react-root')\n  const Component = sd.IS_MOBILE ? MobileAuthStatic : AuthStatic\n\n  if (el) {\n    setCookies(bootstrapData.options)\n\n    // Start app\n    ReactDOM.hydrate(<Component {...bootstrapData} />, el)\n  }\n}\n\nexport const initModalManager = () => {\n  const el = document.getElementById('react-modal-container')\n\n  if (el) {\n    ReactDOM.render(<ModalContainer />, el)\n  }\n}\n"]}]}