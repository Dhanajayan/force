{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport _ClockView from \"../../../../components/clock/react\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport get from 'lodash.get';\nimport { connect } from 'react-redux';\nimport { data as sd } from 'sharify'; // FIXME: Rewire\n\nvar ClockView = _ClockView;\n\nfunction Banner(props) {\n  var auction = props.auction,\n      coverImage = props.coverImage,\n      hasEndTime = props.hasEndTime,\n      isAuction = props.isAuction,\n      isClosed = props.isClosed,\n      isLiveOpen = props.isLiveOpen,\n      isMobile = props.isMobile,\n      liveAuctionUrl = props.liveAuctionUrl,\n      name = props.name;\n\n  var trackEnterLive = function trackEnterLive() {\n    window.analytics.track('click', {\n      type: 'button',\n      label: 'enter live auction',\n      flow: 'auctions',\n      context_module: 'auction banner',\n      destination_path: liveAuctionUrl.replace(sd.PREDICTION_URL, '')\n    });\n  };\n\n  var b = block('auction-Banner');\n  var type = isAuction ? 'Auction' : 'Sale';\n  return React.createElement(\"div\", {\n    className: b({\n      isClosed: isClosed,\n      isMobile: isMobile,\n      isLiveOpen: isLiveOpen\n    }),\n    alt: name\n  }, React.createElement(\"div\", {\n    className: b('background-image', {\n      isClosed: isClosed,\n      isLiveOpen: isLiveOpen\n    }),\n    style: {\n      backgroundImage: \"url('\".concat(coverImage, \"')\")\n    }\n  }), function () {\n    if (isLiveOpen && isAuction) {\n      return React.createElement(\"div\", {\n        className: b('live-details')\n      }, React.createElement(\"h1\", null, \"Live Bidding Now Open\"), React.createElement(\"a\", {\n        onClick: trackEnterLive,\n        href: liveAuctionUrl,\n        className: \"avant-garde-button-white\"\n      }, \"Enter live auction\"));\n    } else if (isClosed) {\n      return React.createElement(\"div\", {\n        className: b('closed')\n      }, React.createElement(\"div\", null, type, \" Closed\"));\n    } else if (isAuction || hasEndTime) {\n      return React.createElement(ClockView, {\n        model: auction,\n        modelName: type,\n        closedText: type + ' Closed'\n      });\n    }\n  }());\n}\n\nBanner.propTypes = {\n  auction: PropTypes.object.isRequired,\n  coverImage: PropTypes.string.isRequired,\n  hasEndTime: PropTypes.bool.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  isLiveOpen: PropTypes.bool.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  liveAuctionUrl: PropTypes.string,\n  name: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$app = state.app,\n      auction = _state$app.auction,\n      isLiveOpen = _state$app.isLiveOpen,\n      isMobile = _state$app.isMobile,\n      liveAuctionUrl = _state$app.liveAuctionUrl;\n\n  var _auction$toJSON = auction.toJSON(),\n      cover_image = _auction$toJSON.cover_image,\n      end_at = _auction$toJSON.end_at,\n      is_auction = _auction$toJSON.is_auction,\n      is_closed = _auction$toJSON.is_closed,\n      name = _auction$toJSON.name;\n\n  var coverImage = get(cover_image, 'cropped.url', '');\n  return {\n    auction: auction,\n    coverImage: coverImage,\n    hasEndTime: Boolean(end_at),\n    isAuction: is_auction,\n    isClosed: is_closed,\n    isLiveOpen: isLiveOpen,\n    isMobile: isMobile,\n    liveAuctionUrl: liveAuctionUrl,\n    name: name\n  };\n};\n\nvar _default = connect(mapStateToProps)(Banner);\n\nexport default _default;\nexport var test = {\n  Banner: Banner\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ClockView, \"ClockView\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js\");\n  reactHotLoader.register(Banner, \"Banner\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js\");\n  reactHotLoader.register(test, \"test\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/components/layout/Banner.js"],"names":["_ClockView","PropTypes","React","block","get","connect","data","sd","ClockView","Banner","props","auction","coverImage","hasEndTime","isAuction","isClosed","isLiveOpen","isMobile","liveAuctionUrl","name","trackEnterLive","window","analytics","track","type","label","flow","context_module","destination_path","replace","PREDICTION_URL","b","backgroundImage","propTypes","object","isRequired","string","bool","mapStateToProps","state","app","toJSON","cover_image","end_at","is_auction","is_closed","Boolean","test"],"mappings":"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","sourcesContent":["import _ClockView from 'desktop/components/clock/react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport get from 'lodash.get'\nimport { connect } from 'react-redux'\nimport { data as sd } from 'sharify'\n\n// FIXME: Rewire\nlet ClockView = _ClockView\n\nfunction Banner (props) {\n  const {\n    auction,\n    coverImage,\n    hasEndTime,\n    isAuction,\n    isClosed,\n    isLiveOpen,\n    isMobile,\n    liveAuctionUrl,\n    name\n  } = props\n\n  const trackEnterLive = () => {\n    window.analytics.track('click', {\n      type: 'button',\n      label: 'enter live auction',\n      flow: 'auctions',\n      context_module: 'auction banner',\n      destination_path: liveAuctionUrl.replace(sd.PREDICTION_URL, '')\n    })\n  }\n\n  const b = block('auction-Banner')\n  const type = isAuction ? 'Auction' : 'Sale'\n\n  return (\n    <div\n      className={b({ isClosed, isMobile, isLiveOpen })}\n      alt={name}\n    >\n      <div\n        className={b('background-image', { isClosed, isLiveOpen })}\n        style={{ backgroundImage: `url('${coverImage}')` }}\n      />\n      {(() => {\n        if (isLiveOpen && isAuction) {\n          return (\n            <div className={b('live-details')}>\n              <h1>\n                Live Bidding Now Open\n              </h1>\n\n              <a onClick={trackEnterLive} href={liveAuctionUrl} className='avant-garde-button-white'>\n                Enter live auction\n              </a>\n            </div>\n          )\n        } else if (isClosed) {\n          return (\n            <div className={b('closed')}>\n              <div>\n                {type} Closed\n              </div>\n            </div>\n          )\n        } else if (isAuction || hasEndTime) {\n          return (\n            <ClockView\n              model={auction}\n              modelName={type}\n              closedText={type + ' Closed'}\n            />\n          )\n        }\n      })()}\n    </div>\n  )\n}\n\nBanner.propTypes = {\n  auction: PropTypes.object.isRequired,\n  coverImage: PropTypes.string.isRequired,\n  hasEndTime: PropTypes.bool.isRequired,\n  isAuction: PropTypes.bool.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  isLiveOpen: PropTypes.bool.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  liveAuctionUrl: PropTypes.string,\n  name: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    auction,\n    isLiveOpen,\n    isMobile,\n    liveAuctionUrl\n  } = state.app\n\n  const { cover_image, end_at, is_auction, is_closed, name } = auction.toJSON()\n  const coverImage = get(cover_image, 'cropped.url', '')\n\n  return {\n    auction,\n    coverImage,\n    hasEndTime: Boolean(end_at),\n    isAuction: is_auction,\n    isClosed: is_closed,\n    isLiveOpen,\n    isMobile,\n    liveAuctionUrl,\n    name\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Banner)\n\nexport const test = { Banner }\n"]}]}