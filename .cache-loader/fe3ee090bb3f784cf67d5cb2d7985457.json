{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/forgot_password/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/forgot_password/index.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _reduxForm = require(\"redux-form\");\n\nvar _underscore = require(\"underscore\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _text_input = require(\"../text_input\");\n\nvar _actions = require(\"../../client/actions\");\n\nfunction validate(values) {\n  var email = values.email;\n  var errors = {};\n  if (!email) errors.email = 'Required';\n  return errors;\n}\n\nfunction ForgotPassword(props) {\n  var error = props.error,\n      handleSubmit = props.handleSubmit,\n      invalid = props.invalid,\n      pristine = props.pristine,\n      resetPasswordAction = props.resetPasswordAction,\n      resetPasswordSuccess = props.resetPasswordSuccess,\n      updateAuthFormStateAndClearErrorAction = props.updateAuthFormStateAndClearErrorAction;\n  var b = (0, _bemCnLite.default)('consignments-submission-forgot-password');\n  return _react.default.createElement(\"div\", {\n    className: b()\n  }, _react.default.createElement(\"div\", {\n    className: b('title')\n  }, \"Enter the email address associated with your account\"), _react.default.createElement(\"div\", {\n    className: b('subtitle')\n  }, \"New to Artsy? \", _react.default.createElement(\"span\", {\n    className: b('clickable'),\n    onClick: function onClick() {\n      return updateAuthFormStateAndClearErrorAction('signUp');\n    }\n  }, \"Sign up\"), \".\"), _react.default.createElement(\"form\", {\n    className: b('form'),\n    onSubmit: handleSubmit(resetPasswordAction)\n  }, _react.default.createElement(\"div\", {\n    className: b('row')\n  }, _react.default.createElement(\"div\", {\n    className: b('row-item')\n  }, _react.default.createElement(_reduxForm.Field, {\n    name: \"email\",\n    component: _text_input.renderTextInput,\n    item: 'email',\n    label: 'Email',\n    autofocus: true\n  }))), _react.default.createElement(\"button\", {\n    className: b.builder()('reset-password-button').mix('avant-garde-button-black')(),\n    disabled: pristine || invalid,\n    type: \"submit\"\n  }, \"Reset Password\"), error && _react.default.createElement(\"div\", {\n    className: b('error')\n  }, error), resetPasswordSuccess && _react.default.createElement(\"div\", {\n    className: b('success')\n  }, \"Instructions on how to reset your password have been sent.\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categoryOptions: state.submissionFlow.categoryOptions,\n    error: state.submissionFlow.error,\n    locationAutocompleteSuggestions: state.submissionFlow.locationAutocompleteSuggestions,\n    locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue,\n    resetPasswordSuccess: state.submissionFlow.resetPasswordSuccess\n  };\n};\n\nvar mapDispatchToProps = {\n  resetPasswordAction: _actions.resetPassword,\n  updateAuthFormStateAndClearErrorAction: _actions.updateAuthFormStateAndClearError\n};\nForgotPassword.propTypes = {\n  error: _propTypes.default.string,\n  handleSubmit: _propTypes.default.func.isRequired,\n  invalid: _propTypes.default.bool,\n  pristine: _propTypes.default.bool,\n  resetPasswordAction: _propTypes.default.func.isRequired,\n  resetPasswordSuccess: _propTypes.default.bool.isRequired,\n  updateAuthFormStateAndClearErrorAction: _propTypes.default.func.isRequired\n};\n\nvar _default = (0, _underscore.compose)((0, _reduxForm.reduxForm)({\n  form: 'forgotPassword',\n  // a unique identifier for this form\n  validate: validate\n}), (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(ForgotPassword);\n\nexports.default = _default;",{"version":3,"sources":["src/desktop/apps/consign/components/forgot_password/index.js"],"names":["validate","values","email","errors","ForgotPassword","props","error","handleSubmit","invalid","pristine","resetPasswordAction","resetPasswordSuccess","updateAuthFormStateAndClearErrorAction","b","builder","mix","mapStateToProps","state","categoryOptions","submissionFlow","locationAutocompleteSuggestions","locationAutocompleteValue","mapDispatchToProps","propTypes","string","func","isRequired","bool","form"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA,SAASA,QAAT,CAAmBC,MAAnB,EAA2B;AAAA,MAEvBC,KAFuB,GAGrBD,MAHqB,CAEvBC,KAFuB;AAIzB,MAAMC,SAAS,EAAf;AAEA,MAAI,CAACD,KAAL,EAAYC,OAAOD,KAAP,GAAe,UAAf;AACZ,SAAOC,MAAP;AACD;;AAED,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;AAAA,MAE5BC,KAF4B,GAS1BD,KAT0B,CAE5BC,KAF4B;AAAA,MAG5BC,YAH4B,GAS1BF,KAT0B,CAG5BE,YAH4B;AAAA,MAI5BC,OAJ4B,GAS1BH,KAT0B,CAI5BG,OAJ4B;AAAA,MAK5BC,QAL4B,GAS1BJ,KAT0B,CAK5BI,QAL4B;AAAA,MAM5BC,mBAN4B,GAS1BL,KAT0B,CAM5BK,mBAN4B;AAAA,MAO5BC,oBAP4B,GAS1BN,KAT0B,CAO5BM,oBAP4B;AAAA,MAQ5BC,sCAR4B,GAS1BP,KAT0B,CAQ5BO,sCAR4B;AAW9B,MAAMC,IAAI,wBAAM,yCAAN,CAAV;AAEA,SACE;AAAK,eAAWA;AAAhB,KACE;AAAK,eAAWA,EAAE,OAAF;AAAhB,4DADF,EAIE;AAAK,eAAWA,EAAE,UAAF;AAAhB,uBACgB;AAAM,eAAWA,EAAE,WAAF,CAAjB;AAAiC,aAAS;AAAA,aAAMD,uCAAuC,QAAvC,CAAN;AAAA;AAA1C,eADhB,MAJF,EAOE;AAAM,eAAWC,EAAE,MAAF,CAAjB;AAA4B,cAAUN,aAAaG,mBAAb;AAAtC,KACE;AAAK,eAAWG,EAAE,KAAF;AAAhB,KACE;AAAK,eAAWA,EAAE,UAAF;AAAhB,KACE;AAAO,UAAK,OAAZ;AAAoB,0CAApB;AACE,UAAM,OADR;AAEE,WAAO,OAFT;AAGE;AAHF,IADF,CADF,CADF,EAUE;AACE,eAAWA,EAAEC,OAAF,GAAY,uBAAZ,EAAqCC,GAArC,CAAyC,0BAAzC,GADb;AAEE,cAAUN,YAAYD,OAFxB;AAGE,UAAK;AAHP,sBAVF,EAkBIF,SAAS;AAAK,eAAWO,EAAE,OAAF;AAAhB,KAA6BP,KAA7B,CAlBb,EAqBIK,wBACE;AAAK,eAAWE,EAAE,SAAF;AAAhB,kEAtBN,CAPF,CADF;AAsCD;;AAED,IAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,qBAAiBD,MAAME,cAAN,CAAqBD,eADjC;AAELZ,WAAOW,MAAME,cAAN,CAAqBb,KAFvB;AAGLc,qCAAiCH,MAAME,cAAN,CAAqBC,+BAHjD;AAILC,+BAA2BJ,MAAME,cAAN,CAAqBE,yBAJ3C;AAKLV,0BAAsBM,MAAME,cAAN,CAAqBR;AALtC,GAAP;AAOD,CARD;;AAUA,IAAMW,qBAAqB;AACzBZ,6CADyB;AAEzBE;AAFyB,CAA3B;AAKAR,eAAemB,SAAf,GAA2B;AACzBjB,SAAO,mBAAUkB,MADQ;AAEzBjB,gBAAc,mBAAUkB,IAAV,CAAeC,UAFJ;AAGzBlB,WAAS,mBAAUmB,IAHM;AAIzBlB,YAAU,mBAAUkB,IAJK;AAKzBjB,uBAAqB,mBAAUe,IAAV,CAAeC,UALX;AAMzBf,wBAAsB,mBAAUgB,IAAV,CAAeD,UANZ;AAOzBd,0CAAwC,mBAAUa,IAAV,CAAeC;AAP9B,CAA3B;;eAUe,yBACb,0BAAU;AACRE,QAAM,gBADE;AACgB;AACxB5B;AAFQ,CAAV,CADa,EAKb,yBACEgB,eADF,EAEEM,kBAFF,CALa,EASblB,cATa,C","file":"/Users/eve/development/force/src/desktop/apps/consign/components/forgot_password/index.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Field, reduxForm } from 'redux-form'\nimport { compose } from 'underscore'\nimport { connect } from 'react-redux'\nimport { renderTextInput } from '../text_input'\nimport {\n  resetPassword,\n  updateAuthFormStateAndClearError\n} from '../../client/actions'\n\nfunction validate (values) {\n  const {\n    email\n  } = values\n  const errors = {}\n\n  if (!email) errors.email = 'Required'\n  return errors\n}\n\nfunction ForgotPassword (props) {\n  const {\n    error,\n    handleSubmit,\n    invalid,\n    pristine,\n    resetPasswordAction,\n    resetPasswordSuccess,\n    updateAuthFormStateAndClearErrorAction\n  } = props\n\n  const b = block('consignments-submission-forgot-password')\n\n  return (\n    <div className={b()}>\n      <div className={b('title')}>\n        Enter the email address associated with your account\n      </div>\n      <div className={b('subtitle')}>\n        New to Artsy? <span className={b('clickable')} onClick={() => updateAuthFormStateAndClearErrorAction('signUp')}>Sign up</span>.\n      </div>\n      <form className={b('form')} onSubmit={handleSubmit(resetPasswordAction)}>\n        <div className={b('row')}>\n          <div className={b('row-item')}>\n            <Field name='email' component={renderTextInput}\n              item={'email'}\n              label={'Email'}\n              autofocus\n            />\n          </div>\n        </div>\n        <button\n          className={b.builder()('reset-password-button').mix('avant-garde-button-black')()}\n          disabled={pristine || invalid}\n          type='submit'\n        >\n          Reset Password\n        </button>\n        {\n          error && <div className={b('error')}>{error}</div>\n        }\n        {\n          resetPasswordSuccess && (\n            <div className={b('success')}>\n              Instructions on how to reset your password have been sent.\n            </div>\n          )\n        }\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categoryOptions: state.submissionFlow.categoryOptions,\n    error: state.submissionFlow.error,\n    locationAutocompleteSuggestions: state.submissionFlow.locationAutocompleteSuggestions,\n    locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue,\n    resetPasswordSuccess: state.submissionFlow.resetPasswordSuccess\n  }\n}\n\nconst mapDispatchToProps = {\n  resetPasswordAction: resetPassword,\n  updateAuthFormStateAndClearErrorAction: updateAuthFormStateAndClearError\n}\n\nForgotPassword.propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  invalid: PropTypes.bool,\n  pristine: PropTypes.bool,\n  resetPasswordAction: PropTypes.func.isRequired,\n  resetPasswordSuccess: PropTypes.bool.isRequired,\n  updateAuthFormStateAndClearErrorAction: PropTypes.func.isRequired\n}\n\nexport default compose(\n  reduxForm({\n    form: 'forgotPassword', // a unique identifier for this form\n    validate\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ForgotPassword)\n"]}]}