{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/utils/domain/auctions/urls.js","dependencies":[{"path":"/Users/eve/development/force/src/utils/domain/auctions/urls.js","mtime":1519227436000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBidRedirectActionUrl = getBidRedirectActionUrl;\nexports.getLiveAuctionUrl = void 0;\n\nvar sd = require('sharify').data;\n/**\n * Get the live auction url with /login appended when a user is present\n *\n * @param {String} id - auction id/slug\n * @param {Object} [options]\n * @param {Boolean} [options.isLoggedIn] - whether there is a user present\n * @return {String} live auction url\n */\n\n\nvar getLiveAuctionUrl = function getLiveAuctionUrl(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var liveAuctionRoot = sd.PREDICTION_URL;\n  var url = \"\".concat(liveAuctionRoot, \"/\").concat(id);\n\n  if (options.isLoggedIn) {\n    return \"\".concat(url, \"/login\");\n  } else {\n    return url;\n  }\n};\n/**\n * For `/artwork/:slug` routes that are a part of an auction, determine the\n * correct url to redirect to when clicking the \"Bid\" button.\n *\n * @param  {String} bidderStatus\n * @param  {Object} artwork\n * @param  {Object} auction\n * @return {String}\n */\n\n\nexports.getLiveAuctionUrl = getLiveAuctionUrl;\n\nfunction getBidRedirectActionUrl(bidderStatus, artwork, auction) {\n  if (bidderStatus === 'logged-out' || bidderStatus === 'qualified-to-bid') {\n    return \"/auction/\".concat(auction.id, \"/bid/\").concat(artwork.id);\n  } else {\n    return \"/artwork/\".concat(artwork.id);\n  }\n}",{"version":3,"sources":["src/utils/domain/auctions/urls.js"],"names":["sd","require","data","getLiveAuctionUrl","id","options","liveAuctionRoot","PREDICTION_URL","url","isLoggedIn","getBidRedirectActionUrl","bidderStatus","artwork","auction"],"mappings":";;;;;;;;AAAA,IAAMA,KAAKC,QAAQ,SAAR,EAAmBC,IAA9B;AAEA;;;;;;;;;;AAQO,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,EAAD,EAAsB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACrD,MAAMC,kBAAkBN,GAAGO,cAA3B;AACA,MAAMC,gBAASF,eAAT,cAA4BF,EAA5B,CAAN;;AACA,MAAIC,QAAQI,UAAZ,EAAwB;AACtB,qBAAUD,GAAV;AACD,GAFD,MAEO;AACL,WAAOA,GAAP;AACD;AACF,CARM;AAUP;;;;;;;;;;;;;AASO,SAASE,uBAAT,CAAiCC,YAAjC,EAA+CC,OAA/C,EAAwDC,OAAxD,EAAiE;AACtE,MAAIF,iBAAiB,YAAjB,IAAiCA,iBAAiB,kBAAtD,EAA0E;AACxE,8BAAmBE,QAAQT,EAA3B,kBAAqCQ,QAAQR,EAA7C;AACD,GAFD,MAEO;AACL,8BAAmBQ,QAAQR,EAA3B;AACD;AACF","file":"/Users/eve/development/force/src/utils/domain/auctions/urls.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["const sd = require('sharify').data\n\n/**\n * Get the live auction url with /login appended when a user is present\n *\n * @param {String} id - auction id/slug\n * @param {Object} [options]\n * @param {Boolean} [options.isLoggedIn] - whether there is a user present\n * @return {String} live auction url\n */\nexport const getLiveAuctionUrl = (id, options = {}) => {\n  const liveAuctionRoot = sd.PREDICTION_URL\n  const url = `${liveAuctionRoot}/${id}`\n  if (options.isLoggedIn) {\n    return `${url}/login`\n  } else {\n    return url\n  }\n}\n\n/**\n * For `/artwork/:slug` routes that are a part of an auction, determine the\n * correct url to redirect to when clicking the \"Bid\" button.\n *\n * @param  {String} bidderStatus\n * @param  {Object} artwork\n * @param  {Object} auction\n * @return {String}\n */\nexport function getBidRedirectActionUrl(bidderStatus, artwork, auction) {\n  if (bidderStatus === 'logged-out' || bidderStatus === 'qualified-to-bid') {\n    return `/auction/${auction.id}/bid/${artwork.id}`\n  } else {\n    return `/artwork/${artwork.id}`\n  }\n}\n"]}]}