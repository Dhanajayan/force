{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport * as actions from \"../actions/artworkBrowser\";\nimport _analyticsHooks from \"../../../lib/analytics_hooks.coffee\";\nimport { isEqual } from 'underscore'; // FIXME: Rewire\n\nvar analyticsHooks = _analyticsHooks;\n\nvar analyticsMiddleware = function analyticsMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      var result = next(action);\n      var nextState = store.getState(); // track certain types of actions\n\n      switch (action.type) {\n        case actions.UPDATE_MEDIUM_ID:\n          {\n            trackParamChange({\n              medium: action.payload.mediumId\n            }, nextState);\n            return result;\n          }\n\n        case actions.UPDATE_ARTIST_ID:\n          {\n            trackParamChange({\n              artist: action.payload.artistId\n            }, nextState);\n            return result;\n          }\n\n        case actions.UPDATE_SORT:\n          {\n            trackParamChange({\n              sort: action.payload.sort\n            }, nextState);\n            return result;\n          }\n\n        case actions.UPDATE_ESTIMATE_RANGE:\n          {\n            trackParamChange({\n              price: nextState.artworkBrowser.filterParams.estimate_range\n            }, nextState);\n            return result;\n          }\n\n        default:\n          return result;\n      }\n    };\n  };\n};\n\nfunction trackableArtistIds(changed, filterParams) {\n  if (isEqual(changed, {\n    artist: 'artists-you-follow'\n  })) {\n    return ['artists-you-follow'];\n  } else {\n    return filterParams.artist_ids;\n  }\n}\n\nfunction trackParamChange(changed, newState) {\n  var filterParams = newState.artworkBrowser.filterParams;\n  analyticsHooks.trigger('auction:artworks:params:change', {\n    current: [{\n      artists: trackableArtistIds(changed, filterParams)\n    }, {\n      medium: filterParams.gene_ids\n    }, {\n      sort: filterParams.sort\n    }, {\n      price: filterParams.estimate_range\n    }],\n    changed: changed\n  });\n}\n\nvar _default = analyticsMiddleware;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(analyticsHooks, \"analyticsHooks\", \"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js\");\n  reactHotLoader.register(analyticsMiddleware, \"analyticsMiddleware\", \"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js\");\n  reactHotLoader.register(trackableArtistIds, \"trackableArtistIds\", \"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js\");\n  reactHotLoader.register(trackParamChange, \"trackParamChange\", \"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/auction/utils/analyticsMiddleware.js"],"names":["actions","_analyticsHooks","isEqual","analyticsHooks","analyticsMiddleware","store","next","action","result","nextState","getState","type","UPDATE_MEDIUM_ID","trackParamChange","medium","payload","mediumId","UPDATE_ARTIST_ID","artist","artistId","UPDATE_SORT","sort","UPDATE_ESTIMATE_RANGE","price","artworkBrowser","filterParams","estimate_range","trackableArtistIds","changed","artist_ids","newState","trigger","current","artists","gene_ids"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ;AACA,OAAOC,eAAP;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,IAAIC,cAAc,GAAGF,eAArB;;AAEA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACrD,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACA,UAAME,SAAS,GAAGJ,KAAK,CAACK,QAAN,EAAlB,CAFqD,CAIrD;;AACA,cAAQH,MAAM,CAACI,IAAf;AACE,aAAKX,OAAO,CAACY,gBAAb;AAA+B;AAC7BC,YAAAA,gBAAgB,CAAC;AAAEC,cAAAA,MAAM,EAAEP,MAAM,CAACQ,OAAP,CAAeC;AAAzB,aAAD,EAAsCP,SAAtC,CAAhB;AACA,mBAAOD,MAAP;AACD;;AACD,aAAKR,OAAO,CAACiB,gBAAb;AAA+B;AAC7BJ,YAAAA,gBAAgB,CAAC;AAAEK,cAAAA,MAAM,EAAEX,MAAM,CAACQ,OAAP,CAAeI;AAAzB,aAAD,EAAsCV,SAAtC,CAAhB;AACA,mBAAOD,MAAP;AACD;;AACD,aAAKR,OAAO,CAACoB,WAAb;AAA0B;AACxBP,YAAAA,gBAAgB,CAAC;AAAEQ,cAAAA,IAAI,EAAEd,MAAM,CAACQ,OAAP,CAAeM;AAAvB,aAAD,EAAgCZ,SAAhC,CAAhB;AACA,mBAAOD,MAAP;AACD;;AACD,aAAKR,OAAO,CAACsB,qBAAb;AAAoC;AAClCT,YAAAA,gBAAgB,CAAC;AACfU,cAAAA,KAAK,EAAEd,SAAS,CAACe,cAAV,CAAyBC,YAAzB,CAAsCC;AAD9B,aAAD,EAEbjB,SAFa,CAAhB;AAGA,mBAAOD,MAAP;AACD;;AACD;AAAS,iBAAOA,MAAP;AAnBX;AAqBD,KA1BwC;AAAA,GAAR;AAAA,CAAjC;;AA4BA,SAASmB,kBAAT,CAA6BC,OAA7B,EAAsCH,YAAtC,EAAoD;AAClD,MAAIvB,OAAO,CAAC0B,OAAD,EAAU;AAAEV,IAAAA,MAAM,EAAE;AAAV,GAAV,CAAX,EAAwD;AACtD,WAAO,CAAC,oBAAD,CAAP;AACD,GAFD,MAEO;AACL,WAAOO,YAAY,CAACI,UAApB;AACD;AACF;;AAED,SAAShB,gBAAT,CAA2Be,OAA3B,EAAoCE,QAApC,EAA8C;AAAA,MACpCL,YADoC,GACnBK,QAAQ,CAACN,cADU,CACpCC,YADoC;AAE5CtB,EAAAA,cAAc,CAAC4B,OAAf,CACE,gCADF,EAEE;AACEC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,OAAO,EAAEN,kBAAkB,CAACC,OAAD,EAAUH,YAAV;AAA7B,KADO,EAEP;AAAEX,MAAAA,MAAM,EAAEW,YAAY,CAACS;AAAvB,KAFO,EAGP;AAAEb,MAAAA,IAAI,EAAEI,YAAY,CAACJ;AAArB,KAHO,EAIP;AAAEE,MAAAA,KAAK,EAAEE,YAAY,CAACC;AAAtB,KAJO,CADX;AAOEE,IAAAA,OAAO,EAAPA;AAPF,GAFF;AAYD;;eAEcxB,mB;AAAf;;;;;;;;;;;;0BAtDID,c;0BAEEC,mB;0BA4BGuB,kB;0BAQAd,gB","sourcesContent":["import * as actions from 'desktop/apps/auction/actions/artworkBrowser'\nimport _analyticsHooks from 'desktop/lib/analytics_hooks.coffee'\nimport { isEqual } from 'underscore'\n\n// FIXME: Rewire\nlet analyticsHooks = _analyticsHooks\n\nconst analyticsMiddleware = store => next => action => {\n  const result = next(action)\n  const nextState = store.getState()\n\n  // track certain types of actions\n  switch (action.type) {\n    case actions.UPDATE_MEDIUM_ID: {\n      trackParamChange({ medium: action.payload.mediumId }, nextState)\n      return result\n    }\n    case actions.UPDATE_ARTIST_ID: {\n      trackParamChange({ artist: action.payload.artistId }, nextState)\n      return result\n    }\n    case actions.UPDATE_SORT: {\n      trackParamChange({ sort: action.payload.sort }, nextState)\n      return result\n    }\n    case actions.UPDATE_ESTIMATE_RANGE: {\n      trackParamChange({\n        price: nextState.artworkBrowser.filterParams.estimate_range\n      }, nextState)\n      return result\n    }\n    default: return result\n  }\n}\n\nfunction trackableArtistIds (changed, filterParams) {\n  if (isEqual(changed, { artist: 'artists-you-follow' })) {\n    return ['artists-you-follow']\n  } else {\n    return filterParams.artist_ids\n  }\n}\n\nfunction trackParamChange (changed, newState) {\n  const { filterParams } = newState.artworkBrowser\n  analyticsHooks.trigger(\n    'auction:artworks:params:change',\n    {\n      current: [\n        { artists: trackableArtistIds(changed, filterParams) },\n        { medium: filterParams.gene_ids },\n        { sort: filterParams.sort },\n        { price: filterParams.estimate_range }\n      ],\n      changed\n    }\n  )\n}\n\nexport default analyticsMiddleware\n"]}]}