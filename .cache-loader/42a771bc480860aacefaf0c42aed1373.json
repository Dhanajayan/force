{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Text.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Text.tsx","mtime":1528820562000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar fonts = _interopRequireWildcard(require(\"../Assets/Fonts\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nvar textSizesForPrimaryStyle = {\n  xlarge: \"24px\",\n  large: \"17px\",\n  medium: \"15px\",\n  small: \"13px\",\n  xsmall: \"11px\"\n};\nvar textSizesForSecondaryStyle = {\n  xlarge: \"26px\",\n  large: \"20px\",\n  medium: \"17px\",\n  small: \"15px\",\n  xsmall: \"11px\"\n};\nvar TextStyleToTextSize = {\n  primary: textSizesForPrimaryStyle,\n  secondary: textSizesForSecondaryStyle\n};\nvar textStyleNameToCss = {\n  primary: fonts.avantgarde(\"s11\"),\n  secondary: fonts.garamond(\"s11\")\n};\n\nvar RawText = function RawText(props) {\n  var textSize = props.textSize,\n      textStyle = props.textStyle,\n      align = props.align,\n      color = props.color,\n      remainderProps = _objectWithoutProperties(props, [\"textSize\", \"textStyle\", \"align\", \"color\"]);\n\n  return _react.default.createElement(\"p\", remainderProps, props.children);\n};\n\nvar Text = (0, _styledComponents.default)(RawText).withConfig({\n  displayName: \"Text\",\n  componentId: \"nwxb9m-0\"\n})([\"\", \";font-size:\", \";text-align:\", \";color:\", \";\"], function (props) {\n  return textStyleNameToCss[props.textStyle];\n}, function (props) {\n  return TextStyleToTextSize[props.textStyle][props.textSize];\n}, function (props) {\n  return props.align;\n}, function (props) {\n  return props.color;\n});\nText.defaultProps = {\n  textSize: \"small\",\n  textStyle: \"secondary\",\n  align: \"start\",\n  color: \"currentcolor\"\n};\nvar _default = Text;\nexports.default = _default;",{"version":3,"sources":["node_modules/@artsy/reaction/src/Components/Text.tsx"],"names":["textSizesForPrimaryStyle","xlarge","large","medium","small","xsmall","textSizesForSecondaryStyle","TextStyleToTextSize","primary","secondary","textStyleNameToCss","fonts","avantgarde","garamond","RawText","props","textSize","textStyle","align","color","remainderProps","children","Text","defaultProps"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAaA,IAAMA,2BAA2B;AAC/BC,UAAQ,MADuB;AAE/BC,SAAO,MAFwB;AAG/BC,UAAQ,MAHuB;AAI/BC,SAAO,MAJwB;AAK/BC,UAAQ;AALuB,CAAjC;AAQA,IAAMC,6BAA6B;AACjCL,UAAQ,MADyB;AAEjCC,SAAO,MAF0B;AAGjCC,UAAQ,MAHyB;AAIjCC,SAAO,MAJ0B;AAKjCC,UAAQ;AALyB,CAAnC;AAQA,IAAME,sBAAsB;AAC1BC,WAASR,wBADiB;AAE1BS,aAAWH;AAFe,CAA5B;AAKA,IAAMI,qBAAqB;AACzBF,WAASG,MAAMC,UAAN,CAAiB,KAAjB,CADgB;AAEzBH,aAAWE,MAAME,QAAN,CAAe,KAAf;AAFc,CAA3B;;AAKA,IAAMC,UAAgC,SAAhCA,OAAgC,CAACC,KAAD,EAAsB;AAAA,MAClDC,QADkD,GACOD,KADP,CAClDC,QADkD;AAAA,MACxCC,SADwC,GACOF,KADP,CACxCE,SADwC;AAAA,MAC7BC,KAD6B,GACOH,KADP,CAC7BG,KAD6B;AAAA,MACtBC,KADsB,GACOJ,KADP,CACtBI,KADsB;AAAA,MACZC,cADY,4BACOL,KADP;;AAG1D,SAAO,kCAAOK,cAAP,EAAwBL,MAAMM,QAA9B,CAAP;AACD,CAJD;;AAMA,IAAMC,OAAO,+BAAOR,OAAP,CAAP;AAAA;AAAA;AAAA,wDACF;AAAA,SAASJ,mBAAmBK,MAAME,SAAzB,CAAT;AAAA,CADE,EAES;AAAA,SAASV,oBAAoBQ,MAAME,SAA1B,EAAqCF,MAAMC,QAA3C,CAAT;AAAA,CAFT,EAGU;AAAA,SAASD,MAAMG,KAAf;AAAA,CAHV,EAIK;AAAA,SAASH,MAAMI,KAAf;AAAA,CAJL,CAAN;AAOAG,KAAKC,YAAL,GAAoB;AAClBP,YAAU,OADQ;AAElBC,aAAW,WAFO;AAGlBC,SAAO,OAHW;AAIlBC,SAAO;AAJW,CAApB;eAOeG,I","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Text.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import React from \"react\"\n// @ts-ignore\nimport styled, { StyledComponentClass } from \"styled-components\"\nimport * as fonts from \"../Assets/Fonts\"\n\nexport type TextAlign = \"start\" | \"center\" | \"end\"\nexport type TextSize = \"small\" | \"medium\" | \"large\" | \"xlarge\"\nexport type TextStyle = \"primary\" | \"secondary\"\n\nexport interface TextProps extends React.HTMLProps<HTMLParagraphElement> {\n  textSize?: TextSize\n  textStyle?: TextStyle\n  align?: TextAlign\n  color?: string\n}\n\nconst textSizesForPrimaryStyle = {\n  xlarge: \"24px\",\n  large: \"17px\",\n  medium: \"15px\",\n  small: \"13px\",\n  xsmall: \"11px\",\n}\n\nconst textSizesForSecondaryStyle = {\n  xlarge: \"26px\",\n  large: \"20px\",\n  medium: \"17px\",\n  small: \"15px\",\n  xsmall: \"11px\",\n}\n\nconst TextStyleToTextSize = {\n  primary: textSizesForPrimaryStyle,\n  secondary: textSizesForSecondaryStyle,\n}\n\nconst textStyleNameToCss = {\n  primary: fonts.avantgarde(\"s11\"),\n  secondary: fonts.garamond(\"s11\"),\n}\n\nconst RawText: React.SFC<TextProps> = (props: TextProps) => {\n  const { textSize, textStyle, align, color, ...remainderProps } = props\n\n  return <p {...remainderProps}>{props.children}</p>\n}\n\nconst Text = styled(RawText)`\n  ${props => textStyleNameToCss[props.textStyle]};\n  font-size: ${props => TextStyleToTextSize[props.textStyle][props.textSize]};\n  text-align: ${props => props.align};\n  color: ${props => props.color};\n`\n\nText.defaultProps = {\n  textSize: \"small\",\n  textStyle: \"secondary\",\n  align: \"start\",\n  color: \"currentcolor\",\n}\n\nexport default Text\n"]}]}