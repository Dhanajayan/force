{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js","mtime":1537287041000},{"path":"/Users/eve/development/force/.babelrc","mtime":1537178749000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport LocationAutocomplete from \"../location_autocomplete\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport block from 'bem-cn-lite';\nimport { Field, formValueSelector, reduxForm } from 'redux-form';\nimport { compose } from 'underscore';\nimport { connect } from 'react-redux';\nimport { dispatchAndScrollToError, numberWarning, validate } from \"../../client/validate\";\nimport { renderCheckboxInput } from \"../checkbox_input\";\nimport { renderRadioInput } from \"../radio_input\";\nimport { renderSelectInput } from \"../select_input\";\nimport { renderTextInput } from \"../text_input\";\nimport { submitDescribeWork } from \"../../client/actions\";\nexport function makeDescribeWorkDesktop() {\n  var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  function DescribeWorkDesktop(props) {\n    var artistName = props.artistName,\n        categoryOptions = props.categoryOptions,\n        error = props.error,\n        isLoading = props.isLoading,\n        handleSubmit = props.handleSubmit,\n        hasEditionValue = props.hasEditionValue,\n        hasMinimumPrice = props.hasMinimumPrice,\n        submitDescribeWorkAction = props.submitDescribeWorkAction;\n    var b = block('consignments-submission-describe-work');\n    return React.createElement(\"div\", {\n      className: b()\n    }, React.createElement(\"div\", {\n      className: b('title')\n    }, \"Enter details about the work by \", artistName), React.createElement(\"div\", {\n      className: b('subtitle')\n    }, \"To ensure a quick response please provide as much information as possible.\"), React.createElement(\"form\", {\n      className: b('form'),\n      onSubmit: handleSubmit(submitDescribeWorkAction)\n    }, React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: renderTextInput,\n      item: 'title',\n      instructions: 'If the title is unknown, please enter your best guess.',\n      label: 'Title*',\n      autofocus: true\n    }))), React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"category\",\n      component: renderSelectInput,\n      item: 'category',\n      label: 'Category*',\n      options: categoryOptions\n    })), React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"year\",\n      component: renderTextInput,\n      item: 'year',\n      label: 'Year*'\n    }))), React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"medium\",\n      component: renderTextInput,\n      item: 'medium',\n      label: 'Medium*'\n    }))), React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"height\",\n      component: renderTextInput,\n      item: 'height',\n      label: 'Height*',\n      warn: numberWarning\n    })), React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"width\",\n      component: renderTextInput,\n      item: 'width',\n      label: 'Width*',\n      warn: numberWarning\n    })), React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"depth\",\n      component: renderTextInput,\n      item: 'depth',\n      label: 'Depth',\n      warn: numberWarning\n    })), React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"dimensions_metric\",\n      component: renderSelectInput,\n      item: 'dimensions_metric',\n      label: 'Units*',\n      options: ['in', 'cm']\n    }))), hasEditionValue && React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"edition_number\",\n      component: renderTextInput,\n      item: 'edition_number',\n      label: 'Edition Number*'\n    })), React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"edition_size\",\n      component: renderTextInput,\n      item: 'edition_size',\n      label: 'Size of Edition*',\n      warn: numberWarning\n    }))), React.createElement(\"div\", {\n      className: b('row', {\n        'border-bottom': true\n      })\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"edition\",\n      component: renderCheckboxInput,\n      item: 'edition',\n      label: 'This is an edition',\n      value: false\n    }))), React.createElement(\"div\", {\n      className: b('small-row', {\n        'border-bottom': true\n      })\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"signature\",\n      component: renderRadioInput,\n      item: 'signature',\n      label: 'Is this work signed?*',\n      options: [{\n        label: 'yes',\n        val: true\n      }, {\n        label: 'no',\n        val: false\n      }]\n    }))), React.createElement(\"div\", {\n      className: b('small-row', {\n        'border-bottom': true\n      })\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"authenticity_certificate\",\n      component: renderRadioInput,\n      item: 'authenticity_certificate',\n      label: 'Does this work come with a certificate of authenticity?*',\n      options: [{\n        label: 'yes',\n        val: true\n      }, {\n        label: 'no',\n        val: false\n      }]\n    }))), React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"provenance\",\n      component: renderTextInput,\n      item: 'provenance',\n      instructions: 'Where did you acquire this work?',\n      label: 'Provenance'\n    }))), React.createElement(\"div\", {\n      className: b('row', {\n        'border-bottom': true\n      })\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(\"div\", {\n      className: b('instructions')\n    }, \"What city is the work located in?*\"), React.createElement(Field, {\n      name: \"location\",\n      component: LocationAutocomplete\n    }))), React.createElement(\"div\", {\n      className: b('small-row', {\n        'border-bottom': true\n      })\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"minimum_price_yesno\",\n      component: renderRadioInput,\n      item: 'minimum_price_yesno',\n      label: 'Do you have a price in mind?',\n      options: [{\n        label: 'yes',\n        val: true\n      }, {\n        label: 'no',\n        val: false\n      }]\n    }))), hasMinimumPrice && React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item-1')\n    }, React.createElement(Field, {\n      name: \"dimensions_metric\",\n      component: renderSelectInput,\n      item: 'dimensions_metric',\n      label: 'Price',\n      options: ['USD', 'GBP']\n    })), React.createElement(\"div\", {\n      className: b('row-item-3')\n    }, React.createElement(Field, {\n      name: \"minimum_price_dollars\",\n      component: renderTextInput,\n      item: 'minimum_price_dollars',\n      label: \"\\xA0\",\n      warn: numberWarning\n    }))), React.createElement(\"div\", {\n      className: b('row')\n    }, React.createElement(\"div\", {\n      className: b('row-item')\n    }, React.createElement(Field, {\n      name: \"phone\",\n      component: renderTextInput,\n      label: 'Mobile Number*',\n      item: 'phone'\n    }))), React.createElement(\"button\", {\n      className: b.builder()('next-button').mix('avant-garde-button-black')(),\n      type: \"submit\"\n    }, isLoading ? React.createElement(\"div\", {\n      className: \"loading-spinner-white\"\n    }) : 'Submit'), error && React.createElement(\"div\", {\n      className: b('error')\n    }, error)));\n  }\n\n  var mapStateToProps = function mapStateToProps(state) {\n    var selector = formValueSelector('describeWork');\n    var hasEditionValue = selector(state, 'edition');\n    var hasMinimumPrice = selector(state, 'minimum_price_yesno');\n    return {\n      artistName: state.submissionFlow.artistName,\n      categoryOptions: state.submissionFlow.categoryOptions,\n      error: state.submissionFlow.error,\n      isLoading: state.submissionFlow.isLoading,\n      hasEditionValue: hasEditionValue,\n      hasMinimumPrice: hasMinimumPrice,\n      locationAutocompleteFrozen: state.submissionFlow.locationAutocompleteFrozen,\n      locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue\n    };\n  };\n\n  var mapDispatchToProps = {\n    submitDescribeWorkAction: submitDescribeWork\n  };\n  DescribeWorkDesktop.propTypes = {\n    artistName: PropTypes.string.isRequired,\n    categoryOptions: PropTypes.array.isRequired,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    hasEditionValue: PropTypes.bool,\n    hasMinimumPrice: PropTypes.bool,\n    submitDescribeWorkAction: PropTypes.func.isRequired\n  };\n  return compose(reduxForm({\n    form: 'describeWork',\n    // a unique identifier for this form\n    validate: validate,\n    initialValues: initialValues,\n    onSubmitFail: dispatchAndScrollToError\n  }), connect(mapStateToProps, mapDispatchToProps))(DescribeWorkDesktop);\n}\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(makeDescribeWorkDesktop, \"makeDescribeWorkDesktop\", \"/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/eve/development/force/src/desktop/apps/consign/components/describe_work_desktop/index.js"],"names":["LocationAutocomplete","PropTypes","React","block","Field","formValueSelector","reduxForm","compose","connect","dispatchAndScrollToError","numberWarning","validate","renderCheckboxInput","renderRadioInput","renderSelectInput","renderTextInput","submitDescribeWork","makeDescribeWorkDesktop","initialValues","DescribeWorkDesktop","props","artistName","categoryOptions","error","isLoading","handleSubmit","hasEditionValue","hasMinimumPrice","submitDescribeWorkAction","b","label","val","builder","mix","mapStateToProps","state","selector","submissionFlow","locationAutocompleteFrozen","locationAutocompleteValue","mapDispatchToProps","propTypes","string","isRequired","array","bool","func","form","onSubmitFail"],"mappings":"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","sourcesContent":["import LocationAutocomplete from '../location_autocomplete'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport block from 'bem-cn-lite'\nimport { Field, formValueSelector, reduxForm } from 'redux-form'\nimport { compose } from 'underscore'\nimport { connect } from 'react-redux'\nimport {\n  dispatchAndScrollToError,\n  numberWarning,\n  validate,\n} from '../../client/validate'\nimport { renderCheckboxInput } from '../checkbox_input'\nimport { renderRadioInput } from '../radio_input'\nimport { renderSelectInput } from '../select_input'\nimport { renderTextInput } from '../text_input'\nimport { submitDescribeWork } from '../../client/actions'\n\nexport function makeDescribeWorkDesktop(initialValues = {}) {\n  function DescribeWorkDesktop(props) {\n    const {\n      artistName,\n      categoryOptions,\n      error,\n      isLoading,\n      handleSubmit,\n      hasEditionValue,\n      hasMinimumPrice,\n      submitDescribeWorkAction,\n    } = props\n\n    const b = block('consignments-submission-describe-work')\n\n    return (\n      <div className={b()}>\n        <div className={b('title')}>\n          Enter details about the work by {artistName}\n        </div>\n        <div className={b('subtitle')}>\n          To ensure a quick response please provide as much information as\n          possible.\n        </div>\n        <form\n          className={b('form')}\n          onSubmit={handleSubmit(submitDescribeWorkAction)}\n        >\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"title\"\n                component={renderTextInput}\n                item={'title'}\n                instructions={\n                  'If the title is unknown, please enter your best guess.'\n                }\n                label={'Title*'}\n                autofocus\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"category\"\n                component={renderSelectInput}\n                item={'category'}\n                label={'Category*'}\n                options={categoryOptions}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field\n                name=\"year\"\n                component={renderTextInput}\n                item={'year'}\n                label={'Year*'}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"medium\"\n                component={renderTextInput}\n                item={'medium'}\n                label={'Medium*'}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"height\"\n                component={renderTextInput}\n                item={'height'}\n                label={'Height*'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field\n                name=\"width\"\n                component={renderTextInput}\n                item={'width'}\n                label={'Width*'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field\n                name=\"depth\"\n                component={renderTextInput}\n                item={'depth'}\n                label={'Depth'}\n                warn={numberWarning}\n              />\n            </div>\n            <div className={b('row-item')}>\n              <Field\n                name=\"dimensions_metric\"\n                component={renderSelectInput}\n                item={'dimensions_metric'}\n                label={'Units*'}\n                options={['in', 'cm']}\n              />\n            </div>\n          </div>\n          {hasEditionValue && (\n            <div className={b('row')}>\n              <div className={b('row-item')}>\n                <Field\n                  name=\"edition_number\"\n                  component={renderTextInput}\n                  item={'edition_number'}\n                  label={'Edition Number*'}\n                />\n              </div>\n              <div className={b('row-item')}>\n                <Field\n                  name=\"edition_size\"\n                  component={renderTextInput}\n                  item={'edition_size'}\n                  label={'Size of Edition*'}\n                  warn={numberWarning}\n                />\n              </div>\n            </div>\n          )}\n          <div className={b('row', { 'border-bottom': true })}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"edition\"\n                component={renderCheckboxInput}\n                item={'edition'}\n                label={'This is an edition'}\n                value={false}\n              />\n            </div>\n          </div>\n          <div className={b('small-row', { 'border-bottom': true })}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"signature\"\n                component={renderRadioInput}\n                item={'signature'}\n                label={'Is this work signed?*'}\n                options={[\n                  { label: 'yes', val: true },\n                  { label: 'no', val: false },\n                ]}\n              />\n            </div>\n          </div>\n          <div className={b('small-row', { 'border-bottom': true })}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"authenticity_certificate\"\n                component={renderRadioInput}\n                item={'authenticity_certificate'}\n                label={\n                  'Does this work come with a certificate of authenticity?*'\n                }\n                options={[\n                  { label: 'yes', val: true },\n                  { label: 'no', val: false },\n                ]}\n              />\n            </div>\n          </div>\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"provenance\"\n                component={renderTextInput}\n                item={'provenance'}\n                instructions={'Where did you acquire this work?'}\n                label={'Provenance'}\n              />\n            </div>\n          </div>\n          <div className={b('row', { 'border-bottom': true })}>\n            <div className={b('row-item')}>\n              <div className={b('instructions')}>\n                What city is the work located in?*\n              </div>\n              <Field name=\"location\" component={LocationAutocomplete} />\n            </div>\n          </div>\n          <div className={b('small-row', { 'border-bottom': true })}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"minimum_price_yesno\"\n                component={renderRadioInput}\n                item={'minimum_price_yesno'}\n                label={'Do you have a price in mind?'}\n                options={[\n                  { label: 'yes', val: true },\n                  { label: 'no', val: false },\n                ]}\n              />\n            </div>\n          </div>\n          {hasMinimumPrice && (\n            <div className={b('row')}>\n              <div className={b('row-item-1')}>\n                <Field\n                  name=\"dimensions_metric\"\n                  component={renderSelectInput}\n                  item={'dimensions_metric'}\n                  label={'Price'}\n                  options={['USD', 'GBP']}\n                />\n              </div>\n              <div className={b('row-item-3')}>\n                <Field\n                  name=\"minimum_price_dollars\"\n                  component={renderTextInput}\n                  item={'minimum_price_dollars'}\n                  label={'\\u00A0'}\n                  warn={numberWarning}\n                />\n              </div>\n            </div>\n          )}\n          <div className={b('row')}>\n            <div className={b('row-item')}>\n              <Field\n                name=\"phone\"\n                component={renderTextInput}\n                label={'Mobile Number*'}\n                item={'phone'}\n              />\n            </div>\n          </div>\n          <button\n            className={b\n              .builder()('next-button')\n              .mix('avant-garde-button-black')()}\n            type=\"submit\"\n          >\n            {isLoading ? <div className=\"loading-spinner-white\" /> : 'Submit'}\n          </button>\n          {error && <div className={b('error')}>{error}</div>}\n        </form>\n      </div>\n    )\n  }\n\n  const mapStateToProps = state => {\n    const selector = formValueSelector('describeWork')\n    const hasEditionValue = selector(state, 'edition')\n    const hasMinimumPrice = selector(state, 'minimum_price_yesno')\n    return {\n      artistName: state.submissionFlow.artistName,\n      categoryOptions: state.submissionFlow.categoryOptions,\n      error: state.submissionFlow.error,\n      isLoading: state.submissionFlow.isLoading,\n      hasEditionValue,\n      hasMinimumPrice,\n      locationAutocompleteFrozen:\n        state.submissionFlow.locationAutocompleteFrozen,\n      locationAutocompleteValue: state.submissionFlow.locationAutocompleteValue,\n    }\n  }\n\n  const mapDispatchToProps = {\n    submitDescribeWorkAction: submitDescribeWork,\n  }\n\n  DescribeWorkDesktop.propTypes = {\n    artistName: PropTypes.string.isRequired,\n    categoryOptions: PropTypes.array.isRequired,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    hasEditionValue: PropTypes.bool,\n    hasMinimumPrice: PropTypes.bool,\n    submitDescribeWorkAction: PropTypes.func.isRequired,\n  }\n\n  return compose(\n    reduxForm({\n      form: 'describeWork', // a unique identifier for this form\n      validate,\n      initialValues,\n      onSubmitFail: dispatchAndScrollToError,\n    }),\n    connect(mapStateToProps, mapDispatchToProps)\n  )(DescribeWorkDesktop)\n}\n"]}]}