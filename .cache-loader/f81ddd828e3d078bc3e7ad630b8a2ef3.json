{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/ReadMore.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/ReadMore.tsx","mtime":1530290903000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadMore = void 0;\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _Truncator = require(\"../../../../../../src/Components/Truncator\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar ReadMore =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReadMore, _React$Component);\n\n  function ReadMore(props) {\n    var _this;\n\n    _classCallCheck(this, ReadMore);\n\n    _this = _possibleConstructorReturn(this, (ReadMore.__proto__ || Object.getPrototypeOf(ReadMore)).call(this, props));\n    Object.defineProperty(_assertThisInitialized(_this), \"state\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: {\n        isExpanded: false\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"expandText\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value() {\n        _this.setState({\n          isExpanded: true\n        });\n      }\n    });\n    _this.state = {\n      isExpanded: props.isExpanded\n    };\n    return _this;\n  }\n\n  _createClass(ReadMore, [{\n    key: \"render\",\n    value: function render() {\n      var isExpanded = this.state.isExpanded;\n      var maxLineCount = this.props.maxLineCount;\n      return _react.default.createElement(Container, {\n        onClick: this.expandText,\n        isExpanded: true\n      }, isExpanded ? this.props.children : _react.default.createElement(_Truncator.Truncator, {\n        maxLineCount: maxLineCount,\n        ReadMoreLink: function ReadMoreLink() {\n          return _react.default.createElement(_ReadMoreLink, null, \"Read more\");\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return ReadMore;\n}(_react.default.Component);\n\nexports.ReadMore = ReadMore;\nObject.defineProperty(ReadMore, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    isExpanded: false,\n    maxLineCount: 3\n  }\n});\n\nvar _ReadMoreLink = function _ReadMoreLink(_ref) {\n  var children = _ref.children;\n  return (// TODO: Investigate why <Truncator />, when calling `renderToStaticMarkup`,\n    // breaks the context chain requiring us to wrap ReadMore in a <Theme />\n    _react.default.createElement(ReadMoreLinkContainer, null, \"...\", \" \", _react.default.createElement(_palette.Sans, {\n      size: \"2\",\n      weight: \"medium\"\n    }, children))\n  );\n};\n\nvar ReadMoreLinkContainer = _styledComponents.default.span.withConfig({\n  displayName: \"ReadMore__ReadMoreLinkContainer\",\n  componentId: \"s178fy9-0\"\n})([\"cursor:pointer;text-decoration:underline;display:inline-block;\"]);\n\nvar Container = _styledComponents.default.div.attrs({}).withConfig({\n  displayName: \"ReadMore__Container\",\n  componentId: \"s178fy9-1\"\n})([\"cursor:\", \";\"], function (p) {\n  return p.isExpanded ? \"auto\" : \"pointer\";\n});",{"version":3,"sources":["node_modules/@artsy/reaction/src/Styleguide/Components/ReadMore.tsx"],"names":["ReadMore","props","isExpanded","setState","state","maxLineCount","expandText","children","Component","ReadMoreLink","ReadMoreLinkContainer","span","Container","div","attrs","p"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;IAYaA,Q;;;;;AAUX,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gHAAMA,KAAN;AADiB;AAAA;AAAA;AAAA;AAAA,aATX;AACNC,oBAAY;AADN;AASW;AAAA;AAAA;AAAA;AAAA;AAAA,aAQN,iBAAM;AACjB,cAAKC,QAAL,CAAc;AACZD,sBAAY;AADA,SAAd;AAGD;AAZkB;AAGjB,UAAKE,KAAL,GAAa;AACXF,kBAAYD,MAAMC;AADP,KAAb;AAHiB;AAMlB;;;;6BAQQ;AAAA,UACCA,UADD,GACgB,KAAKE,KADrB,CACCF,UADD;AAAA,UAECG,YAFD,GAEkB,KAAKJ,KAFvB,CAECI,YAFD;AAIP,aACE,6BAAC,SAAD;AAAW,iBAAS,KAAKC,UAAzB;AAAqC;AAArC,SACGJ,aACC,KAAKD,KAAL,CAAWM,QADZ,GAGC;AACE,sBAAcF,YADhB;AAEE,sBAAc;AAAA,iBAAM,6BAAC,aAAD,oBAAN;AAAA;AAFhB,SAIG,KAAKJ,KAAL,CAAWM,QAJd,CAJJ,CADF;AAcD;;;;EA1C2B,eAAMC,S;;;sBAAvBR,Q;;;;SAKW;AACpBE,gBAAY,KADQ;AAEpBG,kBAAc;AAFM;;;AAwCxB,IAAMI,gBAAe,SAAfA,aAAe,OAAkB;AAAA,MAAfF,QAAe,QAAfA,QAAe;AACrC,SACE;AACA;AAEA,iCAAC,qBAAD,eACM,GADN,EAEE;AAAM,YAAK,GAAX;AAAe,cAAO;AAAtB,OACGA,QADH,CAFF;AAJF;AAWD,CAZD;;AAcA,IAAMG,wBAAwB,0BAAOC,IAA/B;AAAA;AAAA;AAAA,sEAAN;;AAMA,IAAMC,YAAY,0BAAOC,GAAP,CAAWC,KAAX,CAAgC,EAAhC,CAAZ;AAAA;AAAA;AAAA,qBACM;AAAA,SAAMC,EAAEb,UAAF,GAAe,MAAf,GAAwB,SAA9B;AAAA,CADN,CAAN","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Components/ReadMore.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport { Truncator } from \"Components/Truncator\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { DisplayProps } from \"styled-system\"\n\nexport interface ReadMoreProps extends DisplayProps {\n  isExpanded?: boolean\n  maxLineCount?: number\n}\n\nexport interface ReadMoreState {\n  isExpanded: boolean\n}\n\nexport class ReadMore extends React.Component<ReadMoreProps, ReadMoreState> {\n  state = {\n    isExpanded: false,\n  }\n\n  static defaultProps = {\n    isExpanded: false,\n    maxLineCount: 3,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isExpanded: props.isExpanded,\n    }\n  }\n\n  expandText = () => {\n    this.setState({\n      isExpanded: true,\n    })\n  }\n\n  render() {\n    const { isExpanded } = this.state\n    const { maxLineCount } = this.props\n\n    return (\n      <Container onClick={this.expandText} isExpanded>\n        {isExpanded ? (\n          this.props.children\n        ) : (\n          <Truncator\n            maxLineCount={maxLineCount}\n            ReadMoreLink={() => <ReadMoreLink>Read more</ReadMoreLink>}\n          >\n            {this.props.children}\n          </Truncator>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst ReadMoreLink = ({ children }) => {\n  return (\n    // TODO: Investigate why <Truncator />, when calling `renderToStaticMarkup`,\n    // breaks the context chain requiring us to wrap ReadMore in a <Theme />\n\n    <ReadMoreLinkContainer>\n      ...{\" \"}\n      <Sans size=\"2\" weight=\"medium\">\n        {children}\n      </Sans>\n    </ReadMoreLinkContainer>\n  )\n}\n\nconst ReadMoreLinkContainer = styled.span`\n  cursor: pointer;\n  text-decoration: underline;\n  display: inline-block;\n`\n\nconst Container = styled.div.attrs<ReadMoreState>({})`\n  cursor: ${p => (p.isExpanded ? \"auto\" : \"pointer\")};\n`\n"]}]}