{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/MediumFilter.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/MediumFilter.js","mtime":1521064653000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = exports.default = void 0;\n\nvar _BasicCheckbox2 = _interopRequireDefault(require(\"./BasicCheckbox\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _underscore = _interopRequireWildcard(require(\"underscore\"));\n\nvar _bemCnLite = _interopRequireDefault(require(\"bem-cn-lite\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _artworkBrowser = require(\"../../../actions/artworkBrowser\");\n\n// FIXME: Rewire\nvar BasicCheckbox = _BasicCheckbox2.default;\n\nfunction MediumFilter(props) {\n  var aggregatedMediums = props.aggregatedMediums,\n      allMediums = props.allMediums,\n      mediumIds = props.mediumIds,\n      updateMediumParamsAction = props.updateMediumParamsAction,\n      allMediumsSelected = props.allMediumsSelected,\n      initialMediumMap = props.initialMediumMap;\n  var b = (0, _bemCnLite.default)('auction-MediumFilter');\n  return _react.default.createElement(\"div\", {\n    className: b()\n  }, _react.default.createElement(\"div\", {\n    className: b('title')\n  }, \"Medium\"), _react.default.createElement(BasicCheckbox, {\n    key: allMediums.id,\n    item: allMediums,\n    onClick: updateMediumParamsAction,\n    checked: allMediumsSelected\n  }), _underscore.default.map(initialMediumMap, function (initialAgg) {\n    var mediumSelected = (0, _underscore.contains)(mediumIds, initialAgg.id);\n\n    var includedMedium = _underscore.default.find(aggregatedMediums, function (agg) {\n      return agg.id === initialAgg.id;\n    });\n\n    return _react.default.createElement(BasicCheckbox, {\n      key: initialAgg.id,\n      item: {\n        id: initialAgg.id,\n        name: initialAgg.name,\n        count: includedMedium && includedMedium.count\n      },\n      onClick: updateMediumParamsAction,\n      checked: mediumSelected,\n      disabled: includedMedium === undefined\n    });\n  }));\n}\n\nMediumFilter.propTypes = {\n  aggregatedMediums: _propTypes.default.array.isRequired,\n  allMediums: _propTypes.default.object.isRequired,\n  allMediumsSelected: _propTypes.default.bool.isRequired,\n  initialMediumMap: _propTypes.default.array.isRequired,\n  mediumIds: _propTypes.default.array.isRequired,\n  updateMediumParamsAction: _propTypes.default.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$artworkBrowser = state.artworkBrowser,\n      aggregatedMediums = _state$artworkBrowser.aggregatedMediums,\n      filterParams = _state$artworkBrowser.filterParams,\n      initialMediumMap = _state$artworkBrowser.initialMediumMap;\n  var mediumIds = filterParams.gene_ids;\n  var allMediums = {\n    id: 'mediums-all',\n    name: 'All'\n  };\n  var allMediumsSelected = mediumIds.length === 0;\n  return {\n    aggregatedMediums: aggregatedMediums,\n    allMediums: allMediums,\n    mediumIds: mediumIds,\n    allMediumsSelected: allMediumsSelected,\n    initialMediumMap: initialMediumMap\n  };\n};\n\nvar mapDispatchToProps = {\n  updateMediumParamsAction: _artworkBrowser.updateMediumParams\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MediumFilter);\n\nexports.default = _default;\nvar test = {\n  MediumFilter: MediumFilter\n};\nexports.test = test;",{"version":3,"sources":["src/desktop/apps/auction/components/artwork_browser/sidebar/MediumFilter.js"],"names":["BasicCheckbox","MediumFilter","props","aggregatedMediums","allMediums","mediumIds","updateMediumParamsAction","allMediumsSelected","initialMediumMap","b","id","map","initialAgg","mediumSelected","includedMedium","find","agg","name","count","undefined","propTypes","array","isRequired","object","bool","func","mapStateToProps","state","artworkBrowser","filterParams","gene_ids","length","mapDispatchToProps","test"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAIA,uCAAJ;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA,MAE1BC,iBAF0B,GAQxBD,KARwB,CAE1BC,iBAF0B;AAAA,MAG1BC,UAH0B,GAQxBF,KARwB,CAG1BE,UAH0B;AAAA,MAI1BC,SAJ0B,GAQxBH,KARwB,CAI1BG,SAJ0B;AAAA,MAK1BC,wBAL0B,GAQxBJ,KARwB,CAK1BI,wBAL0B;AAAA,MAM1BC,kBAN0B,GAQxBL,KARwB,CAM1BK,kBAN0B;AAAA,MAO1BC,gBAP0B,GAQxBN,KARwB,CAO1BM,gBAP0B;AAU5B,MAAMC,IAAI,wBAAM,sBAAN,CAAV;AAEA,SACE;AAAK,eAAWA;AAAhB,KACE;AAAK,eAAWA,EAAE,OAAF;AAAhB,cADF,EAKE,6BAAC,aAAD;AACE,SAAKL,WAAWM,EADlB;AAEE,UAAMN,UAFR;AAGE,aAASE,wBAHX;AAIE,aAASC;AAJX,IALF,EAaI,oBAAEI,GAAF,CAAMH,gBAAN,EAAwB,UAACI,UAAD,EAAgB;AACtC,QAAMC,iBAAiB,0BAASR,SAAT,EAAoBO,WAAWF,EAA/B,CAAvB;;AACA,QAAMI,iBAAiB,oBAAEC,IAAF,CAAOZ,iBAAP,EAA0B,UAACa,GAAD;AAAA,aAASA,IAAIN,EAAJ,KAAWE,WAAWF,EAA/B;AAAA,KAA1B,CAAvB;;AACA,WACE,6BAAC,aAAD;AACE,WAAKE,WAAWF,EADlB;AAEE,YAAM;AACJA,YAAIE,WAAWF,EADX;AAEJO,cAAML,WAAWK,IAFb;AAGJC,eAAOJ,kBAAkBA,eAAeI;AAHpC,OAFR;AAOE,eAASZ,wBAPX;AAQE,eAASO,cARX;AASE,gBAAUC,mBAAmBK;AAT/B,MADF;AAaD,GAhBD,CAbJ,CADF;AAkCD;;AAEDlB,aAAamB,SAAb,GAAyB;AACvBjB,qBAAmB,mBAAUkB,KAAV,CAAgBC,UADZ;AAEvBlB,cAAY,mBAAUmB,MAAV,CAAiBD,UAFN;AAGvBf,sBAAoB,mBAAUiB,IAAV,CAAeF,UAHZ;AAIvBd,oBAAkB,mBAAUa,KAAV,CAAgBC,UAJX;AAKvBjB,aAAW,mBAAUgB,KAAV,CAAgBC,UALJ;AAMvBhB,4BAA0B,mBAAUmB,IAAV,CAAeH;AANlB,CAAzB;;AASA,IAAMI,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,8BAO7BA,KAP6B,CAE/BC,cAF+B;AAAA,MAG7BzB,iBAH6B,yBAG7BA,iBAH6B;AAAA,MAI7B0B,YAJ6B,yBAI7BA,YAJ6B;AAAA,MAK7BrB,gBAL6B,yBAK7BA,gBAL6B;AASjC,MAAMH,YAAYwB,aAAaC,QAA/B;AACA,MAAM1B,aAAa;AAAEM,QAAI,aAAN;AAAqBO,UAAM;AAA3B,GAAnB;AACA,MAAMV,qBAAqBF,UAAU0B,MAAV,KAAqB,CAAhD;AAEA,SAAO;AACL5B,wCADK;AAELC,0BAFK;AAGLC,wBAHK;AAILE,0CAJK;AAKLC;AALK,GAAP;AAOD,CApBD;;AAsBA,IAAMwB,qBAAqB;AACzB1B;AADyB,CAA3B;;eAIe,yBACboB,eADa,EAEbM,kBAFa,EAGb/B,YAHa,C;;;AAKR,IAAMgC,OAAO;AAAEhC;AAAF,CAAb","file":"/Users/eve/development/force/src/desktop/apps/auction/components/artwork_browser/sidebar/MediumFilter.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import _BasicCheckbox from './BasicCheckbox'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport _, { contains } from 'underscore'\nimport block from 'bem-cn-lite'\nimport { connect } from 'react-redux'\nimport { updateMediumParams } from 'desktop/apps/auction/actions/artworkBrowser'\n\n// FIXME: Rewire\nlet BasicCheckbox = _BasicCheckbox\n\nfunction MediumFilter (props) {\n  const {\n    aggregatedMediums,\n    allMediums,\n    mediumIds,\n    updateMediumParamsAction,\n    allMediumsSelected,\n    initialMediumMap\n  } = props\n\n  const b = block('auction-MediumFilter')\n\n  return (\n    <div className={b()}>\n      <div className={b('title')}>\n        Medium\n      </div>\n\n      <BasicCheckbox\n        key={allMediums.id}\n        item={allMediums}\n        onClick={updateMediumParamsAction}\n        checked={allMediumsSelected}\n      />\n\n      {\n        _.map(initialMediumMap, (initialAgg) => {\n          const mediumSelected = contains(mediumIds, initialAgg.id)\n          const includedMedium = _.find(aggregatedMediums, (agg) => agg.id === initialAgg.id)\n          return (\n            <BasicCheckbox\n              key={initialAgg.id}\n              item={{\n                id: initialAgg.id,\n                name: initialAgg.name,\n                count: includedMedium && includedMedium.count\n              }}\n              onClick={updateMediumParamsAction}\n              checked={mediumSelected}\n              disabled={includedMedium === undefined}\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMediumFilter.propTypes = {\n  aggregatedMediums: PropTypes.array.isRequired,\n  allMediums: PropTypes.object.isRequired,\n  allMediumsSelected: PropTypes.bool.isRequired,\n  initialMediumMap: PropTypes.array.isRequired,\n  mediumIds: PropTypes.array.isRequired,\n  updateMediumParamsAction: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    artworkBrowser: {\n      aggregatedMediums,\n      filterParams,\n      initialMediumMap\n    }\n  } = state\n\n  const mediumIds = filterParams.gene_ids\n  const allMediums = { id: 'mediums-all', name: 'All' }\n  const allMediumsSelected = mediumIds.length === 0\n\n  return {\n    aggregatedMediums,\n    allMediums,\n    mediumIds,\n    allMediumsSelected,\n    initialMediumMap\n  }\n}\n\nconst mapDispatchToProps = {\n  updateMediumParamsAction: updateMediumParams\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MediumFilter)\n\nexport const test = { MediumFilter }\n"]}]}