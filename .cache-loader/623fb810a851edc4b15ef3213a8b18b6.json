{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/FormSwitcher.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/FormSwitcher.tsx","mtime":1530216371000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormSwitcher = void 0;\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Events = _interopRequireDefault(require(\"Utils/Events\"));\n\nvar _track = require(\"Utils/track\");\n\nvar _ForgotPasswordForm = require(\"../../../../../../src/Components/Authentication/Desktop/ForgotPasswordForm\");\n\nvar _LoginForm = require(\"../../../../../../src/Components/Authentication/Desktop/LoginForm\");\n\nvar _SignUpForm = require(\"../../../../../../src/Components/Authentication/Desktop/SignUpForm\");\n\nvar _ForgotPasswordForm2 = require(\"../../../../../../src/Components/Authentication/Mobile/ForgotPasswordForm\");\n\nvar _LoginForm2 = require(\"../../../../../../src/Components/Authentication/Mobile/LoginForm\");\n\nvar _SignUpForm2 = require(\"../../../../../../src/Components/Authentication/Mobile/SignUpForm\");\n\nvar _Types = require(\"./Types\");\n\nvar _dec, _class, _class2, _temp;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar FormSwitcher = (_dec = (0, _track.track)({}, {\n  dispatch: function dispatch(data) {\n    return _Events.default.postEvent(data);\n  }\n}), _dec(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormSwitcher, _React$Component);\n\n  function FormSwitcher(props) {\n    var _this;\n\n    _classCallCheck(this, FormSwitcher);\n\n    _this = _possibleConstructorReturn(this, (FormSwitcher.__proto__ || Object.getPrototypeOf(FormSwitcher)).call(this, props));\n    Object.defineProperty(_assertThisInitialized(_this), \"handleTypeChange\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(newType) {\n        var _this$props = _this.props,\n            isMobile = _this$props.isMobile,\n            isStatic = _this$props.isStatic,\n            handleTypeChange = _this$props.handleTypeChange,\n            options = _this$props.options;\n\n        if (isMobile || isStatic) {\n          window.location.assign(\"/\".concat(newType, \"?\").concat(_querystring.default.stringify(options)));\n        } else {\n          _this.setState({\n            type: newType\n          });\n\n          if (handleTypeChange) {\n            handleTypeChange(newType);\n          }\n        }\n      }\n    });\n    _this.state = {\n      type: _this.props.type\n    };\n    return _this;\n  }\n\n  _createClass(FormSwitcher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props = this.props,\n          _props$options = _props.options,\n          contextModule = _props$options.contextModule,\n          copy = _props$options.copy,\n          destination = _props$options.destination,\n          redirectTo = _props$options.redirectTo,\n          intent = _props$options.intent,\n          trigger = _props$options.trigger,\n          triggerSeconds = _props$options.triggerSeconds,\n          type = _props.type,\n          tracking = _props.tracking; // Analytics\n\n      var event = Object.assign({\n        action: \"Auth impression\",\n        type: type,\n        context_module: contextModule,\n        modal_copy: copy,\n        trigger: trigger || \"click\",\n        trigger_seconds: triggerSeconds,\n        intent: intent,\n        auth_redirect: redirectTo || destination\n      }, type === \"signup\" ? {\n        onboarding: !redirectTo\n      } : null);\n\n      if (tracking) {\n        tracking.trackEvent(event);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.type !== nextProps.type && nextProps.type) {\n        this.setState({\n          type: nextProps.type\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          error = _props2.error,\n          isMobile = _props2.isMobile,\n          onFacebookLogin = _props2.onFacebookLogin,\n          onTwitterLogin = _props2.onTwitterLogin;\n      var Form;\n\n      switch (this.state.type) {\n        case _Types.ModalType.login:\n          Form = isMobile ? _LoginForm2.MobileLoginForm : _LoginForm.LoginForm;\n          break;\n\n        case _Types.ModalType.signup:\n          Form = isMobile ? _SignUpForm2.MobileSignUpForm : _SignUpForm.SignUpForm;\n          break;\n\n        case _Types.ModalType.forgot:\n          Form = isMobile ? _ForgotPasswordForm2.MobileForgotPasswordForm : _ForgotPasswordForm.ForgotPasswordForm;\n          break;\n\n        default:\n          return null;\n      }\n\n      var _props3 = this.props,\n          handleSubmit = _props3.handleSubmit,\n          values = _props3.values;\n      var defaultValues = {\n        email: values.email || \"\",\n        password: values.password || \"\",\n        name: values.name || \"\",\n        accepted_terms_of_service: values.accepted_terms_of_service || false\n      };\n      return _react.default.createElement(Form, {\n        error: error,\n        values: defaultValues,\n        handleTypeChange: this.handleTypeChange,\n        handleSubmit: handleSubmit,\n        onFacebookLogin: onFacebookLogin,\n        onTwitterLogin: onTwitterLogin\n      });\n    }\n  }]);\n\n  return FormSwitcher;\n}(_react.default.Component), Object.defineProperty(_class2, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    values: {}\n  }\n}), _temp)) || _class);\nexports.FormSwitcher = FormSwitcher;",{"version":3,"sources":["node_modules/@artsy/reaction/src/Components/Authentication/FormSwitcher.tsx"],"names":["FormSwitcher","dispatch","postEvent","data","props","newType","isMobile","isStatic","handleTypeChange","options","window","location","assign","stringify","setState","type","state","contextModule","copy","destination","redirectTo","intent","trigger","triggerSeconds","tracking","event","Object","action","context_module","modal_copy","trigger_seconds","auth_redirect","onboarding","trackEvent","nextProps","error","onFacebookLogin","onTwitterLogin","Form","login","signup","forgot","handleSubmit","values","defaultValues","email","password","name","accepted_terms_of_service","Component"],"mappings":"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","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Components/Authentication/FormSwitcher.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import qs from \"querystring\"\nimport React from \"react\"\nimport Events from \"Utils/Events\"\nimport { track } from \"Utils/track\"\n\nimport { ForgotPasswordForm } from \"Components/Authentication/Desktop/ForgotPasswordForm\"\nimport { LoginForm } from \"Components/Authentication/Desktop/LoginForm\"\nimport { SignUpForm } from \"Components/Authentication/Desktop/SignUpForm\"\nimport { MobileForgotPasswordForm } from \"Components/Authentication/Mobile/ForgotPasswordForm\"\nimport { MobileLoginForm } from \"Components/Authentication/Mobile/LoginForm\"\nimport { MobileSignUpForm } from \"Components/Authentication/Mobile/SignUpForm\"\nimport {\n  FormComponentType,\n  InputValues,\n  ModalOptions,\n  ModalType,\n  SubmitHandler,\n} from \"./Types\"\n\nexport interface FormSwitcherProps {\n  error?: string\n  handleSubmit: SubmitHandler\n  handleTypeChange?: (e: string) => void\n  isMobile?: boolean\n  isStatic?: boolean\n  onFacebookLogin?: (e: Event) => void\n  onTwitterLogin?: (e: Event) => void\n  options: ModalOptions\n  tracking?: any\n  type: ModalType\n  values?: InputValues\n}\n\nexport interface State {\n  type?: ModalType\n}\n\n@track({}, { dispatch: data => Events.postEvent(data) })\nexport class FormSwitcher extends React.Component<FormSwitcherProps, State> {\n  static defaultProps: Partial<FormSwitcherProps> = {\n    values: {},\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: this.props.type,\n    }\n  }\n\n  componentDidMount() {\n    const {\n      options: {\n        contextModule,\n        copy,\n        destination,\n        redirectTo,\n        intent,\n        trigger,\n        triggerSeconds,\n      },\n      type,\n      tracking,\n    } = this.props\n\n    // Analytics\n    const event = Object.assign(\n      {\n        action: \"Auth impression\",\n        type,\n        context_module: contextModule,\n        modal_copy: copy,\n        trigger: trigger || \"click\",\n        trigger_seconds: triggerSeconds,\n        intent,\n        auth_redirect: redirectTo || destination,\n      },\n      type === \"signup\"\n        ? {\n            onboarding: !redirectTo,\n          }\n        : null\n    )\n    if (tracking) {\n      tracking.trackEvent(event)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type && nextProps.type) {\n      this.setState({\n        type: nextProps.type,\n      })\n    }\n  }\n\n  handleTypeChange = (newType: ModalType) => {\n    const { isMobile, isStatic, handleTypeChange, options } = this.props\n\n    if (isMobile || isStatic) {\n      window.location.assign(`/${newType}?${qs.stringify(options)}`)\n    } else {\n      this.setState({ type: newType })\n      if (handleTypeChange) {\n        handleTypeChange(newType)\n      }\n    }\n  }\n\n  render() {\n    const { error, isMobile, onFacebookLogin, onTwitterLogin } = this.props\n\n    let Form: FormComponentType\n    switch (this.state.type) {\n      case ModalType.login:\n        Form = isMobile ? MobileLoginForm : LoginForm\n        break\n      case ModalType.signup:\n        Form = isMobile ? MobileSignUpForm : SignUpForm\n        break\n      case ModalType.forgot:\n        Form = isMobile ? MobileForgotPasswordForm : ForgotPasswordForm\n        break\n      default:\n        return null\n    }\n\n    const { handleSubmit, values } = this.props\n    const defaultValues = {\n      email: values.email || \"\",\n      password: values.password || \"\",\n      name: values.name || \"\",\n      accepted_terms_of_service: values.accepted_terms_of_service || false,\n    }\n\n    return (\n      <Form\n        error={error}\n        values={defaultValues}\n        handleTypeChange={this.handleTypeChange}\n        handleSubmit={handleSubmit}\n        onFacebookLogin={onFacebookLogin}\n        onTwitterLogin={onTwitterLogin}\n      />\n    )\n  }\n}\n"]}]}