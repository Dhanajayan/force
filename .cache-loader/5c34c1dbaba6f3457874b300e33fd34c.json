{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/src/desktop/lib/global_react_modules.js","dependencies":[{"path":"/Users/eve/development/force/src/desktop/lib/global_react_modules.js","mtime":1527185816000},{"path":"/Users/eve/development/force/.babelrc","mtime":1528124541000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Artwork = exports.Fillwidth = exports.ArtworkGrid = exports.TooltipQuestion = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime/core-js/object/get-prototype-of\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Artwork = require(\"@artsy/reaction/dist/Components/Artwork\");\n\nvar _ArtworkGrid = require(\"@artsy/reaction/dist/Components/ArtworkGrid\");\n\nvar _Artsy = require(\"@artsy/reaction/dist/Components/Artsy\");\n\nvar _Help = require(\"@artsy/reaction/dist/Assets/Icons/Help\");\n\nvar _Tooltip = require(\"@artsy/reaction/dist/Components/Tooltip\");\n\nvar _sharify = require(\"sharify\");\n\nvar TooltipQuestion = function TooltipQuestion(props) {\n  return _react.default.createElement(_Tooltip.Tooltip, props, _react.default.createElement(_Help.Help, null));\n};\n\nexports.TooltipQuestion = TooltipQuestion;\n\nvar ArtworkGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2.default)(ArtworkGrid, _Component);\n\n  function ArtworkGrid(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ArtworkGrid);\n    _this = (0, _possibleConstructorReturn2.default)(this, (ArtworkGrid.__proto__ || (0, _getPrototypeOf.default)(ArtworkGrid)).call(this, props));\n    Object.defineProperty((0, _assertThisInitialized2.default)(_this), \"appendArtworks\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(artworks) {\n        _this.setState({\n          artworks: artworks\n        });\n      }\n    });\n    _this.state = {\n      artworks: props.artworks || [] // NOTE: Reaction's ArtworkGrid has its own conception of infinite scroll\n      // which is enabled when `onLoadMore` is passed in. Since we're detecting\n      // scroll thresholds from backbone and thus externally, this callback can\n      // be used instead. See desktop/components/artwork_masonry/view.coffee for\n      // an example implementation\n\n    };\n\n    if (props.onAppendArtworks) {\n      props.onAppendArtworks(_this.appendArtworks);\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ArtworkGrid, [{\n    key: \"render\",\n    value: function render() {\n      var artworks = mapToRelayConnection(this.state.artworks);\n      return _react.default.createElement(_Artsy.ContextProvider, {\n        currentUser: _sharify.data.CURRENT_USER\n      }, _react.default.createElement(_ArtworkGrid.ArtworkGrid, (0, _extends2.default)({}, this.props, {\n        artworks: artworks,\n        useRelay: false\n      })));\n    }\n  }]);\n  return ArtworkGrid;\n}(_react.Component);\n\nexports.ArtworkGrid = ArtworkGrid;\nObject.defineProperty(ArtworkGrid, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    artworks: _propTypes.default.array.isRequired\n  }\n});\n\nvar Fillwidth = function Fillwidth(props) {\n  if (typeof window !== 'undefined') {\n    var _require = require('@artsy/reaction/dist/Components/Artwork/Fillwidth'),\n        ReactionFillWidth = _require.Fillwidth;\n\n    var artworks = mapToRelayConnection(props.artworks); // eslint-disable-line\n\n    return _react.default.createElement(_Artsy.ContextProvider, {\n      currentUser: _sharify.data.CURRENT_USER\n    }, _react.default.createElement(ReactionFillWidth, (0, _extends2.default)({}, props, {\n      artworks: artworks,\n      useRelay: false\n    })));\n  } else {\n    return '';\n  }\n};\n\nexports.Fillwidth = Fillwidth;\n\nvar Artwork = function Artwork(props) {\n  return _react.default.createElement(_Artsy.ContextProvider, {\n    currentUser: _sharify.data.CURRENT_USER\n  }, _react.default.createElement(_Artwork.Artwork, (0, _extends2.default)({}, props, {\n    useRelay: false\n  })));\n}; // Helpers\n// Ensure that old artwork collections conform to new Relay connection api\n\n\nexports.Artwork = Artwork;\n\nvar mapToRelayConnection = function mapToRelayConnection(artworks) {\n  return {\n    edges: artworks.map(function (artwork) {\n      return {\n        node: artwork\n      };\n    })\n  };\n};",{"version":3,"sources":["src/desktop/lib/global_react_modules.js"],"names":["TooltipQuestion","props","ArtworkGrid","setState","artworks","state","onAppendArtworks","appendArtworks","mapToRelayConnection","CURRENT_USER","array","isRequired","Fillwidth","window","require","ReactionFillWidth","Artwork","edges","map","node","artwork"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,kBAAkB,SAAlBA,eAAkB,QAAS;AACtC,SACE,+CAAaC,KAAb,EACE,8CADF,CADF;AAKD,CANM;;;;IAQMC,W;;;;;AAKX,uBAAYD,KAAZ,EAAmB;AAAA;;AAAA;AACjB,2IAAMA,KAAN;AADiB;AAAA;AAAA;AAAA;AAAA,aAiBF,yBAAY;AAC3B,cAAKE,QAAL,CAAc;AACZC;AADY,SAAd;AAGD;AArBkB;AAGjB,UAAKC,KAAL,GAAa;AACXD,gBAAUH,MAAMG,QAAN,IAAkB,EADjB,CAIb;AACA;AACA;AACA;AACA;;AARa,KAAb;;AASA,QAAIH,MAAMK,gBAAV,EAA4B;AAC1BL,YAAMK,gBAAN,CAAuB,MAAKC,cAA5B;AACD;;AAdgB;AAelB;;;;6BAQQ;AACP,UAAMH,WAAWI,qBAAqB,KAAKH,KAAL,CAAWD,QAAhC,CAAjB;AAEA,aACE;AAAiB,qBAAa,cAAGK;AAAjC,SACE,kFACM,KAAKR,KADX;AAEE,kBAAUG,QAFZ;AAGE,kBAAU;AAHZ,SADF,CADF;AASD;;;;;;sBAxCUF,W;;;;SACQ;AACjBE,cAAU,mBAAUM,KAAV,CAAgBC;AADT;;;AA0Cd,IAAMC,YAAY,SAAZA,SAAY,QAAS;AAChC,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAAA,mBAG7BC,QAAQ,mDAAR,CAH6B;AAAA,QAEpBC,iBAFoB,YAE/BH,SAF+B;;AAKjC,QAAMR,WAAWI,qBAAqBP,MAAMG,QAA3B,CAAjB,CALiC,CAKqB;;AAEtD,WACE;AAAiB,mBAAa,cAAGK;AAAjC,OACE,6BAAC,iBAAD,6BAAuBR,KAAvB;AAA8B,gBAAUG,QAAxC;AAAkD,gBAAU;AAA5D,OADF,CADF;AAKD,GAZD,MAYO;AACL,WAAO,EAAP;AACD;AACF,CAhBM;;;;AAkBA,IAAMY,UAAU,SAAVA,OAAU,QAAS;AAC9B,SACE;AAAiB,iBAAa,cAAGP;AAAjC,KACE,0EAAqBR,KAArB;AAA4B,cAAU;AAAtC,KADF,CADF;AAKD,CANM,C,CAQP;AAEA;;;;;AACA,IAAMO,uBAAuB,SAAvBA,oBAAuB,WAAY;AACvC,SAAO;AACLS,WAAOb,SAASc,GAAT,CAAa,mBAAW;AAC7B,aAAO;AACLC,cAAMC;AADD,OAAP;AAGD,KAJM;AADF,GAAP;AAOD,CARD","file":"/Users/eve/development/force/src/desktop/lib/global_react_modules.js","sourceRoot":"/Users/eve/development/force","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Artwork as ReactionArtwork } from '@artsy/reaction/dist/Components/Artwork'\nimport { ArtworkGrid as ReactionArtworkGrid } from '@artsy/reaction/dist/Components/ArtworkGrid'\nimport { ContextProvider } from '@artsy/reaction/dist/Components/Artsy'\nimport { Help } from '@artsy/reaction/dist/Assets/Icons/Help'\nimport { Tooltip } from '@artsy/reaction/dist/Components/Tooltip'\nimport { data as sd } from 'sharify'\n\nexport const TooltipQuestion = props => {\n  return (\n    <Tooltip {...props}>\n      <Help />\n    </Tooltip>\n  )\n}\n\nexport class ArtworkGrid extends Component {\n  static propTypes = {\n    artworks: PropTypes.array.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      artworks: props.artworks || [],\n    }\n\n    // NOTE: Reaction's ArtworkGrid has its own conception of infinite scroll\n    // which is enabled when `onLoadMore` is passed in. Since we're detecting\n    // scroll thresholds from backbone and thus externally, this callback can\n    // be used instead. See desktop/components/artwork_masonry/view.coffee for\n    // an example implementation\n    if (props.onAppendArtworks) {\n      props.onAppendArtworks(this.appendArtworks)\n    }\n  }\n\n  appendArtworks = artworks => {\n    this.setState({\n      artworks,\n    })\n  }\n\n  render() {\n    const artworks = mapToRelayConnection(this.state.artworks)\n\n    return (\n      <ContextProvider currentUser={sd.CURRENT_USER}>\n        <ReactionArtworkGrid\n          {...this.props}\n          artworks={artworks}\n          useRelay={false}\n        />\n      </ContextProvider>\n    )\n  }\n}\n\nexport const Fillwidth = props => {\n  if (typeof window !== 'undefined') {\n    const {\n      Fillwidth: ReactionFillWidth,\n    } = require('@artsy/reaction/dist/Components/Artwork/Fillwidth')\n\n    const artworks = mapToRelayConnection(props.artworks) // eslint-disable-line\n\n    return (\n      <ContextProvider currentUser={sd.CURRENT_USER}>\n        <ReactionFillWidth {...props} artworks={artworks} useRelay={false} />\n      </ContextProvider>\n    )\n  } else {\n    return ''\n  }\n}\n\nexport const Artwork = props => {\n  return (\n    <ContextProvider currentUser={sd.CURRENT_USER}>\n      <ReactionArtwork {...props} useRelay={false} />\n    </ContextProvider>\n  )\n}\n\n// Helpers\n\n// Ensure that old artwork collections conform to new Relay connection api\nconst mapToRelayConnection = artworks => {\n  return {\n    edges: artworks.map(artwork => {\n      return {\n        node: artwork,\n      }\n    }),\n  }\n}\n"]}]}