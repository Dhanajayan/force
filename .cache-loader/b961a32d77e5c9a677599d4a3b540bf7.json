{"remainingRequest":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Elements/Button.tsx","dependencies":[{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Elements/Button.tsx","mtime":1530204737000},{"path":"/Users/eve/development/force/node_modules/@artsy/reaction/.babelrc","mtime":1529423546000},{"path":"/Users/eve/development/force/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/eve/development/force/node_modules/babel-loader/lib/index.js","mtime":1509489566000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonBase = exports.Button = void 0;\n\nvar _pick2 = _interopRequireDefault(require(\"lodash/fp/pick\"));\n\nvar _palette = require(\"@artsy/palette\");\n\nvar _Spinner = _interopRequireDefault(require(\"../../../../../../src/Components/Spinner\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _class, _temp;\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"default\"] = \"medium\";\n  ButtonSize[\"small\"] = \"small\";\n  ButtonSize[\"medium\"] = \"medium\";\n  ButtonSize[\"large\"] = \"large\";\n})(ButtonSize || (ButtonSize = {}));\n\nvar ButtonVariant;\n\n(function (ButtonVariant) {\n  ButtonVariant[\"default\"] = \"primaryBlack\";\n  ButtonVariant[\"primaryBlack\"] = \"primaryBlack\";\n  ButtonVariant[\"primaryWhite\"] = \"primaryWhite\";\n  ButtonVariant[\"secondaryGray\"] = \"secondaryGray\";\n  ButtonVariant[\"secondaryOutline\"] = \"secondaryOutline\";\n})(ButtonVariant || (ButtonVariant = {}));\n\nvar Button = (0, _styledComponents.default)((_temp = _class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.props.size;\n\n      switch (size) {\n        case ButtonSize.small:\n          return {\n            height: \"26px\",\n            size: 2,\n            px: 1\n          };\n\n        case ButtonSize.medium:\n          return {\n            height: \"41px\",\n            size: \"3t\",\n            px: 2\n          };\n\n        case ButtonSize.large:\n          return {\n            height: \"50px\",\n            size: \"3t\",\n            px: 3\n          };\n\n        default:\n      }\n    }\n  }, {\n    key: \"getVariant\",\n    value: function getVariant() {\n      var variant = this.props.variant;\n\n      switch (variant) {\n        case ButtonVariant.primaryBlack:\n          return (0, _styledComponents.css)([\"\", \";\"], function (props) {\n            var colors = props.theme.colors;\n            return \"\\n                background-color: \".concat(colors.black100, \";\\n                border-color: \").concat(colors.black100, \";\\n                color: \").concat(colors.white100, \";\\n\\n                &:hover {\\n                  background-color: \").concat(colors.purple100, \";\\n                  border-color: \").concat(colors.purple100, \";\\n                  color: \").concat(colors.white100, \";\\n                }\\n              \");\n          });\n\n        case ButtonVariant.primaryWhite:\n          return (0, _styledComponents.css)([\"\", \";\"], function (props) {\n            var colors = props.theme.colors;\n            return \"\\n                background-color: \".concat(colors.white100, \";\\n                border-color: \").concat(colors.white100, \";\\n                color: \").concat(colors.black100, \";\\n\\n                &:hover {\\n                  background-color: \").concat(colors.purple100, \";\\n                  border-color: \").concat(colors.purple100, \";\\n                  color: \").concat(colors.white100, \";\\n                }\\n              \");\n          });\n\n        case ButtonVariant.secondaryGray:\n          return (0, _styledComponents.css)([\"\", \";\"], function (props) {\n            var colors = props.theme.colors;\n            return \"\\n              background-color: \".concat(colors.black10, \";\\n              border-color: \").concat(colors.black10, \";\\n              color: \").concat(colors.black100, \";\\n\\n              &:hover {\\n                background-color: \").concat(colors.black30, \";\\n                border-color: \").concat(colors.black30, \";\\n                color: \").concat(colors.black100, \";\\n              }\\n            \");\n          });\n\n        case ButtonVariant.secondaryOutline:\n          return (0, _styledComponents.css)([\"\", \";\"], function (props) {\n            var colors = props.theme.colors;\n            return \"\\n                background-color: \".concat(colors.white100, \";\\n                border-color: \").concat(colors.black10, \";\\n                color: \").concat(colors.black100, \";\\n\\n                &:hover {\\n                  background-color: \").concat(colors.white100, \";\\n                  border-color: \").concat(colors.black100, \";\\n                  color: \").concat(colors.black100, \";\\n                }\\n              \");\n          });\n\n        default:\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var buttonProps = _extends({}, this.props, this.getSize(), {\n        buttonSize: this.props.size,\n        variantStyles: this.getVariant()\n      });\n\n      return _react.default.createElement(ButtonBase, buttonProps, this.props.children);\n    }\n  }]);\n\n  return _class;\n}(_react.Component), Object.defineProperty(_class, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    size: ButtonSize.default,\n    variant: ButtonVariant.default\n  }\n}), _temp)).withConfig({\n  displayName: \"Button\",\n  componentId: \"k88h3f-0\"\n})([\"\", \";\"], _styledSystem.space);\nexports.Button = Button;\n\nvar ButtonBase =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ButtonBase, _Component2);\n\n  function ButtonBase() {\n    _classCallCheck(this, ButtonBase);\n\n    return _possibleConstructorReturn(this, (ButtonBase.__proto__ || Object.getPrototypeOf(ButtonBase)).apply(this, arguments));\n  }\n\n  _createClass(ButtonBase, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          loading = _props.loading,\n          disabled = _props.disabled,\n          rest = _objectWithoutProperties(_props, [\"children\", \"loading\", \"disabled\"]);\n\n      var textProps = (0, _pick2.default)([\"color\", \"size\", \"weight\"], rest);\n      var loadingClass = loading ? \"loading\" : \"\";\n      var disabledClass = disabled ? \"disabled\" : \"\";\n      return _react.default.createElement(Container, _extends({}, rest, {\n        className: [loadingClass, disabledClass].join(\" \")\n      }), loading && _react.default.createElement(_Spinner.default, {\n        spinnerSize: this.props.buttonSize\n      }), _react.default.createElement(_palette.Sans, _extends({\n        weight: \"medium\"\n      }, textProps, {\n        pt: \"1px\"\n      }), children));\n    }\n  }]);\n\n  return ButtonBase;\n}(_react.Component);\n\nexports.ButtonBase = ButtonBase;\nObject.defineProperty(ButtonBase, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    border: 1,\n    borderRadius: 3\n  }\n});\n\nvar Container = _styledComponents.default.button.attrs({}).withConfig({\n  displayName: \"Button__Container\",\n  componentId: \"k88h3f-1\"\n})([\"position:relative;\", \";\", \";\", \";\", \";\", \";\", \";cursor:pointer;\", \";\", \";&.loading{transition:none;background-color:transparent;color:transparent;border:0;}&.disabled{\", \";}\"], _styledSystem.borders, _styledSystem.borderRadius, _styledSystem.space, _styledSystem.textAlign, _styledSystem.width, _styledSystem.height, function (props) {\n  if (!props.loading) {\n    return \"\\n        transition: 0.25s ease;\\n      \";\n  }\n}, function (props) {\n  return props.variantStyles;\n}, function (props) {\n  var colors = props.theme.colors;\n  return \"\\n        background-color: \".concat(colors.black10, \";\\n        border-color: \").concat(colors.black10, \";\\n        color: \").concat(colors.white100, \";\\n        pointer-events: none;\\n      \");\n});",{"version":3,"sources":["node_modules/@artsy/reaction/src/Styleguide/Elements/Button.tsx"],"names":["ButtonSize","ButtonVariant","Button","size","props","small","height","px","medium","large","variant","primaryBlack","colors","theme","black100","white100","purple100","primaryWhite","secondaryGray","black10","black30","secondaryOutline","buttonProps","getSize","buttonSize","variantStyles","getVariant","children","default","ButtonBase","loading","disabled","rest","textProps","loadingClass","disabledClass","join","border","borderRadius","Container","button","attrs"],"mappings":"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","file":"/Users/eve/development/force/node_modules/@artsy/reaction/src/Styleguide/Elements/Button.tsx","sourceRoot":"/Users/eve/development/force","sourcesContent":["import { Sans } from \"@artsy/palette\"\nimport Spinner from \"Components/Spinner\"\nimport { pick } from \"lodash/fp\"\nimport React, { Component, ReactNode } from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport {\n  BorderProps,\n  borderRadius,\n  BorderRadiusProps,\n  borders,\n  height,\n  HeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n  width,\n  WidthProps,\n} from \"styled-system\"\n\nenum ButtonSize {\n  default = \"medium\",\n  small = \"small\",\n  medium = \"medium\",\n  large = \"large\",\n}\n\nenum ButtonVariant {\n  default = \"primaryBlack\",\n  primaryBlack = \"primaryBlack\",\n  primaryWhite = \"primaryWhite\",\n  secondaryGray = \"secondaryGray\",\n  secondaryOutline = \"secondaryOutline\",\n}\n\nexport interface ButtonProps extends ButtonBaseProps {\n  children: ReactNode\n  size?: any // FIXME, ButtonSize\n  variant?: any // FIXME, ButtonVariant?\n}\n\nexport const Button = styled(\n  class extends Component<ButtonProps> {\n    static defaultProps = {\n      size: ButtonSize.default,\n      variant: ButtonVariant.default,\n    }\n\n    getSize() {\n      const { size } = this.props\n\n      switch (size) {\n        case ButtonSize.small:\n          return { height: \"26px\", size: 2, px: 1 }\n        case ButtonSize.medium:\n          return { height: \"41px\", size: \"3t\", px: 2 }\n        case ButtonSize.large:\n          return { height: \"50px\", size: \"3t\", px: 3 }\n        default:\n      }\n    }\n\n    getVariant() {\n      const { variant } = this.props\n\n      switch (variant) {\n        case ButtonVariant.primaryBlack:\n          return css`\n            ${props => {\n              const { colors } = props.theme\n\n              return `\n                background-color: ${colors.black100};\n                border-color: ${colors.black100};\n                color: ${colors.white100};\n\n                &:hover {\n                  background-color: ${colors.purple100};\n                  border-color: ${colors.purple100};\n                  color: ${colors.white100};\n                }\n              `\n            }};\n          `\n        case ButtonVariant.primaryWhite:\n          return css`\n            ${props => {\n              const { colors } = props.theme\n\n              return `\n                background-color: ${colors.white100};\n                border-color: ${colors.white100};\n                color: ${colors.black100};\n\n                &:hover {\n                  background-color: ${colors.purple100};\n                  border-color: ${colors.purple100};\n                  color: ${colors.white100};\n                }\n              `\n            }};\n          `\n        case ButtonVariant.secondaryGray:\n          return css`\n            ${props => {\n              const { colors } = props.theme\n\n              return `\n              background-color: ${colors.black10};\n              border-color: ${colors.black10};\n              color: ${colors.black100};\n\n              &:hover {\n                background-color: ${colors.black30};\n                border-color: ${colors.black30};\n                color: ${colors.black100};\n              }\n            `\n            }};\n          `\n        case ButtonVariant.secondaryOutline:\n          return css`\n            ${props => {\n              const { colors } = props.theme\n\n              return `\n                background-color: ${colors.white100};\n                border-color: ${colors.black10};\n                color: ${colors.black100};\n\n                &:hover {\n                  background-color: ${colors.white100};\n                  border-color: ${colors.black100};\n                  color: ${colors.black100};\n                }\n              `\n            }};\n          `\n        default:\n      }\n    }\n\n    render() {\n      const buttonProps = {\n        ...this.props,\n        ...this.getSize(),\n        buttonSize: this.props.size,\n        variantStyles: this.getVariant(),\n      }\n\n      return <ButtonBase {...buttonProps}>{this.props.children}</ButtonBase>\n    }\n  }\n)`\n  ${space};\n`\n\nexport interface ButtonBaseProps\n  extends BorderProps,\n    BorderRadiusProps,\n    SpaceProps,\n    TextAlignProps,\n    WidthProps,\n    HeightProps {\n  buttonSize?: any // FIXME\n  loading?: boolean\n  disabled?: boolean\n  onClick?: () => void\n  variantStyles?: any // FIXME\n}\n\nexport class ButtonBase extends Component<ButtonBaseProps> {\n  static defaultProps = {\n    border: 1,\n    borderRadius: 3,\n  }\n\n  render() {\n    const { children, loading, disabled, ...rest } = this.props\n    const textProps = pick([\"color\", \"size\", \"weight\"], rest)\n    const loadingClass = loading ? \"loading\" : \"\"\n    const disabledClass = disabled ? \"disabled\" : \"\"\n\n    return (\n      <Container {...rest} className={[loadingClass, disabledClass].join(\" \")}>\n        {loading && <Spinner spinnerSize={this.props.buttonSize} />}\n\n        <Sans weight=\"medium\" {...textProps} pt=\"1px\">\n          {children}\n        </Sans>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.button.attrs<ButtonBaseProps>({})`\n  position: relative;\n\n  ${borders};\n  ${borderRadius};\n  ${space};\n  ${textAlign};\n  ${width};\n  ${height};\n\n  cursor: pointer;\n\n  ${props => {\n    if (!props.loading) {\n      return `\n        transition: 0.25s ease;\n      `\n    }\n  }};\n\n  ${props => props.variantStyles};\n\n  &.loading {\n    transition: none;\n    background-color: transparent;\n    color: transparent;\n    border: 0;\n  }\n\n  &.disabled {\n    ${props => {\n      const { colors } = props.theme\n\n      return `\n        background-color: ${colors.black10};\n        border-color: ${colors.black10};\n        color: ${colors.white100};\n        pointer-events: none;\n      `\n    }};\n  }\n`\n"]}]}